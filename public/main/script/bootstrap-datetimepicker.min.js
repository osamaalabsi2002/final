(function(e) {
    function t(e, t, a) {
        switch (arguments.length) {
            case 2:
                return null != e ? e : t;
            case 3:
                return null != e ? e : null != t ? t : a;
            default:
                throw new Error("Implement me")
        }
    }

    function a(e, t) {
        return bt.call(e, t)
    }

    function n() {
        return {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1
        }
    }

    function r(e) {
        Dt.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
    }

    function s(e, t) {
        var a = !0;
        return h(function() {
            return a && (r(e), a = !1), t.apply(this, arguments)
        }, t)
    }

    function i(e, t) {
        La[e] || (r(t), La[e] = !0)
    }

    function d(e, t) {
        return function(a) {
            return p(e.call(this, a), t)
        }
    }

    function o(e, t) {
        return function(a) {
            return this.localeData().ordinal(e.call(this, a), t)
        }
    }

    function _(e, t) {
        var a, n, r = 12 * (t.year() - e.year()) + (t.month() - e.month()),
            s = e.clone().add(r, "months");
        return 0 > t - s ? (a = e.clone().add(r - 1, "months"), n = (t - s) / (s - a)) : (a = e.clone().add(r + 1, "months"), n = (t - s) / (a - s)), -(r + n)
    }

    function u(e, t, a) {
        var n;
        return null == a ? t : null != e.meridiemHour ? e.meridiemHour(t, a) : null != e.isPM ? (n = e.isPM(a), n && 12 > t && (t += 12), n || 12 !== t || (t = 0), t) : t
    }

    function l() {}

    function m(e, t) {
        t !== !1 && P(e), M(this, e), this._d = new Date(+e._d), Ya === !1 && (Ya = !0, Dt.updateOffset(this), Ya = !1)
    }

    function c(e) {
        var t = v(e),
            a = t.year || 0,
            n = t.quarter || 0,
            r = t.month || 0,
            s = t.week || 0,
            i = t.day || 0,
            d = t.hour || 0,
            o = t.minute || 0,
            _ = t.second || 0,
            u = t.millisecond || 0;
        this._milliseconds = +u + 1e3 * _ + 6e4 * o + 36e5 * d, this._days = +i + 7 * s, this._months = +r + 3 * n + 12 * a, this._data = {}, this._locale = Dt.localeData(), this._bubble()
    }

    function h(e, t) {
        for (var n in t) a(t, n) && (e[n] = t[n]);
        return a(t, "toString") && (e.toString = t.toString), a(t, "valueOf") && (e.valueOf = t.valueOf), e
    }

    function M(e, t) {
        var a, n, r;
        if ("undefined" != typeof t._isAMomentObject && (e._isAMomentObject = t._isAMomentObject), "undefined" != typeof t._i && (e._i = t._i), "undefined" != typeof t._f && (e._f = t._f), "undefined" != typeof t._l && (e._l = t._l), "undefined" != typeof t._strict && (e._strict = t._strict), "undefined" != typeof t._tzm && (e._tzm = t._tzm), "undefined" != typeof t._isUTC && (e._isUTC = t._isUTC), "undefined" != typeof t._offset && (e._offset = t._offset), "undefined" != typeof t._pf && (e._pf = t._pf), "undefined" != typeof t._locale && (e._locale = t._locale), Et.length > 0)
            for (a in Et) n = Et[a], r = t[n], "undefined" != typeof r && (e[n] = r);
        return e
    }

    function f(e) {
        return 0 > e ? Math.ceil(e) : Math.floor(e)
    }

    function p(e, t, a) {
        for (var n = "" + Math.abs(e), r = e >= 0; n.length < t;) n = "0" + n;
        return (r ? a ? "+" : "" : "-") + n
    }

    function L(e, t) {
        var a = {
            milliseconds: 0,
            months: 0
        };
        return a.months = t.month() - e.month() + 12 * (t.year() - e.year()), e.clone().add(a.months, "M").isAfter(t) && --a.months, a.milliseconds = +t - +e.clone().add(a.months, "M"), a
    }

    function y(e, t) {
        var a;
        return t = z(t, e), e.isBefore(t) ? a = L(e, t) : (a = L(t, e), a.milliseconds = -a.milliseconds, a.months = -a.months), a
    }

    function Y(e, t) {
        return function(a, n) {
            var r, s;
            return null === n || isNaN(+n) || (i(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period)."), s = a, a = n, n = s), a = "string" == typeof a ? +a : a, r = Dt.duration(a, n), D(this, r, e), this
        }
    }

    function D(e, t, a, n) {
        var r = t._milliseconds,
            s = t._days,
            i = t._months;
        n = null == n ? !0 : n, r && e._d.setTime(+e._d + r * a), s && Mt(e, "Date", ht(e, "Date") + s * a), i && ct(e, ht(e, "Month") + i * a), n && Dt.updateOffset(e, s || i)
    }

    function T(e) {
        return "[object Array]" === Object.prototype.toString.call(e)
    }

    function k(e) {
        return "[object Date]" === Object.prototype.toString.call(e) || e instanceof Date
    }

    function g(e, t, a) {
        var n, r = Math.min(e.length, t.length),
            s = Math.abs(e.length - t.length),
            i = 0;
        for (n = 0; r > n; n++)(a && e[n] !== t[n] || !a && S(e[n]) !== S(t[n])) && i++;
        return i + s
    }

    function w(e) {
        if (e) {
            var t = e.toLowerCase().replace(/(.)s$/, "$1");
            e = la[e] || ma[t] || t
        }
        return e
    }

    function v(e) {
        var t, n, r = {};
        for (n in e) a(e, n) && (t = w(n), t && (r[t] = e[n]));
        return r
    }

    function b(t) {
        var a, n;
        if (0 === t.indexOf("week")) a = 7, n = "day";
        else {
            if (0 !== t.indexOf("month")) return;
            a = 12, n = "month"
        }
        Dt[t] = function(r, s) {
            var i, d, o = Dt._locale[t],
                _ = [];
            if ("number" == typeof r && (s = r, r = e), d = function(e) {
                    var t = Dt().utc().set(n, e);
                    return o.call(Dt._locale, t, r || "")
                }, null != s) return d(s);
            for (i = 0; a > i; i++) _.push(d(i));
            return _
        }
    }

    function S(e) {
        var t = +e,
            a = 0;
        return 0 !== t && isFinite(t) && (a = t >= 0 ? Math.floor(t) : Math.ceil(t)), a
    }

    function x(e, t) {
        return new Date(Date.UTC(e, t + 1, 0)).getUTCDate()
    }

    function j(e, t, a) {
        return _t(Dt([e, 11, 31 + t - a]), t, a).week
    }

    function W(e) {
        return H(e) ? 366 : 365
    }

    function H(e) {
        return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0
    }

    function P(e) {
        var t;
        e._a && -2 === e._pf.overflow && (t = e._a[xt] < 0 || e._a[xt] > 11 ? xt : e._a[jt] < 1 || e._a[jt] > x(e._a[St], e._a[xt]) ? jt : e._a[Wt] < 0 || e._a[Wt] > 24 || 24 === e._a[Wt] && (0 !== e._a[Ht] || 0 !== e._a[Pt] || 0 !== e._a[Ct]) ? Wt : e._a[Ht] < 0 || e._a[Ht] > 59 ? Ht : e._a[Pt] < 0 || e._a[Pt] > 59 ? Pt : e._a[Ct] < 0 || e._a[Ct] > 999 ? Ct : -1, e._pf._overflowDayOfYear && (St > t || t > jt) && (t = jt), e._pf.overflow = t)
    }

    function C(t) {
        return null == t._isValid && (t._isValid = !isNaN(t._d.getTime()) && t._pf.overflow < 0 && !t._pf.empty && !t._pf.invalidMonth && !t._pf.nullInput && !t._pf.invalidFormat && !t._pf.userInvalidated, t._strict && (t._isValid = t._isValid && 0 === t._pf.charsLeftOver && 0 === t._pf.unusedTokens.length && t._pf.bigHour === e)), t._isValid
    }

    function O(e) {
        return e ? e.toLowerCase().replace("_", "-") : e
    }

    function E(e) {
        for (var t, a, n, r, s = 0; s < e.length;) {
            for (r = O(e[s]).split("-"), t = r.length, a = O(e[s + 1]), a = a ? a.split("-") : null; t > 0;) {
                if (n = F(r.slice(0, t).join("-"))) return n;
                if (a && a.length >= t && g(r, a, !0) >= t - 1) break;
                t--
            }
            s++
        }
        return null
    }

    function F(e) {
        var t = null;
        if (!Ot[e] && Ft) try {
            t = Dt.locale(), require("./locale/" + e), Dt.locale(t)
        } catch (a) {}
        return Ot[e]
    }

    function z(e, t) {
        var a, n;
        return t._isUTC ? (a = t.clone(), n = (Dt.isMoment(e) || k(e) ? +e : +Dt(e)) - +a, a._d.setTime(+a._d + n), Dt.updateOffset(a, !1), a) : Dt(e).local()
    }

    function A(e) {
        return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "")
    }

    function I(e) {
        var t, a, n = e.match(Jt);
        for (t = 0, a = n.length; a > t; t++) n[t] = pa[n[t]] ? pa[n[t]] : A(n[t]);
        return function(r) {
            var s = "";
            for (t = 0; a > t; t++) s += n[t] instanceof Function ? n[t].call(r, e) : n[t];
            return s
        }
    }

    function J(e, t) {
        return e.isValid() ? (t = G(t, e.localeData()), ca[t] || (ca[t] = I(t)), ca[t](e)) : e.localeData().invalidDate()
    }

    function G(e, t) {
        function a(e) {
            return t.longDateFormat(e) || e
        }
        var n = 5;
        for (Gt.lastIndex = 0; n >= 0 && Gt.test(e);) e = e.replace(Gt, a), Gt.lastIndex = 0, n -= 1;
        return e
    }

    function U(e, t) {
        var a, n = t._strict;
        switch (e) {
            case "Q":
                return Qt;
            case "DDDD":
                return ta;
            case "YYYY":
            case "GGGG":
            case "gggg":
                return n ? aa : qt;
            case "Y":
            case "G":
            case "g":
                return ra;
            case "YYYYYY":
            case "YYYYY":
            case "GGGGG":
            case "ggggg":
                return n ? na : Bt;
            case "S":
                if (n) return Qt;
            case "SS":
                if (n) return ea;
            case "SSS":
                if (n) return ta;
            case "DDD":
                return Nt;
            case "MMM":
            case "MMMM":
            case "dd":
            case "ddd":
            case "dddd":
                return Zt;
            case "a":
            case "A":
                return t._locale._meridiemParse;
            case "x":
                return Kt;
            case "X":
                return Xt;
            case "Z":
            case "ZZ":
                return $t;
            case "T":
                return Rt;
            case "SSSS":
                return Vt;
            case "MM":
            case "DD":
            case "YY":
            case "GG":
            case "gg":
            case "HH":
            case "hh":
            case "mm":
            case "ss":
            case "ww":
            case "WW":
                return n ? ea : Ut;
            case "M":
            case "D":
            case "d":
            case "H":
            case "h":
            case "m":
            case "s":
            case "w":
            case "W":
            case "e":
            case "E":
                return Ut;
            case "Do":
                return n ? t._locale._ordinalParse : t._locale._ordinalParseLenient;
            default:
                return a = new RegExp(X(K(e.replace("\\", "")), "i"))
        }
    }

    function N(e) {
        e = e || "";
        var t = e.match($t) || [],
            a = t[t.length - 1] || [],
            n = (a + "").match(_a) || ["-", 0, 0],
            r = +(60 * n[1]) + S(n[2]);
        return "+" === n[0] ? r : -r
    }

    function q(e, t, a) {
        var n, r = a._a;
        switch (e) {
            case "Q":
                null != t && (r[xt] = 3 * (S(t) - 1));
                break;
            case "M":
            case "MM":
                null != t && (r[xt] = S(t) - 1);
                break;
            case "MMM":
            case "MMMM":
                n = a._locale.monthsParse(t, e, a._strict), null != n ? r[xt] = n : a._pf.invalidMonth = t;
                break;
            case "D":
            case "DD":
                null != t && (r[jt] = S(t));
                break;
            case "Do":
                null != t && (r[jt] = S(parseInt(t.match(/\d{1,2}/)[0], 10)));
                break;
            case "DDD":
            case "DDDD":
                null != t && (a._dayOfYear = S(t));
                break;
            case "YY":
                r[St] = Dt.parseTwoDigitYear(t);
                break;
            case "YYYY":
            case "YYYYY":
            case "YYYYYY":
                r[St] = S(t);
                break;
            case "a":
            case "A":
                a._meridiem = t;
                break;
            case "h":
            case "hh":
                a._pf.bigHour = !0;
            case "H":
            case "HH":
                r[Wt] = S(t);
                break;
            case "m":
            case "mm":
                r[Ht] = S(t);
                break;
            case "s":
            case "ss":
                r[Pt] = S(t);
                break;
            case "S":
            case "SS":
            case "SSS":
            case "SSSS":
                r[Ct] = S(1e3 * ("0." + t));
                break;
            case "x":
                a._d = new Date(S(t));
                break;
            case "X":
                a._d = new Date(1e3 * parseFloat(t));
                break;
            case "Z":
            case "ZZ":
                a._useUTC = !0, a._tzm = N(t);
                break;
            case "dd":
            case "ddd":
            case "dddd":
                n = a._locale.weekdaysParse(t), null != n ? (a._w = a._w || {}, a._w.d = n) : a._pf.invalidWeekday = t;
                break;
            case "w":
            case "ww":
            case "W":
            case "WW":
            case "d":
            case "e":
            case "E":
                e = e.substr(0, 1);
            case "gggg":
            case "GGGG":
            case "GGGGG":
                e = e.substr(0, 2), t && (a._w = a._w || {}, a._w[e] = S(t));
                break;
            case "gg":
            case "GG":
                a._w = a._w || {}, a._w[e] = Dt.parseTwoDigitYear(t)
        }
    }

    function B(e) {
        var a, n, r, s, i, d, o;
        a = e._w, null != a.GG || null != a.W || null != a.E ? (i = 1, d = 4, n = t(a.GG, e._a[St], _t(Dt(), 1, 4).year), r = t(a.W, 1), s = t(a.E, 1)) : (i = e._locale._week.dow, d = e._locale._week.doy, n = t(a.gg, e._a[St], _t(Dt(), i, d).year), r = t(a.w, 1), null != a.d ? (s = a.d, i > s && ++r) : s = null != a.e ? a.e + i : i), o = ut(n, r, s, d, i), e._a[St] = o.year, e._dayOfYear = o.dayOfYear
    }

    function V(e) {
        var a, n, r, s, i = [];
        if (!e._d) {
            for (r = $(e), e._w && null == e._a[jt] && null == e._a[xt] && B(e), e._dayOfYear && (s = t(e._a[St], r[St]), e._dayOfYear > W(s) && (e._pf._overflowDayOfYear = !0), n = st(s, 0, e._dayOfYear), e._a[xt] = n.getUTCMonth(), e._a[jt] = n.getUTCDate()), a = 0; 3 > a && null == e._a[a]; ++a) e._a[a] = i[a] = r[a];
            for (; 7 > a; a++) e._a[a] = i[a] = null == e._a[a] ? 2 === a ? 1 : 0 : e._a[a];
            24 === e._a[Wt] && 0 === e._a[Ht] && 0 === e._a[Pt] && 0 === e._a[Ct] && (e._nextDay = !0, e._a[Wt] = 0), e._d = (e._useUTC ? st : rt).apply(null, i), null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[Wt] = 24)
        }
    }

    function Z(e) {
        var t;
        e._d || (t = v(e._i), e._a = [t.year, t.month, t.day || t.date, t.hour, t.minute, t.second, t.millisecond], V(e))
    }

    function $(e) {
        var t = new Date;
        return e._useUTC ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()] : [t.getFullYear(), t.getMonth(), t.getDate()]
    }

    function R(t) {
        if (t._f === Dt.ISO_8601) return void et(t);
        t._a = [], t._pf.empty = !0;
        var a, n, r, s, i, d = "" + t._i,
            o = d.length,
            _ = 0;
        for (r = G(t._f, t._locale).match(Jt) || [], a = 0; a < r.length; a++) s = r[a], n = (d.match(U(s, t)) || [])[0], n && (i = d.substr(0, d.indexOf(n)), i.length > 0 && t._pf.unusedInput.push(i), d = d.slice(d.indexOf(n) + n.length), _ += n.length), pa[s] ? (n ? t._pf.empty = !1 : t._pf.unusedTokens.push(s), q(s, n, t)) : t._strict && !n && t._pf.unusedTokens.push(s);
        t._pf.charsLeftOver = o - _, d.length > 0 && t._pf.unusedInput.push(d), t._pf.bigHour === !0 && t._a[Wt] <= 12 && (t._pf.bigHour = e), t._a[Wt] = u(t._locale, t._a[Wt], t._meridiem), V(t), P(t)
    }

    function K(e) {
        return e.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e, t, a, n, r) {
            return t || a || n || r
        })
    }

    function X(e) {
        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    }

    function Q(e) {
        var t, a, r, s, i;
        if (0 === e._f.length) return e._pf.invalidFormat = !0, void(e._d = new Date(0 / 0));
        for (s = 0; s < e._f.length; s++) i = 0, t = M({}, e), null != e._useUTC && (t._useUTC = e._useUTC), t._pf = n(), t._f = e._f[s], R(t), C(t) && (i += t._pf.charsLeftOver, i += 10 * t._pf.unusedTokens.length, t._pf.score = i, (null == r || r > i) && (r = i, a = t));
        h(e, a || t)
    }

    function et(e) {
        var t, a, n = e._i,
            r = sa.exec(n);
        if (r) {
            for (e._pf.iso = !0, t = 0, a = da.length; a > t; t++)
                if (da[t][1].exec(n)) {
                    e._f = da[t][0] + (r[6] || " ");
                    break
                }
            for (t = 0, a = oa.length; a > t; t++)
                if (oa[t][1].exec(n)) {
                    e._f += oa[t][0];
                    break
                }
            n.match($t) && (e._f += "Z"), R(e)
        } else e._isValid = !1
    }

    function tt(e) {
        et(e), e._isValid === !1 && (delete e._isValid, Dt.createFromInputFallback(e))
    }

    function at(e, t) {
        var a, n = [];
        for (a = 0; a < e.length; ++a) n.push(t(e[a], a));
        return n
    }

    function nt(t) {
        var a, n = t._i;
        n === e ? t._d = new Date : k(n) ? t._d = new Date(+n) : null !== (a = zt.exec(n)) ? t._d = new Date(+a[1]) : "string" == typeof n ? tt(t) : T(n) ? (t._a = at(n.slice(0), function(e) {
            return parseInt(e, 10)
        }), V(t)) : "object" == typeof n ? Z(t) : "number" == typeof n ? t._d = new Date(n) : Dt.createFromInputFallback(t)
    }

    function rt(e, t, a, n, r, s, i) {
        var d = new Date(e, t, a, n, r, s, i);
        return 1970 > e && d.setFullYear(e), d
    }

    function st(e) {
        var t = new Date(Date.UTC.apply(null, arguments));
        return 1970 > e && t.setUTCFullYear(e), t
    }

    function it(e, t) {
        if ("string" == typeof e)
            if (isNaN(e)) {
                if (e = t.weekdaysParse(e), "number" != typeof e) return null
            } else e = parseInt(e, 10);
        return e
    }

    function dt(e, t, a, n, r) {
        return r.relativeTime(t || 1, !!a, e, n)
    }

    function ot(e, t, a) {
        var n = Dt.duration(e).abs(),
            r = vt(n.as("s")),
            s = vt(n.as("m")),
            i = vt(n.as("h")),
            d = vt(n.as("d")),
            o = vt(n.as("M")),
            _ = vt(n.as("y")),
            u = r < ha.s && ["s", r] || 1 === s && ["m"] || s < ha.m && ["mm", s] || 1 === i && ["h"] || i < ha.h && ["hh", i] || 1 === d && ["d"] || d < ha.d && ["dd", d] || 1 === o && ["M"] || o < ha.M && ["MM", o] || 1 === _ && ["y"] || ["yy", _];
        return u[2] = t, u[3] = +e > 0, u[4] = a, dt.apply({}, u)
    }

    function _t(e, t, a) {
        var n, r = a - t,
            s = a - e.day();
        return s > r && (s -= 7), r - 7 > s && (s += 7), n = Dt(e).add(s, "d"), {
            week: Math.ceil(n.dayOfYear() / 7),
            year: n.year()
        }
    }

    function ut(e, t, a, n, r) {
        var s, i, d = st(e, 0, 1).getUTCDay();
        return d = 0 === d ? 7 : d, a = null != a ? a : r, s = r - d + (d > n ? 7 : 0) - (r > d ? 7 : 0), i = 7 * (t - 1) + (a - r) + s + 1, {
            year: i > 0 ? e : e - 1,
            dayOfYear: i > 0 ? i : W(e - 1) + i
        }
    }

    function lt(t) {
        var a, n = t._i,
            r = t._f;
        return t._locale = t._locale || Dt.localeData(t._l), null === n || r === e && "" === n ? Dt.invalid({
            nullInput: !0
        }) : ("string" == typeof n && (t._i = n = t._locale.preparse(n)), Dt.isMoment(n) ? new m(n, !0) : (r ? T(r) ? Q(t) : R(t) : nt(t), a = new m(t), a._nextDay && (a.add(1, "d"), a._nextDay = e), a))
    }

    function mt(e, t) {
        var a, n;
        if (1 === t.length && T(t[0]) && (t = t[0]), !t.length) return Dt();
        for (a = t[0], n = 1; n < t.length; ++n) t[n][e](a) && (a = t[n]);
        return a
    }

    function ct(e, t) {
        var a;
        return "string" == typeof t && (t = e.localeData().monthsParse(t), "number" != typeof t) ? e : (a = Math.min(e.date(), x(e.year(), t)), e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, a), e)
    }

    function ht(e, t) {
        return e._d["get" + (e._isUTC ? "UTC" : "") + t]()
    }

    function Mt(e, t, a) {
        return "Month" === t ? ct(e, a) : e._d["set" + (e._isUTC ? "UTC" : "") + t](a)
    }

    function ft(e, t) {
        return function(a) {
            return null != a ? (Mt(this, e, a), Dt.updateOffset(this, t), this) : ht(this, e)
        }
    }

    function pt(e) {
        return 400 * e / 146097
    }

    function Lt(e) {
        return 146097 * e / 400
    }

    function yt(e) {
        Dt.duration.fn[e] = function() {
            return this._data[e]
        }
    }

    function Yt(e) {
        "undefined" == typeof ender && (Tt = wt.moment, wt.moment = e ? s("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.", Dt) : Dt)
    }
    for (var Dt, Tt, kt, gt = "2.9.0", wt = "undefined" == typeof global || "undefined" != typeof window && window !== global.window ? this : global, vt = Math.round, bt = Object.prototype.hasOwnProperty, St = 0, xt = 1, jt = 2, Wt = 3, Ht = 4, Pt = 5, Ct = 6, Ot = {}, Et = [], Ft = "undefined" != typeof module && module && module.exports, zt = /^\/?Date\((\-?\d+)/i, At = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, It = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, Jt = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g, Gt = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Ut = /\d\d?/, Nt = /\d{1,3}/, qt = /\d{1,4}/, Bt = /[+\-]?\d{1,6}/, Vt = /\d+/, Zt = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, $t = /Z|[\+\-]\d\d:?\d\d/gi, Rt = /T/i, Kt = /[\+\-]?\d+/, Xt = /[\+\-]?\d+(\.\d{1,3})?/, Qt = /\d/, ea = /\d\d/, ta = /\d{3}/, aa = /\d{4}/, na = /[+-]?\d{6}/, ra = /[+-]?\d+/, sa = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, ia = "YYYY-MM-DDTHH:mm:ssZ", da = [
            ["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
            ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
            ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
            ["GGGG-[W]WW", /\d{4}-W\d{2}/],
            ["YYYY-DDD", /\d{4}-\d{3}/]
        ], oa = [
            ["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/],
            ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
            ["HH:mm", /(T| )\d\d:\d\d/],
            ["HH", /(T| )\d\d/]
        ], _a = /([\+\-]|\d\d)/gi, ua = ("Date|Hours|Minutes|Seconds|Milliseconds".split("|"), {
            Milliseconds: 1,
            Seconds: 1e3,
            Minutes: 6e4,
            Hours: 36e5,
            Days: 864e5,
            Months: 2592e6,
            Years: 31536e6
        }), la = {
            ms: "millisecond",
            s: "second",
            m: "minute",
            h: "hour",
            d: "day",
            D: "date",
            w: "week",
            W: "isoWeek",
            M: "month",
            Q: "quarter",
            y: "year",
            DDD: "dayOfYear",
            e: "weekday",
            E: "isoWeekday",
            gg: "weekYear",
            GG: "isoWeekYear"
        }, ma = {
            dayofyear: "dayOfYear",
            isoweekday: "isoWeekday",
            isoweek: "isoWeek",
            weekyear: "weekYear",
            isoweekyear: "isoWeekYear"
        }, ca = {}, ha = {
            s: 45,
            m: 45,
            h: 22,
            d: 26,
            M: 11
        }, Ma = "DDD w W M D d".split(" "), fa = "M D H h m s w W".split(" "), pa = {
            M: function() {
                return this.month() + 1
            },
            MMM: function(e) {
                return this.localeData().monthsShort(this, e)
            },
            MMMM: function(e) {
                return this.localeData().months(this, e)
            },
            D: function() {
                return this.date()
            },
            DDD: function() {
                return this.dayOfYear()
            },
            d: function() {
                return this.day()
            },
            dd: function(e) {
                return this.localeData().weekdaysMin(this, e)
            },
            ddd: function(e) {
                return this.localeData().weekdaysShort(this, e)
            },
            dddd: function(e) {
                return this.localeData().weekdays(this, e)
            },
            w: function() {
                return this.week()
            },
            W: function() {
                return this.isoWeek()
            },
            YY: function() {
                return p(this.year() % 100, 2)
            },
            YYYY: function() {
                return p(this.year(), 4)
            },
            YYYYY: function() {
                return p(this.year(), 5)
            },
            YYYYYY: function() {
                var e = this.year(),
                    t = e >= 0 ? "+" : "-";
                return t + p(Math.abs(e), 6)
            },
            gg: function() {
                return p(this.weekYear() % 100, 2)
            },
            gggg: function() {
                return p(this.weekYear(), 4)
            },
            ggggg: function() {
                return p(this.weekYear(), 5)
            },
            GG: function() {
                return p(this.isoWeekYear() % 100, 2)
            },
            GGGG: function() {
                return p(this.isoWeekYear(), 4)
            },
            GGGGG: function() {
                return p(this.isoWeekYear(), 5)
            },
            e: function() {
                return this.weekday()
            },
            E: function() {
                return this.isoWeekday()
            },
            a: function() {
                return this.localeData().meridiem(this.hours(), this.minutes(), !0)
            },
            A: function() {
                return this.localeData().meridiem(this.hours(), this.minutes(), !1)
            },
            H: function() {
                return this.hours()
            },
            h: function() {
                return this.hours() % 12 || 12
            },
            m: function() {
                return this.minutes()
            },
            s: function() {
                return this.seconds()
            },
            S: function() {
                return S(this.milliseconds() / 100)
            },
            SS: function() {
                return p(S(this.milliseconds() / 10), 2)
            },
            SSS: function() {
                return p(this.milliseconds(), 3)
            },
            SSSS: function() {
                return p(this.milliseconds(), 3)
            },
            Z: function() {
                var e = this.utcOffset(),
                    t = "+";
                return 0 > e && (e = -e, t = "-"), t + p(S(e / 60), 2) + ":" + p(S(e) % 60, 2)
            },
            ZZ: function() {
                var e = this.utcOffset(),
                    t = "+";
                return 0 > e && (e = -e, t = "-"), t + p(S(e / 60), 2) + p(S(e) % 60, 2)
            },
            z: function() {
                return this.zoneAbbr()
            },
            zz: function() {
                return this.zoneName()
            },
            x: function() {
                return this.valueOf()
            },
            X: function() {
                return this.unix()
            },
            Q: function() {
                return this.quarter()
            }
        }, La = {}, ya = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"], Ya = !1; Ma.length;) kt = Ma.pop(), pa[kt + "o"] = o(pa[kt], kt);
    for (; fa.length;) kt = fa.pop(), pa[kt + kt] = d(pa[kt], 2);
    pa.DDDD = d(pa.DDD, 3), h(l.prototype, {
        set: function(e) {
            var t, a;
            for (a in e) t = e[a], "function" == typeof t ? this[a] = t : this["_" + a] = t;
            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source)
        },
        _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
        months: function(e) {
            return this._months[e.month()]
        },
        _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
        monthsShort: function(e) {
            return this._monthsShort[e.month()]
        },
        monthsParse: function(e, t, a) {
            var n, r, s;
            for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), n = 0; 12 > n; n++) {
                if (r = Dt.utc([2e3, n]), a && !this._longMonthsParse[n] && (this._longMonthsParse[n] = new RegExp("^" + this.months(r, "").replace(".", "") + "$", "i"), this._shortMonthsParse[n] = new RegExp("^" + this.monthsShort(r, "").replace(".", "") + "$", "i")), a || this._monthsParse[n] || (s = "^" + this.months(r, "") + "|^" + this.monthsShort(r, ""), this._monthsParse[n] = new RegExp(s.replace(".", ""), "i")), a && "MMMM" === t && this._longMonthsParse[n].test(e)) return n;
                if (a && "MMM" === t && this._shortMonthsParse[n].test(e)) return n;
                if (!a && this._monthsParse[n].test(e)) return n
            }
        },
        _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
        weekdays: function(e) {
            return this._weekdays[e.day()]
        },
        _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
        weekdaysShort: function(e) {
            return this._weekdaysShort[e.day()]
        },
        _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
        weekdaysMin: function(e) {
            return this._weekdaysMin[e.day()]
        },
        weekdaysParse: function(e) {
            var t, a, n;
            for (this._weekdaysParse || (this._weekdaysParse = []), t = 0; 7 > t; t++)
                if (this._weekdaysParse[t] || (a = Dt([2e3, 1]).day(t), n = "^" + this.weekdays(a, "") + "|^" + this.weekdaysShort(a, "") + "|^" + this.weekdaysMin(a, ""), this._weekdaysParse[t] = new RegExp(n.replace(".", ""), "i")), this._weekdaysParse[t].test(e)) return t
        },
        _longDateFormat: {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY LT",
            LLLL: "dddd, MMMM D, YYYY LT"
        },
        longDateFormat: function(e) {
            var t = this._longDateFormat[e];
            return !t && this._longDateFormat[e.toUpperCase()] && (t = this._longDateFormat[e.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(e) {
                return e.slice(1)
            }), this._longDateFormat[e] = t), t
        },
        isPM: function(e) {
            return "p" === (e + "").toLowerCase().charAt(0)
        },
        _meridiemParse: /[ap]\.?m?\.?/i,
        meridiem: function(e, t, a) {
            return e > 11 ? a ? "pm" : "PM" : a ? "am" : "AM"
        },
        _calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        calendar: function(e, t, a) {
            var n = this._calendar[e];
            return "function" == typeof n ? n.apply(t, [a]) : n
        },
        _relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        relativeTime: function(e, t, a, n) {
            var r = this._relativeTime[a];
            return "function" == typeof r ? r(e, t, a, n) : r.replace(/%d/i, e)
        },
        pastFuture: function(e, t) {
            var a = this._relativeTime[e > 0 ? "future" : "past"];
            return "function" == typeof a ? a(t) : a.replace(/%s/i, t)
        },
        ordinal: function(e) {
            return this._ordinal.replace("%d", e)
        },
        _ordinal: "%d",
        _ordinalParse: /\d{1,2}/,
        preparse: function(e) {
            return e
        },
        postformat: function(e) {
            return e
        },
        week: function(e) {
            return _t(e, this._week.dow, this._week.doy).week
        },
        _week: {
            dow: 0,
            doy: 6
        },
        firstDayOfWeek: function() {
            return this._week.dow
        },
        firstDayOfYear: function() {
            return this._week.doy
        },
        _invalidDate: "Invalid date",
        invalidDate: function() {
            return this._invalidDate
        }
    }), Dt = function(t, a, r, s) {
        var i;
        return "boolean" == typeof r && (s = r, r = e), i = {}, i._isAMomentObject = !0, i._i = t, i._f = a, i._l = r, i._strict = s, i._isUTC = !1, i._pf = n(), lt(i)
    }, Dt.suppressDeprecationWarnings = !1, Dt.createFromInputFallback = s("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function(e) {
        e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
    }), Dt.min = function() {
        var e = [].slice.call(arguments, 0);
        return mt("isBefore", e)
    }, Dt.max = function() {
        var e = [].slice.call(arguments, 0);
        return mt("isAfter", e)
    }, Dt.utc = function(t, a, r, s) {
        var i;
        return "boolean" == typeof r && (s = r, r = e), i = {}, i._isAMomentObject = !0, i._useUTC = !0, i._isUTC = !0, i._l = r, i._i = t, i._f = a, i._strict = s, i._pf = n(), lt(i).utc()
    }, Dt.unix = function(e) {
        return Dt(1e3 * e)
    }, Dt.duration = function(e, t) {
        var n, r, s, i, d = e,
            o = null;
        return Dt.isDuration(e) ? d = {
            ms: e._milliseconds,
            d: e._days,
            M: e._months
        } : "number" == typeof e ? (d = {}, t ? d[t] = e : d.milliseconds = e) : (o = At.exec(e)) ? (n = "-" === o[1] ? -1 : 1, d = {
            y: 0,
            d: S(o[jt]) * n,
            h: S(o[Wt]) * n,
            m: S(o[Ht]) * n,
            s: S(o[Pt]) * n,
            ms: S(o[Ct]) * n
        }) : (o = It.exec(e)) ? (n = "-" === o[1] ? -1 : 1, s = function(e) {
            var t = e && parseFloat(e.replace(",", "."));
            return (isNaN(t) ? 0 : t) * n
        }, d = {
            y: s(o[2]),
            M: s(o[3]),
            d: s(o[4]),
            h: s(o[5]),
            m: s(o[6]),
            s: s(o[7]),
            w: s(o[8])
        }) : null == d ? d = {} : "object" == typeof d && ("from" in d || "to" in d) && (i = y(Dt(d.from), Dt(d.to)), d = {}, d.ms = i.milliseconds, d.M = i.months), r = new c(d), Dt.isDuration(e) && a(e, "_locale") && (r._locale = e._locale), r
    }, Dt.version = gt, Dt.defaultFormat = ia, Dt.ISO_8601 = function() {}, Dt.momentProperties = Et, Dt.updateOffset = function() {}, Dt.relativeTimeThreshold = function(t, a) {
        return ha[t] === e ? !1 : a === e ? ha[t] : (ha[t] = a, !0)
    }, Dt.lang = s("moment.lang is deprecated. Use moment.locale instead.", function(e, t) {
        return Dt.locale(e, t)
    }), Dt.locale = function(e, t) {
        var a;
        return e && (a = "undefined" != typeof t ? Dt.defineLocale(e, t) : Dt.localeData(e), a && (Dt.duration._locale = Dt._locale = a)), Dt._locale._abbr
    }, Dt.defineLocale = function(e, t) {
        return null !== t ? (t.abbr = e, Ot[e] || (Ot[e] = new l), Ot[e].set(t), Dt.locale(e), Ot[e]) : (delete Ot[e], null)
    }, Dt.langData = s("moment.langData is deprecated. Use moment.localeData instead.", function(e) {
        return Dt.localeData(e)
    }), Dt.localeData = function(e) {
        var t;
        if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return Dt._locale;
        if (!T(e)) {
            if (t = F(e)) return t;
            e = [e]
        }
        return E(e)
    }, Dt.isMoment = function(e) {
        return e instanceof m || null != e && a(e, "_isAMomentObject")
    }, Dt.isDuration = function(e) {
        return e instanceof c
    };
    for (kt = ya.length - 1; kt >= 0; --kt) b(ya[kt]);
    Dt.normalizeUnits = function(e) {
        return w(e)
    }, Dt.invalid = function(e) {
        var t = Dt.utc(0 / 0);
        return null != e ? h(t._pf, e) : t._pf.userInvalidated = !0, t
    }, Dt.parseZone = function() {
        return Dt.apply(null, arguments).parseZone()
    }, Dt.parseTwoDigitYear = function(e) {
        return S(e) + (S(e) > 68 ? 1900 : 2e3)
    }, Dt.isDate = k, h(Dt.fn = m.prototype, {
        clone: function() {
            return Dt(this)
        },
        valueOf: function() {
            return +this._d - 6e4 * (this._offset || 0)
        },
        unix: function() {
            return Math.floor(+this / 1e3)
        },
        toString: function() {
            return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
        },
        toDate: function() {
            return this._offset ? new Date(+this) : this._d
        },
        toISOString: function() {
            var e = Dt(this).utc();
            return 0 < e.year() && e.year() <= 9999 ? "function" == typeof Date.prototype.toISOString ? this.toDate().toISOString() : J(e, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : J(e, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
        },
        toArray: function() {
            var e = this;
            return [e.year(), e.month(), e.date(), e.hours(), e.minutes(), e.seconds(), e.milliseconds()]
        },
        isValid: function() {
            return C(this)
        },
        isDSTShifted: function() {
            return this._a ? this.isValid() && g(this._a, (this._isUTC ? Dt.utc(this._a) : Dt(this._a)).toArray()) > 0 : !1
        },
        parsingFlags: function() {
            return h({}, this._pf)
        },
        invalidAt: function() {
            return this._pf.overflow
        },
        utc: function(e) {
            return this.utcOffset(0, e)
        },
        local: function(e) {
            return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(this._dateUtcOffset(), "m")), this
        },
        format: function(e) {
            var t = J(this, e || Dt.defaultFormat);
            return this.localeData().postformat(t)
        },
        add: Y(1, "add"),
        subtract: Y(-1, "subtract"),
        diff: function(e, t, a) {
            var n, r, s = z(e, this),
                i = 6e4 * (s.utcOffset() - this.utcOffset());
            return t = w(t), "year" === t || "month" === t || "quarter" === t ? (r = _(this, s), "quarter" === t ? r /= 3 : "year" === t && (r /= 12)) : (n = this - s, r = "second" === t ? n / 1e3 : "minute" === t ? n / 6e4 : "hour" === t ? n / 36e5 : "day" === t ? (n - i) / 864e5 : "week" === t ? (n - i) / 6048e5 : n), a ? r : f(r)
        },
        from: function(e, t) {
            return Dt.duration({
                to: this,
                from: e
            }).locale(this.locale()).humanize(!t)
        },
        fromNow: function(e) {
            return this.from(Dt(), e)
        },
        calendar: function(e) {
            var t = e || Dt(),
                a = z(t, this).startOf("day"),
                n = this.diff(a, "days", !0),
                r = -6 > n ? "sameElse" : -1 > n ? "lastWeek" : 0 > n ? "lastDay" : 1 > n ? "sameDay" : 2 > n ? "nextDay" : 7 > n ? "nextWeek" : "sameElse";
            return this.format(this.localeData().calendar(r, this, Dt(t)))
        },
        isLeapYear: function() {
            return H(this.year())
        },
        isDST: function() {
            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
        },
        day: function(e) {
            var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            return null != e ? (e = it(e, this.localeData()), this.add(e - t, "d")) : t
        },
        month: ft("Month", !0),
        startOf: function(e) {
            switch (e = w(e)) {
                case "year":
                    this.month(0);
                case "quarter":
                case "month":
                    this.date(1);
                case "week":
                case "isoWeek":
                case "day":
                    this.hours(0);
                case "hour":
                    this.minutes(0);
                case "minute":
                    this.seconds(0);
                case "second":
                    this.milliseconds(0)
            }
            return "week" === e ? this.weekday(0) : "isoWeek" === e && this.isoWeekday(1), "quarter" === e && this.month(3 * Math.floor(this.month() / 3)), this
        },
        endOf: function(t) {
            return t = w(t), t === e || "millisecond" === t ? this : this.startOf(t).add(1, "isoWeek" === t ? "week" : t).subtract(1, "ms")
        },
        isAfter: function(e, t) {
            var a;
            return t = w("undefined" != typeof t ? t : "millisecond"), "millisecond" === t ? (e = Dt.isMoment(e) ? e : Dt(e), +this > +e) : (a = Dt.isMoment(e) ? +e : +Dt(e), a < +this.clone().startOf(t))
        },
        isBefore: function(e, t) {
            var a;
            return t = w("undefined" != typeof t ? t : "millisecond"), "millisecond" === t ? (e = Dt.isMoment(e) ? e : Dt(e), +e > +this) : (a = Dt.isMoment(e) ? +e : +Dt(e), +this.clone().endOf(t) < a)
        },
        isBetween: function(e, t, a) {
            return this.isAfter(e, a) && this.isBefore(t, a)
        },
        isSame: function(e, t) {
            var a;
            return t = w(t || "millisecond"), "millisecond" === t ? (e = Dt.isMoment(e) ? e : Dt(e), +this === +e) : (a = +Dt(e), +this.clone().startOf(t) <= a && a <= +this.clone().endOf(t))
        },
        min: s("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function(e) {
            return e = Dt.apply(null, arguments), this > e ? this : e
        }),
        max: s("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function(e) {
            return e = Dt.apply(null, arguments), e > this ? this : e
        }),
        zone: s("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", function(e, t) {
            return null != e ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset()
        }),
        utcOffset: function(e, t) {
            var a, n = this._offset || 0;
            return null != e ? ("string" == typeof e && (e = N(e)), Math.abs(e) < 16 && (e = 60 * e), !this._isUTC && t && (a = this._dateUtcOffset()), this._offset = e, this._isUTC = !0, null != a && this.add(a, "m"), n !== e && (!t || this._changeInProgress ? D(this, Dt.duration(e - n, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, Dt.updateOffset(this, !0), this._changeInProgress = null)), this) : this._isUTC ? n : this._dateUtcOffset()
        },
        isLocal: function() {
            return !this._isUTC
        },
        isUtcOffset: function() {
            return this._isUTC
        },
        isUtc: function() {
            return this._isUTC && 0 === this._offset
        },
        zoneAbbr: function() {
            return this._isUTC ? "UTC" : ""
        },
        zoneName: function() {
            return this._isUTC ? "Coordinated Universal Time" : ""
        },
        parseZone: function() {
            return this._tzm ? this.utcOffset(this._tzm) : "string" == typeof this._i && this.utcOffset(N(this._i)), this
        },
        hasAlignedHourOffset: function(e) {
            return e = e ? Dt(e).utcOffset() : 0, (this.utcOffset() - e) % 60 === 0
        },
        daysInMonth: function() {
            return x(this.year(), this.month())
        },
        dayOfYear: function(e) {
            var t = vt((Dt(this).startOf("day") - Dt(this).startOf("year")) / 864e5) + 1;
            return null == e ? t : this.add(e - t, "d")
        },
        quarter: function(e) {
            return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
        },
        weekYear: function(e) {
            var t = _t(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
            return null == e ? t : this.add(e - t, "y")
        },
        isoWeekYear: function(e) {
            var t = _t(this, 1, 4).year;
            return null == e ? t : this.add(e - t, "y")
        },
        week: function(e) {
            var t = this.localeData().week(this);
            return null == e ? t : this.add(7 * (e - t), "d")
        },
        isoWeek: function(e) {
            var t = _t(this, 1, 4).week;
            return null == e ? t : this.add(7 * (e - t), "d")
        },
        weekday: function(e) {
            var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return null == e ? t : this.add(e - t, "d")
        },
        isoWeekday: function(e) {
            return null == e ? this.day() || 7 : this.day(this.day() % 7 ? e : e - 7)
        },
        isoWeeksInYear: function() {
            return j(this.year(), 1, 4)
        },
        weeksInYear: function() {
            var e = this.localeData()._week;
            return j(this.year(), e.dow, e.doy)
        },
        get: function(e) {
            return e = w(e), this[e]()
        },
        set: function(e, t) {
            var a;
            if ("object" == typeof e)
                for (a in e) this.set(a, e[a]);
            else e = w(e), "function" == typeof this[e] && this[e](t);
            return this
        },
        locale: function(t) {
            var a;
            return t === e ? this._locale._abbr : (a = Dt.localeData(t), null != a && (this._locale = a), this)
        },
        lang: s("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(t) {
            return t === e ? this.localeData() : this.locale(t)
        }),
        localeData: function() {
            return this._locale
        },
        _dateUtcOffset: function() {
            return 15 * -Math.round(this._d.getTimezoneOffset() / 15)
        }
    }), Dt.fn.millisecond = Dt.fn.milliseconds = ft("Milliseconds", !1), Dt.fn.second = Dt.fn.seconds = ft("Seconds", !1), Dt.fn.minute = Dt.fn.minutes = ft("Minutes", !1), Dt.fn.hour = Dt.fn.hours = ft("Hours", !0), Dt.fn.date = ft("Date", !0), Dt.fn.dates = s("dates accessor is deprecated. Use date instead.", ft("Date", !0)), Dt.fn.year = ft("FullYear", !0), Dt.fn.years = s("years accessor is deprecated. Use year instead.", ft("FullYear", !0)), Dt.fn.days = Dt.fn.day, Dt.fn.months = Dt.fn.month, Dt.fn.weeks = Dt.fn.week, Dt.fn.isoWeeks = Dt.fn.isoWeek, Dt.fn.quarters = Dt.fn.quarter, Dt.fn.toJSON = Dt.fn.toISOString, Dt.fn.isUTC = Dt.fn.isUtc, h(Dt.duration.fn = c.prototype, {
        _bubble: function() {
            var e, t, a, n = this._milliseconds,
                r = this._days,
                s = this._months,
                i = this._data,
                d = 0;
            i.milliseconds = n % 1e3, e = f(n / 1e3), i.seconds = e % 60, t = f(e / 60), i.minutes = t % 60, a = f(t / 60), i.hours = a % 24, r += f(a / 24), d = f(pt(r)), r -= f(Lt(d)), s += f(r / 30), r %= 30, d += f(s / 12), s %= 12, i.days = r, i.months = s, i.years = d
        },
        abs: function() {
            return this._milliseconds = Math.abs(this._milliseconds), this._days = Math.abs(this._days), this._months = Math.abs(this._months), this._data.milliseconds = Math.abs(this._data.milliseconds), this._data.seconds = Math.abs(this._data.seconds), this._data.minutes = Math.abs(this._data.minutes), this._data.hours = Math.abs(this._data.hours), this._data.months = Math.abs(this._data.months), this._data.years = Math.abs(this._data.years), this
        },
        weeks: function() {
            return f(this.days() / 7)
        },
        valueOf: function() {
            return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * S(this._months / 12)
        },
        humanize: function(e) {
            var t = ot(this, !e, this.localeData());
            return e && (t = this.localeData().pastFuture(+this, t)), this.localeData().postformat(t)
        },
        add: function(e, t) {
            var a = Dt.duration(e, t);
            return this._milliseconds += a._milliseconds, this._days += a._days, this._months += a._months, this._bubble(), this
        },
        subtract: function(e, t) {
            var a = Dt.duration(e, t);
            return this._milliseconds -= a._milliseconds, this._days -= a._days, this._months -= a._months, this._bubble(), this
        },
        get: function(e) {
            return e = w(e), this[e.toLowerCase() + "s"]()
        },
        as: function(e) {
            var t, a;
            if (e = w(e), "month" === e || "year" === e) return t = this._days + this._milliseconds / 864e5, a = this._months + 12 * pt(t), "month" === e ? a : a / 12;
            switch (t = this._days + Math.round(Lt(this._months / 12)), e) {
                case "week":
                    return t / 7 + this._milliseconds / 6048e5;
                case "day":
                    return t + this._milliseconds / 864e5;
                case "hour":
                    return 24 * t + this._milliseconds / 36e5;
                case "minute":
                    return 24 * t * 60 + this._milliseconds / 6e4;
                case "second":
                    return 24 * t * 60 * 60 + this._milliseconds / 1e3;
                case "millisecond":
                    return Math.floor(24 * t * 60 * 60 * 1e3) + this._milliseconds;
                default:
                    throw new Error("Unknown unit " + e)
            }
        },
        lang: Dt.fn.lang,
        locale: Dt.fn.locale,
        toIsoString: s("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", function() {
            return this.toISOString()
        }),
        toISOString: function() {
            var e = Math.abs(this.years()),
                t = Math.abs(this.months()),
                a = Math.abs(this.days()),
                n = Math.abs(this.hours()),
                r = Math.abs(this.minutes()),
                s = Math.abs(this.seconds() + this.milliseconds() / 1e3);
            return this.asSeconds() ? (this.asSeconds() < 0 ? "-" : "") + "P" + (e ? e + "Y" : "") + (t ? t + "M" : "") + (a ? a + "D" : "") + (n || r || s ? "T" : "") + (n ? n + "H" : "") + (r ? r + "M" : "") + (s ? s + "S" : "") : "P0D"
        },
        localeData: function() {
            return this._locale
        },
        toJSON: function() {
            return this.toISOString()
        }
    }), Dt.duration.fn.toString = Dt.duration.fn.toISOString;
    for (kt in ua) a(ua, kt) && yt(kt.toLowerCase());
    Dt.duration.fn.asMilliseconds = function() {
            return this.as("ms")
        }, Dt.duration.fn.asSeconds = function() {
            return this.as("s")
        }, Dt.duration.fn.asMinutes = function() {
            return this.as("m")
        }, Dt.duration.fn.asHours = function() {
            return this.as("h")
        }, Dt.duration.fn.asDays = function() {
            return this.as("d")
        }, Dt.duration.fn.asWeeks = function() {
            return this.as("weeks")
        }, Dt.duration.fn.asMonths = function() {
            return this.as("M")
        }, Dt.duration.fn.asYears = function() {
            return this.as("y")
        }, Dt.locale("en", {
            ordinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function(e) {
                var t = e % 10,
                    a = 1 === S(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + a
            }
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("af", {
                months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
                monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
                weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
                weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
                weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
                meridiemParse: /vm|nm/i,
                isPM: function(e) {
                    return /^nm$/i.test(e)
                },
                meridiem: function(e, t, a) {
                    return 12 > e ? a ? "vm" : "VM" : a ? "nm" : "NM"
                },
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Vandag om] LT",
                    nextDay: "[MÃ´re om] LT",
                    nextWeek: "dddd [om] LT",
                    lastDay: "[Gister om] LT",
                    lastWeek: "[Laas] dddd [om] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "oor %s",
                    past: "%s gelede",
                    s: "'n paar sekondes",
                    m: "'n minuut",
                    mm: "%d minute",
                    h: "'n uur",
                    hh: "%d ure",
                    d: "'n dag",
                    dd: "%d dae",
                    M: "'n maand",
                    MM: "%d maande",
                    y: "'n jaar",
                    yy: "%d jaar"
                },
                ordinalParse: /\d{1,2}(ste|de)/,
                ordinal: function(e) {
                    return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ar-ma", {
                months: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split("_"),
                monthsShort: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split("_"),
                weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥ØªÙ†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split("_"),
                weekdaysShort: "Ø§Ø­Ø¯_Ø§ØªÙ†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split("_"),
                weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "ÙÙŠ %s",
                    past: "Ù…Ù†Ø° %s",
                    s: "Ø«ÙˆØ§Ù†",
                    m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                    mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                    h: "Ø³Ø§Ø¹Ø©",
                    hh: "%d Ø³Ø§Ø¹Ø§Øª",
                    d: "ÙŠÙˆÙ…",
                    dd: "%d Ø£ÙŠØ§Ù…",
                    M: "Ø´Ù‡Ø±",
                    MM: "%d Ø£Ø´Ù‡Ø±",
                    y: "Ø³Ù†Ø©",
                    yy: "%d Ø³Ù†ÙˆØ§Øª"
                },
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "Ù¡",
                    2: "Ù¢",
                    3: "Ù£",
                    4: "Ù¤",
                    5: "Ù¥",
                    6: "Ù¦",
                    7: "Ù§",
                    8: "Ù¨",
                    9: "Ù©",
                    0: "Ù "
                },
                a = {
                    "Ù¡": "1",
                    "Ù¢": "2",
                    "Ù£": "3",
                    "Ù¤": "4",
                    "Ù¥": "5",
                    "Ù¦": "6",
                    "Ù§": "7",
                    "Ù¨": "8",
                    "Ù©": "9",
                    "Ù ": "0"
                };
            return e.defineLocale("ar-sa", {
                months: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠÙˆ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆ_Ø£ØºØ³Ø·Ø³_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split("_"),
                monthsShort: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠÙˆ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆ_Ø£ØºØ³Ø·Ø³_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split("_"),
                weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split("_"),
                weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split("_"),
                weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                meridiemParse: /Øµ|Ù…/,
                isPM: function(e) {
                    return "Ù…" === e
                },
                meridiem: function(e) {
                    return 12 > e ? "Øµ" : "Ù…"
                },
                calendar: {
                    sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "ÙÙŠ %s",
                    past: "Ù…Ù†Ø° %s",
                    s: "Ø«ÙˆØ§Ù†",
                    m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                    mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                    h: "Ø³Ø§Ø¹Ø©",
                    hh: "%d Ø³Ø§Ø¹Ø§Øª",
                    d: "ÙŠÙˆÙ…",
                    dd: "%d Ø£ÙŠØ§Ù…",
                    M: "Ø´Ù‡Ø±",
                    MM: "%d Ø£Ø´Ù‡Ø±",
                    y: "Ø³Ù†Ø©",
                    yy: "%d Ø³Ù†ÙˆØ§Øª"
                },
                preparse: function(e) {
                    return e.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function(e) {
                        return a[e]
                    }).replace(/ØŒ/g, ",")
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    }).replace(/,/g, "ØŒ")
                },
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ar-tn", {
                months: "Ø¬Ø§Ù†ÙÙŠ_ÙÙŠÙØ±ÙŠ_Ù…Ø§Ø±Ø³_Ø£ÙØ±ÙŠÙ„_Ù…Ø§ÙŠ_Ø¬ÙˆØ§Ù†_Ø¬ÙˆÙŠÙ„ÙŠØ©_Ø£ÙˆØª_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split("_"),
                monthsShort: "Ø¬Ø§Ù†ÙÙŠ_ÙÙŠÙØ±ÙŠ_Ù…Ø§Ø±Ø³_Ø£ÙØ±ÙŠÙ„_Ù…Ø§ÙŠ_Ø¬ÙˆØ§Ù†_Ø¬ÙˆÙŠÙ„ÙŠØ©_Ø£ÙˆØª_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split("_"),
                weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split("_"),
                weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split("_"),
                weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "ÙÙŠ %s",
                    past: "Ù…Ù†Ø° %s",
                    s: "Ø«ÙˆØ§Ù†",
                    m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                    mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                    h: "Ø³Ø§Ø¹Ø©",
                    hh: "%d Ø³Ø§Ø¹Ø§Øª",
                    d: "ÙŠÙˆÙ…",
                    dd: "%d Ø£ÙŠØ§Ù…",
                    M: "Ø´Ù‡Ø±",
                    MM: "%d Ø£Ø´Ù‡Ø±",
                    y: "Ø³Ù†Ø©",
                    yy: "%d Ø³Ù†ÙˆØ§Øª"
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "Ù¡",
                    2: "Ù¢",
                    3: "Ù£",
                    4: "Ù¤",
                    5: "Ù¥",
                    6: "Ù¦",
                    7: "Ù§",
                    8: "Ù¨",
                    9: "Ù©",
                    0: "Ù "
                },
                a = {
                    "Ù¡": "1",
                    "Ù¢": "2",
                    "Ù£": "3",
                    "Ù¤": "4",
                    "Ù¥": "5",
                    "Ù¦": "6",
                    "Ù§": "7",
                    "Ù¨": "8",
                    "Ù©": "9",
                    "Ù ": "0"
                },
                n = function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && 10 >= e % 100 ? 3 : e % 100 >= 11 ? 4 : 5
                },
                r = {
                    s: ["Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ©", "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©", ["Ø«Ø§Ù†ÙŠØªØ§Ù†", "Ø«Ø§Ù†ÙŠØªÙŠÙ†"], "%d Ø«ÙˆØ§Ù†", "%d Ø«Ø§Ù†ÙŠØ©", "%d Ø«Ø§Ù†ÙŠØ©"],
                    m: ["Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©", "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©", ["Ø¯Ù‚ÙŠÙ‚ØªØ§Ù†", "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†"], "%d Ø¯Ù‚Ø§Ø¦Ù‚", "%d Ø¯Ù‚ÙŠÙ‚Ø©", "%d Ø¯Ù‚ÙŠÙ‚Ø©"],
                    h: ["Ø£Ù‚Ù„ Ù…Ù† Ø³Ø§Ø¹Ø©", "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©", ["Ø³Ø§Ø¹ØªØ§Ù†", "Ø³Ø§Ø¹ØªÙŠÙ†"], "%d Ø³Ø§Ø¹Ø§Øª", "%d Ø³Ø§Ø¹Ø©", "%d Ø³Ø§Ø¹Ø©"],
                    d: ["Ø£Ù‚Ù„ Ù…Ù† ÙŠÙˆÙ…", "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯", ["ÙŠÙˆÙ…Ø§Ù†", "ÙŠÙˆÙ…ÙŠÙ†"], "%d Ø£ÙŠØ§Ù…", "%d ÙŠÙˆÙ…Ù‹Ø§", "%d ÙŠÙˆÙ…"],
                    M: ["Ø£Ù‚Ù„ Ù…Ù† Ø´Ù‡Ø±", "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯", ["Ø´Ù‡Ø±Ø§Ù†", "Ø´Ù‡Ø±ÙŠÙ†"], "%d Ø£Ø´Ù‡Ø±", "%d Ø´Ù‡Ø±Ø§", "%d Ø´Ù‡Ø±"],
                    y: ["Ø£Ù‚Ù„ Ù…Ù† Ø¹Ø§Ù…", "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯", ["Ø¹Ø§Ù…Ø§Ù†", "Ø¹Ø§Ù…ÙŠÙ†"], "%d Ø£Ø¹ÙˆØ§Ù…", "%d Ø¹Ø§Ù…Ù‹Ø§", "%d Ø¹Ø§Ù…"]
                },
                s = function(e) {
                    return function(t, a) {
                        var s = n(t),
                            i = r[e][n(t)];
                        return 2 === s && (i = i[a ? 0 : 1]), i.replace(/%d/i, t)
                    }
                },
                i = ["ÙƒØ§Ù†ÙˆÙ† Ø§Ù„Ø«Ø§Ù†ÙŠ ÙŠÙ†Ø§ÙŠØ±", "Ø´Ø¨Ø§Ø· ÙØ¨Ø±Ø§ÙŠØ±", "Ø¢Ø°Ø§Ø± Ù…Ø§Ø±Ø³", "Ù†ÙŠØ³Ø§Ù† Ø£Ø¨Ø±ÙŠÙ„", "Ø£ÙŠØ§Ø± Ù…Ø§ÙŠÙˆ", "Ø­Ø²ÙŠØ±Ø§Ù† ÙŠÙˆÙ†ÙŠÙˆ", "ØªÙ…ÙˆØ² ÙŠÙˆÙ„ÙŠÙˆ", "Ø¢Ø¨ Ø£ØºØ³Ø·Ø³", "Ø£ÙŠÙ„ÙˆÙ„ Ø³Ø¨ØªÙ…Ø¨Ø±", "ØªØ´Ø±ÙŠÙ† Ø§Ù„Ø£ÙˆÙ„ Ø£ÙƒØªÙˆØ¨Ø±", "ØªØ´Ø±ÙŠÙ† Ø§Ù„Ø«Ø§Ù†ÙŠ Ù†ÙˆÙÙ…Ø¨Ø±", "ÙƒØ§Ù†ÙˆÙ† Ø§Ù„Ø£ÙˆÙ„ Ø¯ÙŠØ³Ù…Ø¨Ø±"];
            return e.defineLocale("ar", {
                months: i,
                monthsShort: i,
                weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split("_"),
                weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split("_"),
                weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                meridiemParse: /Øµ|Ù…/,
                isPM: function(e) {
                    return "Ù…" === e
                },
                meridiem: function(e) {
                    return 12 > e ? "Øµ" : "Ù…"
                },
                calendar: {
                    sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextDay: "[ØºØ¯Ù‹Ø§ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    nextWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastDay: "[Ø£Ù…Ø³ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    lastWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ø¨Ø¹Ø¯ %s",
                    past: "Ù…Ù†Ø° %s",
                    s: s("s"),
                    m: s("m"),
                    mm: s("m"),
                    h: s("h"),
                    hh: s("h"),
                    d: s("d"),
                    dd: s("d"),
                    M: s("M"),
                    MM: s("M"),
                    y: s("y"),
                    yy: s("y")
                },
                preparse: function(e) {
                    return e.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function(e) {
                        return a[e]
                    }).replace(/ØŒ/g, ",")
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    }).replace(/,/g, "ØŒ")
                },
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                1: "-inci",
                5: "-inci",
                8: "-inci",
                70: "-inci",
                80: "-inci",
                2: "-nci",
                7: "-nci",
                20: "-nci",
                50: "-nci",
                3: "-Ã¼ncÃ¼",
                4: "-Ã¼ncÃ¼",
                100: "-Ã¼ncÃ¼",
                6: "-ncÄ±",
                9: "-uncu",
                10: "-uncu",
                30: "-uncu",
                60: "-Ä±ncÄ±",
                90: "-Ä±ncÄ±"
            };
            return e.defineLocale("az", {
                months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
                monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
                weekdays: "Bazar_Bazar ertÉ™si_Ã‡É™rÅŸÉ™nbÉ™ axÅŸamÄ±_Ã‡É™rÅŸÉ™nbÉ™_CÃ¼mÉ™ axÅŸamÄ±_CÃ¼mÉ™_ÅžÉ™nbÉ™".split("_"),
                weekdaysShort: "Baz_BzE_Ã‡Ax_Ã‡É™r_CAx_CÃ¼m_ÅžÉ™n".split("_"),
                weekdaysMin: "Bz_BE_Ã‡A_Ã‡É™_CA_CÃ¼_ÅžÉ™".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[bugÃ¼n saat] LT",
                    nextDay: "[sabah saat] LT",
                    nextWeek: "[gÉ™lÉ™n hÉ™ftÉ™] dddd [saat] LT",
                    lastDay: "[dÃ¼nÉ™n] LT",
                    lastWeek: "[keÃ§É™n hÉ™ftÉ™] dddd [saat] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s sonra",
                    past: "%s É™vvÉ™l",
                    s: "birneÃ§É™ saniyyÉ™",
                    m: "bir dÉ™qiqÉ™",
                    mm: "%d dÉ™qiqÉ™",
                    h: "bir saat",
                    hh: "%d saat",
                    d: "bir gÃ¼n",
                    dd: "%d gÃ¼n",
                    M: "bir ay",
                    MM: "%d ay",
                    y: "bir il",
                    yy: "%d il"
                },
                meridiemParse: /gecÉ™|sÉ™hÉ™r|gÃ¼ndÃ¼z|axÅŸam/,
                isPM: function(e) {
                    return /^(gÃ¼ndÃ¼z|axÅŸam)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "gecÉ™" : 12 > e ? "sÉ™hÉ™r" : 17 > e ? "gÃ¼ndÃ¼z" : "axÅŸam"
                },
                ordinalParse: /\d{1,2}-(Ä±ncÄ±|inci|nci|Ã¼ncÃ¼|ncÄ±|uncu)/,
                ordinal: function(e) {
                    if (0 === e) return e + "-Ä±ncÄ±";
                    var a = e % 10,
                        n = e % 100 - a,
                        r = e >= 100 ? 100 : null;
                    return e + (t[a] || t[n] || t[r])
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t) {
                var a = e.split("_");
                return t % 10 === 1 && t % 100 !== 11 ? a[0] : t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20) ? a[1] : a[2]
            }

            function a(e, a, n) {
                var r = {
                    mm: a ? "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ð°_Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹_Ñ…Ð²Ñ–Ð»Ñ–Ð½" : "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ_Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹_Ñ…Ð²Ñ–Ð»Ñ–Ð½",
                    hh: a ? "Ð³Ð°Ð´Ð·Ñ–Ð½Ð°_Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹_Ð³Ð°Ð´Ð·Ñ–Ð½" : "Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ_Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹_Ð³Ð°Ð´Ð·Ñ–Ð½",
                    dd: "Ð´Ð·ÐµÐ½ÑŒ_Ð´Ð½Ñ–_Ð´Ð·Ñ‘Ð½",
                    MM: "Ð¼ÐµÑÑÑ†_Ð¼ÐµÑÑÑ†Ñ‹_Ð¼ÐµÑÑÑ†Ð°Ñž",
                    yy: "Ð³Ð¾Ð´_Ð³Ð°Ð´Ñ‹_Ð³Ð°Ð´Ð¾Ñž"
                };
                return "m" === n ? a ? "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ð°" : "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ" : "h" === n ? a ? "Ð³Ð°Ð´Ð·Ñ–Ð½Ð°" : "Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ" : e + " " + t(r[n], +e)
            }

            function n(e, t) {
                var a = {
                        nominative: "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½ÑŒ_Ð»ÑŽÑ‚Ñ‹_ÑÐ°ÐºÐ°Ð²Ñ–Ðº_ÐºÑ€Ð°ÑÐ°Ð²Ñ–Ðº_Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ_Ñ‡ÑÑ€Ð²ÐµÐ½ÑŒ_Ð»Ñ–Ð¿ÐµÐ½ÑŒ_Ð¶Ð½Ñ–Ð²ÐµÐ½ÑŒ_Ð²ÐµÑ€Ð°ÑÐµÐ½ÑŒ_ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–Ðº_Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´_ÑÐ½ÐµÐ¶Ð°Ð½ÑŒ".split("_"),
                        accusative: "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½Ñ_Ð»ÑŽÑ‚Ð°Ð³Ð°_ÑÐ°ÐºÐ°Ð²Ñ–ÐºÐ°_ÐºÑ€Ð°ÑÐ°Ð²Ñ–ÐºÐ°_Ñ‚Ñ€Ð°ÑžÐ½Ñ_Ñ‡ÑÑ€Ð²ÐµÐ½Ñ_Ð»Ñ–Ð¿ÐµÐ½Ñ_Ð¶Ð½Ñ–ÑžÐ½Ñ_Ð²ÐµÑ€Ð°ÑÐ½Ñ_ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–ÐºÐ°_Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´Ð°_ÑÐ½ÐµÐ¶Ð½Ñ".split("_")
                    },
                    n = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function r(e, t) {
                var a = {
                        nominative: "Ð½ÑÐ´Ð·ÐµÐ»Ñ_Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº_Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº_ÑÐµÑ€Ð°Ð´Ð°_Ñ‡Ð°Ñ†Ð²ÐµÑ€_Ð¿ÑÑ‚Ð½Ñ–Ñ†Ð°_ÑÑƒÐ±Ð¾Ñ‚Ð°".split("_"),
                        accusative: "Ð½ÑÐ´Ð·ÐµÐ»ÑŽ_Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº_Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº_ÑÐµÑ€Ð°Ð´Ñƒ_Ñ‡Ð°Ñ†Ð²ÐµÑ€_Ð¿ÑÑ‚Ð½Ñ–Ñ†Ñƒ_ÑÑƒÐ±Ð¾Ñ‚Ñƒ".split("_")
                    },
                    n = /\[ ?[Ð’Ð²] ?(?:Ð¼Ñ–Ð½ÑƒÐ»ÑƒÑŽ|Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½ÑƒÑŽ)? ?\] ?dddd/.test(t) ? "accusative" : "nominative";
                return a[n][e.day()]
            }
            return e.defineLocale("be", {
                months: n,
                monthsShort: "ÑÑ‚ÑƒÐ´_Ð»ÑŽÑ‚_ÑÐ°Ðº_ÐºÑ€Ð°Ñ_Ñ‚Ñ€Ð°Ð²_Ñ‡ÑÑ€Ð²_Ð»Ñ–Ð¿_Ð¶Ð½Ñ–Ð²_Ð²ÐµÑ€_ÐºÐ°ÑÑ‚_Ð»Ñ–ÑÑ‚_ÑÐ½ÐµÐ¶".split("_"),
                weekdays: r,
                weekdaysShort: "Ð½Ð´_Ð¿Ð½_Ð°Ñ‚_ÑÑ€_Ñ‡Ñ†_Ð¿Ñ‚_ÑÐ±".split("_"),
                weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð°Ñ‚_ÑÑ€_Ñ‡Ñ†_Ð¿Ñ‚_ÑÐ±".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY Ð³.",
                    LLL: "D MMMM YYYY Ð³., LT",
                    LLLL: "dddd, D MMMM YYYY Ð³., LT"
                },
                calendar: {
                    sameDay: "[Ð¡Ñ‘Ð½Ð½Ñ Ñž] LT",
                    nextDay: "[Ð—Ð°ÑžÑ‚Ñ€Ð° Ñž] LT",
                    lastDay: "[Ð£Ñ‡Ð¾Ñ€Ð° Ñž] LT",
                    nextWeek: function() {
                        return "[Ð£] dddd [Ñž] LT"
                    },
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return "[Ð£ Ð¼Ñ–Ð½ÑƒÐ»ÑƒÑŽ] dddd [Ñž] LT";
                            case 1:
                            case 2:
                            case 4:
                                return "[Ð£ Ð¼Ñ–Ð½ÑƒÐ»Ñ‹] dddd [Ñž] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ð¿Ñ€Ð°Ð· %s",
                    past: "%s Ñ‚Ð°Ð¼Ñƒ",
                    s: "Ð½ÐµÐºÐ°Ð»ÑŒÐºÑ– ÑÐµÐºÑƒÐ½Ð´",
                    m: a,
                    mm: a,
                    h: a,
                    hh: a,
                    d: "Ð´Ð·ÐµÐ½ÑŒ",
                    dd: a,
                    M: "Ð¼ÐµÑÑÑ†",
                    MM: a,
                    y: "Ð³Ð¾Ð´",
                    yy: a
                },
                meridiemParse: /Ð½Ð¾Ñ‡Ñ‹|Ñ€Ð°Ð½Ñ–Ñ†Ñ‹|Ð´Ð½Ñ|Ð²ÐµÑ‡Ð°Ñ€Ð°/,
                isPM: function(e) {
                    return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡Ð°Ñ€Ð°)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "Ð½Ð¾Ñ‡Ñ‹" : 12 > e ? "Ñ€Ð°Ð½Ñ–Ñ†Ñ‹" : 17 > e ? "Ð´Ð½Ñ" : "Ð²ÐµÑ‡Ð°Ñ€Ð°"
                },
                ordinalParse: /\d{1,2}-(Ñ–|Ñ‹|Ð³Ð°)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                        case "w":
                        case "W":
                            return e % 10 !== 2 && e % 10 !== 3 || e % 100 === 12 || e % 100 === 13 ? e + "-Ñ‹" : e + "-Ñ–";
                        case "D":
                            return e + "-Ð³Ð°";
                        default:
                            return e
                    }
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("bg", {
                months: "ÑÐ½ÑƒÐ°Ñ€Ð¸_Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€Ð¸Ð»_Ð¼Ð°Ð¹_ÑŽÐ½Ð¸_ÑŽÐ»Ð¸_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸_Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸_Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸_Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸".split("_"),
                monthsShort: "ÑÐ½Ñ€_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_ÑŽÐ½Ð¸_ÑŽÐ»Ð¸_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ‚_Ð½Ð¾Ðµ_Ð´ÐµÐº".split("_"),
                weekdays: "Ð½ÐµÐ´ÐµÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÑÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÑŠÑ€Ñ‚ÑŠÐº_Ð¿ÐµÑ‚ÑŠÐº_ÑÑŠÐ±Ð¾Ñ‚Ð°".split("_"),
                weekdaysShort: "Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²Ñ‚Ð¾_ÑÑ€Ñ_Ñ‡ÐµÑ‚_Ð¿ÐµÑ‚_ÑÑŠÐ±".split("_"),
                weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "D.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Ð”Ð½ÐµÑ Ð²] LT",
                    nextDay: "[Ð£Ñ‚Ñ€Ðµ Ð²] LT",
                    nextWeek: "dddd [Ð²] LT",
                    lastDay: "[Ð’Ñ‡ÐµÑ€Ð° Ð²] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                            case 6:
                                return "[Ð’ Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð°Ñ‚Ð°] dddd [Ð²] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[Ð’ Ð¸Ð·Ð¼Ð¸Ð½Ð°Ð»Ð¸Ñ] dddd [Ð²] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "ÑÐ»ÐµÐ´ %s",
                    past: "Ð¿Ñ€ÐµÐ´Ð¸ %s",
                    s: "Ð½ÑÐºÐ¾Ð»ÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                    m: "Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
                    mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
                    h: "Ñ‡Ð°Ñ",
                    hh: "%d Ñ‡Ð°ÑÐ°",
                    d: "Ð´ÐµÐ½",
                    dd: "%d Ð´Ð½Ð¸",
                    M: "Ð¼ÐµÑÐµÑ†",
                    MM: "%d Ð¼ÐµÑÐµÑ†Ð°",
                    y: "Ð³Ð¾Ð´Ð¸Ð½Ð°",
                    yy: "%d Ð³Ð¾Ð´Ð¸Ð½Ð¸"
                },
                ordinalParse: /\d{1,2}-(ÐµÐ²|ÐµÐ½|Ñ‚Ð¸|Ð²Ð¸|Ñ€Ð¸|Ð¼Ð¸)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = e % 100;
                    return 0 === e ? e + "-ÐµÐ²" : 0 === a ? e + "-ÐµÐ½" : a > 10 && 20 > a ? e + "-Ñ‚Ð¸" : 1 === t ? e + "-Ð²Ð¸" : 2 === t ? e + "-Ñ€Ð¸" : 7 === t || 8 === t ? e + "-Ð¼Ð¸" : e + "-Ñ‚Ð¸"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "à§§",
                    2: "à§¨",
                    3: "à§©",
                    4: "à§ª",
                    5: "à§«",
                    6: "à§¬",
                    7: "à§­",
                    8: "à§®",
                    9: "à§¯",
                    0: "à§¦"
                },
                a = {
                    "à§§": "1",
                    "à§¨": "2",
                    "à§©": "3",
                    "à§ª": "4",
                    "à§«": "5",
                    "à§¬": "6",
                    "à§­": "7",
                    "à§®": "8",
                    "à§¯": "9",
                    "à§¦": "0"
                };
            return e.defineLocale("bn", {
                months: "à¦œà¦¾à¦¨à§à§Ÿà¦¾à¦°à§€_à¦«à§‡à¦¬à§à§Ÿà¦¾à¦°à§€_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà§à¦°à¦¿à¦²_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²à¦¾à¦‡_à¦…à¦—à¦¾à¦¸à§à¦Ÿ_à¦¸à§‡à¦ªà§à¦Ÿà§‡à¦®à§à¦¬à¦°_à¦…à¦•à§à¦Ÿà§‹à¦¬à¦°_à¦¨à¦­à§‡à¦®à§à¦¬à¦°_à¦¡à¦¿à¦¸à§‡à¦®à§à¦¬à¦°".split("_"),
                monthsShort: "à¦œà¦¾à¦¨à§_à¦«à§‡à¦¬_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà¦°_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²_à¦…à¦—_à¦¸à§‡à¦ªà§à¦Ÿ_à¦…à¦•à§à¦Ÿà§‹_à¦¨à¦­_à¦¡à¦¿à¦¸à§‡à¦®à§".split("_"),
                weekdays: "à¦°à¦¬à¦¿à¦¬à¦¾à¦°_à¦¸à§‹à¦®à¦¬à¦¾à¦°_à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°_à¦¬à§à¦§à¦¬à¦¾à¦°_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à§à¦¤à¦¿à¦¬à¦¾à¦°_à¦¶à§à¦•à§à¦°à§à¦¬à¦¾à¦°_à¦¶à¦¨à¦¿à¦¬à¦¾à¦°".split("_"),
                weekdaysShort: "à¦°à¦¬à¦¿_à¦¸à§‹à¦®_à¦®à¦™à§à¦—à¦²_à¦¬à§à¦§_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à§à¦¤à¦¿_à¦¶à§à¦•à§à¦°à§_à¦¶à¦¨à¦¿".split("_"),
                weekdaysMin: "à¦°à¦¬_à¦¸à¦®_à¦®à¦™à§à¦—_à¦¬à§_à¦¬à§à¦°à¦¿à¦¹_à¦¶à§_à¦¶à¦¨à¦¿".split("_"),
                longDateFormat: {
                    LT: "A h:mm à¦¸à¦®à§Ÿ",
                    LTS: "A h:mm:ss à¦¸à¦®à§Ÿ",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à¦†à¦œ] LT",
                    nextDay: "[à¦†à¦—à¦¾à¦®à§€à¦•à¦¾à¦²] LT",
                    nextWeek: "dddd, LT",
                    lastDay: "[à¦—à¦¤à¦•à¦¾à¦²] LT",
                    lastWeek: "[à¦—à¦¤] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à¦ªà¦°à§‡",
                    past: "%s à¦†à¦—à§‡",
                    s: "à¦•à¦à¦• à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
                    m: "à¦à¦• à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                    mm: "%d à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                    h: "à¦à¦• à¦˜à¦¨à§à¦Ÿà¦¾",
                    hh: "%d à¦˜à¦¨à§à¦Ÿà¦¾",
                    d: "à¦à¦• à¦¦à¦¿à¦¨",
                    dd: "%d à¦¦à¦¿à¦¨",
                    M: "à¦à¦• à¦®à¦¾à¦¸",
                    MM: "%d à¦®à¦¾à¦¸",
                    y: "à¦à¦• à¦¬à¦›à¦°",
                    yy: "%d à¦¬à¦›à¦°"
                },
                preparse: function(e) {
                    return e.replace(/[à§§à§¨à§©à§ªà§«à§¬à§­à§®à§¯à§¦]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                meridiemParse: /à¦°à¦¾à¦¤|à¦¶à¦•à¦¾à¦²|à¦¦à§à¦ªà§à¦°|à¦¬à¦¿à¦•à§‡à¦²|à¦°à¦¾à¦¤/,
                isPM: function(e) {
                    return /^(à¦¦à§à¦ªà§à¦°|à¦¬à¦¿à¦•à§‡à¦²|à¦°à¦¾à¦¤)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "à¦°à¦¾à¦¤" : 10 > e ? "à¦¶à¦•à¦¾à¦²" : 17 > e ? "à¦¦à§à¦ªà§à¦°" : 20 > e ? "à¦¬à¦¿à¦•à§‡à¦²" : "à¦°à¦¾à¦¤"
                },
                week: {
                    dow: 0,
                    doy: 6
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "à¼¡",
                    2: "à¼¢",
                    3: "à¼£",
                    4: "à¼¤",
                    5: "à¼¥",
                    6: "à¼¦",
                    7: "à¼§",
                    8: "à¼¨",
                    9: "à¼©",
                    0: "à¼ "
                },
                a = {
                    "à¼¡": "1",
                    "à¼¢": "2",
                    "à¼£": "3",
                    "à¼¤": "4",
                    "à¼¥": "5",
                    "à¼¦": "6",
                    "à¼§": "7",
                    "à¼¨": "8",
                    "à¼©": "9",
                    "à¼ ": "0"
                };
            return e.defineLocale("bo", {
                months: "à½Ÿà¾³à¼‹à½–à¼‹à½‘à½„à¼‹à½”à½¼_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½‰à½²à½¦à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½¦à½´à½˜à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½žà½²à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½£à¾”à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à¾²à½´à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½‘à½´à½“à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½¢à¾’à¾±à½‘à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à½‚à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½…à½²à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½‰à½²à½¦à¼‹à½”".split("_"),
                monthsShort: "à½Ÿà¾³à¼‹à½–à¼‹à½‘à½„à¼‹à½”à½¼_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½‰à½²à½¦à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½¦à½´à½˜à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½žà½²à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½£à¾”à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à¾²à½´à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½‘à½´à½“à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½¢à¾’à¾±à½‘à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à½‚à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½…à½²à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½‰à½²à½¦à¼‹à½”".split("_"),
                weekdays: "à½‚à½Ÿà½ à¼‹à½‰à½²à¼‹à½˜à¼‹_à½‚à½Ÿà½ à¼‹à½Ÿà¾³à¼‹à½–à¼‹_à½‚à½Ÿà½ à¼‹à½˜à½²à½‚à¼‹à½‘à½˜à½¢à¼‹_à½‚à½Ÿà½ à¼‹à½£à¾·à½‚à¼‹à½”à¼‹_à½‚à½Ÿà½ à¼‹à½•à½´à½¢à¼‹à½–à½´_à½‚à½Ÿà½ à¼‹à½”à¼‹à½¦à½„à½¦à¼‹_à½‚à½Ÿà½ à¼‹à½¦à¾¤à½ºà½“à¼‹à½”à¼‹".split("_"),
                weekdaysShort: "à½‰à½²à¼‹à½˜à¼‹_à½Ÿà¾³à¼‹à½–à¼‹_à½˜à½²à½‚à¼‹à½‘à½˜à½¢à¼‹_à½£à¾·à½‚à¼‹à½”à¼‹_à½•à½´à½¢à¼‹à½–à½´_à½”à¼‹à½¦à½„à½¦à¼‹_à½¦à¾¤à½ºà½“à¼‹à½”à¼‹".split("_"),
                weekdaysMin: "à½‰à½²à¼‹à½˜à¼‹_à½Ÿà¾³à¼‹à½–à¼‹_à½˜à½²à½‚à¼‹à½‘à½˜à½¢à¼‹_à½£à¾·à½‚à¼‹à½”à¼‹_à½•à½´à½¢à¼‹à½–à½´_à½”à¼‹à½¦à½„à½¦à¼‹_à½¦à¾¤à½ºà½“à¼‹à½”à¼‹".split("_"),
                longDateFormat: {
                    LT: "A h:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à½‘à½²à¼‹à½¢à½²à½„] LT",
                    nextDay: "[à½¦à½„à¼‹à½‰à½²à½“] LT",
                    nextWeek: "[à½–à½‘à½´à½“à¼‹à½•à¾²à½‚à¼‹à½¢à¾—à½ºà½¦à¼‹à½˜], LT",
                    lastDay: "[à½à¼‹à½¦à½„] LT",
                    lastWeek: "[à½–à½‘à½´à½“à¼‹à½•à¾²à½‚à¼‹à½˜à½à½ à¼‹à½˜] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à½£à¼‹",
                    past: "%s à½¦à¾”à½“à¼‹à½£",
                    s: "à½£à½˜à¼‹à½¦à½„",
                    m: "à½¦à¾à½¢à¼‹à½˜à¼‹à½‚à½…à½²à½‚",
                    mm: "%d à½¦à¾à½¢à¼‹à½˜",
                    h: "à½†à½´à¼‹à½šà½¼à½‘à¼‹à½‚à½…à½²à½‚",
                    hh: "%d à½†à½´à¼‹à½šà½¼à½‘",
                    d: "à½‰à½²à½“à¼‹à½‚à½…à½²à½‚",
                    dd: "%d à½‰à½²à½“à¼‹",
                    M: "à½Ÿà¾³à¼‹à½–à¼‹à½‚à½…à½²à½‚",
                    MM: "%d à½Ÿà¾³à¼‹à½–",
                    y: "à½£à½¼à¼‹à½‚à½…à½²à½‚",
                    yy: "%d à½£à½¼"
                },
                preparse: function(e) {
                    return e.replace(/[à¼¡à¼¢à¼£à¼¤à¼¥à¼¦à¼§à¼¨à¼©à¼ ]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                meridiemParse: /à½˜à½šà½“à¼‹à½˜à½¼|à½žà½¼à½‚à½¦à¼‹à½€à½¦|à½‰à½²à½“à¼‹à½‚à½´à½„|à½‘à½‚à½¼à½„à¼‹à½‘à½‚|à½˜à½šà½“à¼‹à½˜à½¼/,
                isPM: function(e) {
                    return /^(à½‰à½²à½“à¼‹à½‚à½´à½„|à½‘à½‚à½¼à½„à¼‹à½‘à½‚|à½˜à½šà½“à¼‹à½˜à½¼)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "à½˜à½šà½“à¼‹à½˜à½¼" : 10 > e ? "à½žà½¼à½‚à½¦à¼‹à½€à½¦" : 17 > e ? "à½‰à½²à½“à¼‹à½‚à½´à½„" : 20 > e ? "à½‘à½‚à½¼à½„à¼‹à½‘à½‚" : "à½˜à½šà½“à¼‹à½˜à½¼"
                },
                week: {
                    dow: 0,
                    doy: 6
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(t) {
            function a(e, t, a) {
                var n = {
                    mm: "munutenn",
                    MM: "miz",
                    dd: "devezh"
                };
                return e + " " + s(n[a], e)
            }

            function n(e) {
                switch (r(e)) {
                    case 1:
                    case 3:
                    case 4:
                    case 5:
                    case 9:
                        return e + " bloaz";
                    default:
                        return e + " vloaz"
                }
            }

            function r(e) {
                return e > 9 ? r(e % 10) : e
            }

            function s(e, t) {
                return 2 === t ? i(e) : e
            }

            function i(t) {
                var a = {
                    m: "v",
                    b: "v",
                    d: "z"
                };
                return a[t.charAt(0)] === e ? t : a[t.charAt(0)] + t.substring(1)
            }
            return t.defineLocale("br", {
                months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
                monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
                weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
                weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
                weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
                longDateFormat: {
                    LT: "h[e]mm A",
                    LTS: "h[e]mm:ss A",
                    L: "DD/MM/YYYY",
                    LL: "D [a viz] MMMM YYYY",
                    LLL: "D [a viz] MMMM YYYY LT",
                    LLLL: "dddd, D [a viz] MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Hiziv da] LT",
                    nextDay: "[Warc'hoazh da] LT",
                    nextWeek: "dddd [da] LT",
                    lastDay: "[Dec'h da] LT",
                    lastWeek: "dddd [paset da] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "a-benn %s",
                    past: "%s 'zo",
                    s: "un nebeud segondennoÃ¹",
                    m: "ur vunutenn",
                    mm: a,
                    h: "un eur",
                    hh: "%d eur",
                    d: "un devezh",
                    dd: a,
                    M: "ur miz",
                    MM: a,
                    y: "ur bloaz",
                    yy: n
                },
                ordinalParse: /\d{1,2}(aÃ±|vet)/,
                ordinal: function(e) {
                    var t = 1 === e ? "aÃ±" : "vet";
                    return e + t
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = e + " ";
                switch (a) {
                    case "m":
                        return t ? "jedna minuta" : "jedne minute";
                    case "mm":
                        return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                    case "h":
                        return t ? "jedan sat" : "jednog sata";
                    case "hh":
                        return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                    case "dd":
                        return n += 1 === e ? "dan" : "dana";
                    case "MM":
                        return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                    case "yy":
                        return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                }
            }
            return e.defineLocale("bs", {
                months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
                monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
                weekdays: "nedjelja_ponedjeljak_utorak_srijeda_Äetvrtak_petak_subota".split("_"),
                weekdaysShort: "ned._pon._uto._sri._Äet._pet._sub.".split("_"),
                weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD. MM. YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[danas u] LT",
                    nextDay: "[sutra u] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[u] [nedjelju] [u] LT";
                            case 3:
                                return "[u] [srijedu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                        }
                    },
                    lastDay: "[juÄer u] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                                return "[proÅ¡lu] dddd [u] LT";
                            case 6:
                                return "[proÅ¡le] [subote] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[proÅ¡li] dddd [u] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "prije %s",
                    s: "par sekundi",
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: "dan",
                    dd: t,
                    M: "mjesec",
                    MM: t,
                    y: "godinu",
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ca", {
                months: "gener_febrer_marÃ§_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
                monthsShort: "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
                weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
                weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
                weekdaysMin: "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: function() {
                        return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                    },
                    nextDay: function() {
                        return "[demÃ  a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                    },
                    nextWeek: function() {
                        return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                    },
                    lastDay: function() {
                        return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                    },
                    lastWeek: function() {
                        return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "en %s",
                    past: "fa %s",
                    s: "uns segons",
                    m: "un minut",
                    mm: "%d minuts",
                    h: "una hora",
                    hh: "%d hores",
                    d: "un dia",
                    dd: "%d dies",
                    M: "un mes",
                    MM: "%d mesos",
                    y: "un any",
                    yy: "%d anys"
                },
                ordinalParse: /\d{1,2}(r|n|t|Ã¨|a)/,
                ordinal: function(e, t) {
                    var a = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "Ã¨";
                    return ("w" === t || "W" === t) && (a = "a"), e + a
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e) {
                return e > 1 && 5 > e && 1 !== ~~(e / 10)
            }

            function a(e, a, n, r) {
                var s = e + " ";
                switch (n) {
                    case "s":
                        return a || r ? "pÃ¡r sekund" : "pÃ¡r sekundami";
                    case "m":
                        return a ? "minuta" : r ? "minutu" : "minutou";
                    case "mm":
                        return a || r ? s + (t(e) ? "minuty" : "minut") : s + "minutami";
                    case "h":
                        return a ? "hodina" : r ? "hodinu" : "hodinou";
                    case "hh":
                        return a || r ? s + (t(e) ? "hodiny" : "hodin") : s + "hodinami";
                    case "d":
                        return a || r ? "den" : "dnem";
                    case "dd":
                        return a || r ? s + (t(e) ? "dny" : "dnÃ­") : s + "dny";
                    case "M":
                        return a || r ? "mÄ›sÃ­c" : "mÄ›sÃ­cem";
                    case "MM":
                        return a || r ? s + (t(e) ? "mÄ›sÃ­ce" : "mÄ›sÃ­cÅ¯") : s + "mÄ›sÃ­ci";
                    case "y":
                        return a || r ? "rok" : "rokem";
                    case "yy":
                        return a || r ? s + (t(e) ? "roky" : "let") : s + "lety"
                }
            }
            var n = "leden_Ãºnor_bÅ™ezen_duben_kvÄ›ten_Äerven_Äervenec_srpen_zÃ¡Å™Ã­_Å™Ã­jen_listopad_prosinec".split("_"),
                r = "led_Ãºno_bÅ™e_dub_kvÄ›_Ävn_Ävc_srp_zÃ¡Å™_Å™Ã­j_lis_pro".split("_");
            return e.defineLocale("cs", {
                months: n,
                monthsShort: r,
                monthsParse: function(e, t) {
                    var a, n = [];
                    for (a = 0; 12 > a; a++) n[a] = new RegExp("^" + e[a] + "$|^" + t[a] + "$", "i");
                    return n
                }(n, r),
                weekdays: "nedÄ›le_pondÄ›lÃ­_ÃºterÃ½_stÅ™eda_Ätvrtek_pÃ¡tek_sobota".split("_"),
                weekdaysShort: "ne_po_Ãºt_st_Ät_pÃ¡_so".split("_"),
                weekdaysMin: "ne_po_Ãºt_st_Ät_pÃ¡_so".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[dnes v] LT",
                    nextDay: "[zÃ­tra v] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[v nedÄ›li v] LT";
                            case 1:
                            case 2:
                                return "[v] dddd [v] LT";
                            case 3:
                                return "[ve stÅ™edu v] LT";
                            case 4:
                                return "[ve Ätvrtek v] LT";
                            case 5:
                                return "[v pÃ¡tek v] LT";
                            case 6:
                                return "[v sobotu v] LT"
                        }
                    },
                    lastDay: "[vÄera v] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[minulou nedÄ›li v] LT";
                            case 1:
                            case 2:
                                return "[minulÃ©] dddd [v] LT";
                            case 3:
                                return "[minulou stÅ™edu v] LT";
                            case 4:
                            case 5:
                                return "[minulÃ½] dddd [v] LT";
                            case 6:
                                return "[minulou sobotu v] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "pÅ™ed %s",
                    s: a,
                    m: a,
                    mm: a,
                    h: a,
                    hh: a,
                    d: a,
                    dd: a,
                    M: a,
                    MM: a,
                    y: a,
                    yy: a
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("cv", {
                months: "ÐºÄƒÑ€Ð»Ð°Ñ‡_Ð½Ð°Ñ€ÄƒÑ_Ð¿ÑƒÑˆ_Ð°ÐºÐ°_Ð¼Ð°Ð¹_Ã§Ä•Ñ€Ñ‚Ð¼Ðµ_ÑƒÑ‚Äƒ_Ã§ÑƒÑ€Ð»Ð°_Ð°Ð²ÄƒÐ½_ÑŽÐ¿Ð°_Ñ‡Ó³Ðº_Ñ€Ð°ÑˆÑ‚Ð°Ð²".split("_"),
                monthsShort: "ÐºÄƒÑ€_Ð½Ð°Ñ€_Ð¿ÑƒÑˆ_Ð°ÐºÐ°_Ð¼Ð°Ð¹_Ã§Ä•Ñ€_ÑƒÑ‚Äƒ_Ã§ÑƒÑ€_Ð°Ð²_ÑŽÐ¿Ð°_Ñ‡Ó³Ðº_Ñ€Ð°Ñˆ".split("_"),
                weekdays: "Ð²Ñ‹Ñ€ÑÐ°Ñ€Ð½Ð¸ÐºÑƒÐ½_Ñ‚ÑƒÐ½Ñ‚Ð¸ÐºÑƒÐ½_Ñ‹Ñ‚Ð»Ð°Ñ€Ð¸ÐºÑƒÐ½_ÑŽÐ½ÐºÑƒÐ½_ÐºÄ•Ã§Ð½ÐµÑ€Ð½Ð¸ÐºÑƒÐ½_ÑÑ€Ð½ÐµÐºÑƒÐ½_ÑˆÄƒÐ¼Ð°Ñ‚ÐºÑƒÐ½".split("_"),
                weekdaysShort: "Ð²Ñ‹Ñ€_Ñ‚ÑƒÐ½_Ñ‹Ñ‚Ð»_ÑŽÐ½_ÐºÄ•Ã§_ÑÑ€Ð½_ÑˆÄƒÐ¼".split("_"),
                weekdaysMin: "Ð²Ñ€_Ñ‚Ð½_Ñ‹Ñ‚_ÑŽÐ½_ÐºÃ§_ÑÑ€_ÑˆÐ¼".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD-MM-YYYY",
                    LL: "YYYY [Ã§ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹ÄƒÑ…Ä•Ð½] D[-Ð¼Ä•ÑˆÄ•]",
                    LLL: "YYYY [Ã§ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹ÄƒÑ…Ä•Ð½] D[-Ð¼Ä•ÑˆÄ•], LT",
                    LLLL: "dddd, YYYY [Ã§ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹ÄƒÑ…Ä•Ð½] D[-Ð¼Ä•ÑˆÄ•], LT"
                },
                calendar: {
                    sameDay: "[ÐŸÐ°ÑÐ½] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                    nextDay: "[Ð«Ñ€Ð°Ð½] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                    lastDay: "[Ä”Ð½ÐµÑ€] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                    nextWeek: "[Ã‡Ð¸Ñ‚ÐµÑ] dddd LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                    lastWeek: "[Ð˜Ñ€Ñ‚Ð½Ä•] dddd LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                    sameElse: "L"
                },
                relativeTime: {
                    future: function(e) {
                        var t = /ÑÐµÑ…ÐµÑ‚$/i.exec(e) ? "Ñ€ÐµÐ½" : /Ã§ÑƒÐ»$/i.exec(e) ? "Ñ‚Ð°Ð½" : "Ñ€Ð°Ð½";
                        return e + t
                    },
                    past: "%s ÐºÐ°ÑÐ»Ð»Ð°",
                    s: "Ð¿Ä•Ñ€-Ð¸Ðº Ã§ÐµÐºÐºÑƒÐ½Ñ‚",
                    m: "Ð¿Ä•Ñ€ Ð¼Ð¸Ð½ÑƒÑ‚",
                    mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚",
                    h: "Ð¿Ä•Ñ€ ÑÐµÑ…ÐµÑ‚",
                    hh: "%d ÑÐµÑ…ÐµÑ‚",
                    d: "Ð¿Ä•Ñ€ ÐºÑƒÐ½",
                    dd: "%d ÐºÑƒÐ½",
                    M: "Ð¿Ä•Ñ€ ÑƒÐ¹ÄƒÑ…",
                    MM: "%d ÑƒÐ¹ÄƒÑ…",
                    y: "Ð¿Ä•Ñ€ Ã§ÑƒÐ»",
                    yy: "%d Ã§ÑƒÐ»"
                },
                ordinalParse: /\d{1,2}-Ð¼Ä•Ñˆ/,
                ordinal: "%d-Ð¼Ä•Ñˆ",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("cy", {
                months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
                monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
                weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
                weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
                weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Heddiw am] LT",
                    nextDay: "[Yfory am] LT",
                    nextWeek: "dddd [am] LT",
                    lastDay: "[Ddoe am] LT",
                    lastWeek: "dddd [diwethaf am] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "mewn %s",
                    past: "%s yn Ã´l",
                    s: "ychydig eiliadau",
                    m: "munud",
                    mm: "%d munud",
                    h: "awr",
                    hh: "%d awr",
                    d: "diwrnod",
                    dd: "%d diwrnod",
                    M: "mis",
                    MM: "%d mis",
                    y: "blwyddyn",
                    yy: "%d flynedd"
                },
                ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
                ordinal: function(e) {
                    var t = e,
                        a = "",
                        n = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"];
                    return t > 20 ? a = 40 === t || 50 === t || 60 === t || 80 === t || 100 === t ? "fed" : "ain" : t > 0 && (a = n[t]), e + a
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("da", {
                months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
                monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                weekdays: "sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag".split("_"),
                weekdaysShort: "sÃ¸n_man_tir_ons_tor_fre_lÃ¸r".split("_"),
                weekdaysMin: "sÃ¸_ma_ti_on_to_fr_lÃ¸".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd [d.] D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[I dag kl.] LT",
                    nextDay: "[I morgen kl.] LT",
                    nextWeek: "dddd [kl.] LT",
                    lastDay: "[I gÃ¥r kl.] LT",
                    lastWeek: "[sidste] dddd [kl] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "om %s",
                    past: "%s siden",
                    s: "fÃ¥ sekunder",
                    m: "et minut",
                    mm: "%d minutter",
                    h: "en time",
                    hh: "%d timer",
                    d: "en dag",
                    dd: "%d dage",
                    M: "en mÃ¥ned",
                    MM: "%d mÃ¥neder",
                    y: "et Ã¥r",
                    yy: "%d Ã¥r"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = {
                    m: ["eine Minute", "einer Minute"],
                    h: ["eine Stunde", "einer Stunde"],
                    d: ["ein Tag", "einem Tag"],
                    dd: [e + " Tage", e + " Tagen"],
                    M: ["ein Monat", "einem Monat"],
                    MM: [e + " Monate", e + " Monaten"],
                    y: ["ein Jahr", "einem Jahr"],
                    yy: [e + " Jahre", e + " Jahren"]
                };
                return t ? n[a][0] : n[a][1]
            }
            return e.defineLocale("de-at", {
                months: "JÃ¤nner_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                monthsShort: "JÃ¤n._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
                weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Heute um] LT [Uhr]",
                    sameElse: "L",
                    nextDay: "[Morgen um] LT [Uhr]",
                    nextWeek: "dddd [um] LT [Uhr]",
                    lastDay: "[Gestern um] LT [Uhr]",
                    lastWeek: "[letzten] dddd [um] LT [Uhr]"
                },
                relativeTime: {
                    future: "in %s",
                    past: "vor %s",
                    s: "ein paar Sekunden",
                    m: t,
                    mm: "%d Minuten",
                    h: t,
                    hh: "%d Stunden",
                    d: t,
                    dd: t,
                    M: t,
                    MM: t,
                    y: t,
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = {
                    m: ["eine Minute", "einer Minute"],
                    h: ["eine Stunde", "einer Stunde"],
                    d: ["ein Tag", "einem Tag"],
                    dd: [e + " Tage", e + " Tagen"],
                    M: ["ein Monat", "einem Monat"],
                    MM: [e + " Monate", e + " Monaten"],
                    y: ["ein Jahr", "einem Jahr"],
                    yy: [e + " Jahre", e + " Jahren"]
                };
                return t ? n[a][0] : n[a][1]
            }
            return e.defineLocale("de", {
                months: "Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                monthsShort: "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
                weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Heute um] LT [Uhr]",
                    sameElse: "L",
                    nextDay: "[Morgen um] LT [Uhr]",
                    nextWeek: "dddd [um] LT [Uhr]",
                    lastDay: "[Gestern um] LT [Uhr]",
                    lastWeek: "[letzten] dddd [um] LT [Uhr]"
                },
                relativeTime: {
                    future: "in %s",
                    past: "vor %s",
                    s: "ein paar Sekunden",
                    m: t,
                    mm: "%d Minuten",
                    h: t,
                    hh: "%d Stunden",
                    d: t,
                    dd: t,
                    M: t,
                    MM: t,
                    y: t,
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("el", {
                monthsNominativeEl: "Î™Î±Î½Î¿Ï…Î¬ÏÎ¹Î¿Ï‚_Î¦ÎµÎ²ÏÎ¿Ï…Î¬ÏÎ¹Î¿Ï‚_ÎœÎ¬ÏÏ„Î¹Î¿Ï‚_Î‘Ï€ÏÎ¯Î»Î¹Î¿Ï‚_ÎœÎ¬Î¹Î¿Ï‚_Î™Î¿ÏÎ½Î¹Î¿Ï‚_Î™Î¿ÏÎ»Î¹Î¿Ï‚_Î‘ÏÎ³Î¿Ï…ÏƒÏ„Î¿Ï‚_Î£ÎµÏ€Ï„Î­Î¼Î²ÏÎ¹Î¿Ï‚_ÎŸÎºÏ„ÏŽÎ²ÏÎ¹Î¿Ï‚_ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï‚_Î”ÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï‚".split("_"),
                monthsGenitiveEl: "Î™Î±Î½Î¿Ï…Î±ÏÎ¯Î¿Ï…_Î¦ÎµÎ²ÏÎ¿Ï…Î±ÏÎ¯Î¿Ï…_ÎœÎ±ÏÏ„Î¯Î¿Ï…_Î‘Ï€ÏÎ¹Î»Î¯Î¿Ï…_ÎœÎ±ÎÎ¿Ï…_Î™Î¿Ï…Î½Î¯Î¿Ï…_Î™Î¿Ï…Î»Î¯Î¿Ï…_Î‘Ï…Î³Î¿ÏÏƒÏ„Î¿Ï…_Î£ÎµÏ€Ï„ÎµÎ¼Î²ÏÎ¯Î¿Ï…_ÎŸÎºÏ„Ï‰Î²ÏÎ¯Î¿Ï…_ÎÎ¿ÎµÎ¼Î²ÏÎ¯Î¿Ï…_Î”ÎµÎºÎµÎ¼Î²ÏÎ¯Î¿Ï…".split("_"),
                months: function(e, t) {
                    return /D/.test(t.substring(0, t.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()]
                },
                monthsShort: "Î™Î±Î½_Î¦ÎµÎ²_ÎœÎ±Ï_Î‘Ï€Ï_ÎœÎ±ÏŠ_Î™Î¿Ï…Î½_Î™Î¿Ï…Î»_Î‘Ï…Î³_Î£ÎµÏ€_ÎŸÎºÏ„_ÎÎ¿Îµ_Î”ÎµÎº".split("_"),
                weekdays: "ÎšÏ…ÏÎ¹Î±ÎºÎ®_Î”ÎµÏ…Ï„Î­ÏÎ±_Î¤ÏÎ¯Ï„Î·_Î¤ÎµÏ„Î¬ÏÏ„Î·_Î Î­Î¼Ï€Ï„Î·_Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®_Î£Î¬Î²Î²Î±Ï„Î¿".split("_"),
                weekdaysShort: "ÎšÏ…Ï_Î”ÎµÏ…_Î¤ÏÎ¹_Î¤ÎµÏ„_Î ÎµÎ¼_Î Î±Ï_Î£Î±Î²".split("_"),
                weekdaysMin: "ÎšÏ…_Î”Îµ_Î¤Ï_Î¤Îµ_Î Îµ_Î Î±_Î£Î±".split("_"),
                meridiem: function(e, t, a) {
                    return e > 11 ? a ? "Î¼Î¼" : "ÎœÎœ" : a ? "Ï€Î¼" : "Î Îœ"
                },
                isPM: function(e) {
                    return "Î¼" === (e + "").toLowerCase()[0]
                },
                meridiemParse: /[Î Îœ]\.?Îœ?\.?/i,
                longDateFormat: {
                    LT: "h:mm A",
                    LTS: "h:mm:ss A",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendarEl: {
                    sameDay: "[Î£Î®Î¼ÎµÏÎ± {}] LT",
                    nextDay: "[Î‘ÏÏÎ¹Î¿ {}] LT",
                    nextWeek: "dddd [{}] LT",
                    lastDay: "[Î§Î¸ÎµÏ‚ {}] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 6:
                                return "[Ï„Î¿ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î¿] dddd [{}] LT";
                            default:
                                return "[Ï„Î·Î½ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î·] dddd [{}] LT"
                        }
                    },
                    sameElse: "L"
                },
                calendar: function(e, t) {
                    var a = this._calendarEl[e],
                        n = t && t.hours();
                    return "function" == typeof a && (a = a.apply(t)), a.replace("{}", n % 12 === 1 ? "ÏƒÏ„Î·" : "ÏƒÏ„Î¹Ï‚")
                },
                relativeTime: {
                    future: "ÏƒÎµ %s",
                    past: "%s Ï€ÏÎ¹Î½",
                    s: "Î»Î¯Î³Î± Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î±",
                    m: "Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ",
                    mm: "%d Î»ÎµÏ€Ï„Î¬",
                    h: "Î¼Î¯Î± ÏŽÏÎ±",
                    hh: "%d ÏŽÏÎµÏ‚",
                    d: "Î¼Î¯Î± Î¼Î­ÏÎ±",
                    dd: "%d Î¼Î­ÏÎµÏ‚",
                    M: "Î­Î½Î±Ï‚ Î¼Î®Î½Î±Ï‚",
                    MM: "%d Î¼Î®Î½ÎµÏ‚",
                    y: "Î­Î½Î±Ï‚ Ï‡ÏÏŒÎ½Î¿Ï‚",
                    yy: "%d Ï‡ÏÏŒÎ½Î¹Î±"
                },
                ordinalParse: /\d{1,2}Î·/,
                ordinal: "%dÎ·",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("en-au", {
                months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "h:mm A",
                    LTS: "h:mm:ss A",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                ordinalParse: /\d{1,2}(st|nd|rd|th)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                    return e + a
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("en-ca", {
                months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "h:mm A",
                    LTS: "h:mm:ss A",
                    L: "YYYY-MM-DD",
                    LL: "D MMMM, YYYY",
                    LLL: "D MMMM, YYYY LT",
                    LLLL: "dddd, D MMMM, YYYY LT"
                },
                calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                ordinalParse: /\d{1,2}(st|nd|rd|th)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                    return e + a
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("en-gb", {
                months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                },
                ordinalParse: /\d{1,2}(st|nd|rd|th)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                    return e + a
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("eo", {
                months: "januaro_februaro_marto_aprilo_majo_junio_julio_aÅ­gusto_septembro_oktobro_novembro_decembro".split("_"),
                monthsShort: "jan_feb_mar_apr_maj_jun_jul_aÅ­g_sep_okt_nov_dec".split("_"),
                weekdays: "DimanÄ‰o_Lundo_Mardo_Merkredo_Ä´aÅ­do_Vendredo_Sabato".split("_"),
                weekdaysShort: "Dim_Lun_Mard_Merk_Ä´aÅ­_Ven_Sab".split("_"),
                weekdaysMin: "Di_Lu_Ma_Me_Ä´a_Ve_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "YYYY-MM-DD",
                    LL: "D[-an de] MMMM, YYYY",
                    LLL: "D[-an de] MMMM, YYYY LT",
                    LLLL: "dddd, [la] D[-an de] MMMM, YYYY LT"
                },
                meridiemParse: /[ap]\.t\.m/i,
                isPM: function(e) {
                    return "p" === e.charAt(0).toLowerCase()
                },
                meridiem: function(e, t, a) {
                    return e > 11 ? a ? "p.t.m." : "P.T.M." : a ? "a.t.m." : "A.T.M."
                },
                calendar: {
                    sameDay: "[HodiaÅ­ je] LT",
                    nextDay: "[MorgaÅ­ je] LT",
                    nextWeek: "dddd [je] LT",
                    lastDay: "[HieraÅ­ je] LT",
                    lastWeek: "[pasinta] dddd [je] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "je %s",
                    past: "antaÅ­ %s",
                    s: "sekundoj",
                    m: "minuto",
                    mm: "%d minutoj",
                    h: "horo",
                    hh: "%d horoj",
                    d: "tago",
                    dd: "%d tagoj",
                    M: "monato",
                    MM: "%d monatoj",
                    y: "jaro",
                    yy: "%d jaroj"
                },
                ordinalParse: /\d{1,2}a/,
                ordinal: "%da",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
                a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");
            return e.defineLocale("es", {
                months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                monthsShort: function(e, n) {
                    return /-MMM-/.test(n) ? a[e.month()] : t[e.month()]
                },
                weekdays: "domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado".split("_"),
                weekdaysShort: "dom._lun._mar._miÃ©._jue._vie._sÃ¡b.".split("_"),
                weekdaysMin: "Do_Lu_Ma_Mi_Ju_Vi_SÃ¡".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D [de] MMMM [de] YYYY",
                    LLL: "D [de] MMMM [de] YYYY LT",
                    LLLL: "dddd, D [de] MMMM [de] YYYY LT"
                },
                calendar: {
                    sameDay: function() {
                        return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                    },
                    nextDay: function() {
                        return "[maÃ±ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                    },
                    nextWeek: function() {
                        return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                    },
                    lastDay: function() {
                        return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                    },
                    lastWeek: function() {
                        return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "en %s",
                    past: "hace %s",
                    s: "unos segundos",
                    m: "un minuto",
                    mm: "%d minutos",
                    h: "una hora",
                    hh: "%d horas",
                    d: "un dÃ­a",
                    dd: "%d dÃ­as",
                    M: "un mes",
                    MM: "%d meses",
                    y: "un aÃ±o",
                    yy: "%d aÃ±os"
                },
                ordinalParse: /\d{1,2}Âº/,
                ordinal: "%dÂº",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a, n) {
                var r = {
                    s: ["mÃµne sekundi", "mÃµni sekund", "paar sekundit"],
                    m: ["Ã¼he minuti", "Ã¼ks minut"],
                    mm: [e + " minuti", e + " minutit"],
                    h: ["Ã¼he tunni", "tund aega", "Ã¼ks tund"],
                    hh: [e + " tunni", e + " tundi"],
                    d: ["Ã¼he pÃ¤eva", "Ã¼ks pÃ¤ev"],
                    M: ["kuu aja", "kuu aega", "Ã¼ks kuu"],
                    MM: [e + " kuu", e + " kuud"],
                    y: ["Ã¼he aasta", "aasta", "Ã¼ks aasta"],
                    yy: [e + " aasta", e + " aastat"]
                };
                return t ? r[a][2] ? r[a][2] : r[a][1] : n ? r[a][0] : r[a][1]
            }
            return e.defineLocale("et", {
                months: "jaanuar_veebruar_mÃ¤rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
                monthsShort: "jaan_veebr_mÃ¤rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
                weekdays: "pÃ¼hapÃ¤ev_esmaspÃ¤ev_teisipÃ¤ev_kolmapÃ¤ev_neljapÃ¤ev_reede_laupÃ¤ev".split("_"),
                weekdaysShort: "P_E_T_K_N_R_L".split("_"),
                weekdaysMin: "P_E_T_K_N_R_L".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[TÃ¤na,] LT",
                    nextDay: "[Homme,] LT",
                    nextWeek: "[JÃ¤rgmine] dddd LT",
                    lastDay: "[Eile,] LT",
                    lastWeek: "[Eelmine] dddd LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s pÃ¤rast",
                    past: "%s tagasi",
                    s: t,
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: t,
                    dd: "%d pÃ¤eva",
                    M: t,
                    MM: t,
                    y: t,
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("eu", {
                months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
                monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
                weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
                weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
                weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "YYYY-MM-DD",
                    LL: "YYYY[ko] MMMM[ren] D[a]",
                    LLL: "YYYY[ko] MMMM[ren] D[a] LT",
                    LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] LT",
                    l: "YYYY-M-D",
                    ll: "YYYY[ko] MMM D[a]",
                    lll: "YYYY[ko] MMM D[a] LT",
                    llll: "ddd, YYYY[ko] MMM D[a] LT"
                },
                calendar: {
                    sameDay: "[gaur] LT[etan]",
                    nextDay: "[bihar] LT[etan]",
                    nextWeek: "dddd LT[etan]",
                    lastDay: "[atzo] LT[etan]",
                    lastWeek: "[aurreko] dddd LT[etan]",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s barru",
                    past: "duela %s",
                    s: "segundo batzuk",
                    m: "minutu bat",
                    mm: "%d minutu",
                    h: "ordu bat",
                    hh: "%d ordu",
                    d: "egun bat",
                    dd: "%d egun",
                    M: "hilabete bat",
                    MM: "%d hilabete",
                    y: "urte bat",
                    yy: "%d urte"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "Û±",
                    2: "Û²",
                    3: "Û³",
                    4: "Û´",
                    5: "Ûµ",
                    6: "Û¶",
                    7: "Û·",
                    8: "Û¸",
                    9: "Û¹",
                    0: "Û°"
                },
                a = {
                    "Û±": "1",
                    "Û²": "2",
                    "Û³": "3",
                    "Û´": "4",
                    "Ûµ": "5",
                    "Û¶": "6",
                    "Û·": "7",
                    "Û¸": "8",
                    "Û¹": "9",
                    "Û°": "0"
                };
            return e.defineLocale("fa", {
                months: "Ú˜Ø§Ù†ÙˆÛŒÙ‡_ÙÙˆØ±ÛŒÙ‡_Ù…Ø§Ø±Ø³_Ø¢ÙˆØ±ÛŒÙ„_Ù…Ù‡_Ú˜ÙˆØ¦Ù†_Ú˜ÙˆØ¦ÛŒÙ‡_Ø§ÙˆØª_Ø³Ù¾ØªØ§Ù…Ø¨Ø±_Ø§Ú©ØªØ¨Ø±_Ù†ÙˆØ§Ù…Ø¨Ø±_Ø¯Ø³Ø§Ù…Ø¨Ø±".split("_"),
                monthsShort: "Ú˜Ø§Ù†ÙˆÛŒÙ‡_ÙÙˆØ±ÛŒÙ‡_Ù…Ø§Ø±Ø³_Ø¢ÙˆØ±ÛŒÙ„_Ù…Ù‡_Ú˜ÙˆØ¦Ù†_Ú˜ÙˆØ¦ÛŒÙ‡_Ø§ÙˆØª_Ø³Ù¾ØªØ§Ù…Ø¨Ø±_Ø§Ú©ØªØ¨Ø±_Ù†ÙˆØ§Ù…Ø¨Ø±_Ø¯Ø³Ø§Ù…Ø¨Ø±".split("_"),
                weekdays: "ÛŒÚ©‌Ø´Ù†Ø¨Ù‡_Ø¯ÙˆØ´Ù†Ø¨Ù‡_Ø³Ù‡‌Ø´Ù†Ø¨Ù‡_Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡_Ù¾Ù†Ø¬‌Ø´Ù†Ø¨Ù‡_Ø¬Ù…Ø¹Ù‡_Ø´Ù†Ø¨Ù‡".split("_"),
                weekdaysShort: "ÛŒÚ©‌Ø´Ù†Ø¨Ù‡_Ø¯ÙˆØ´Ù†Ø¨Ù‡_Ø³Ù‡‌Ø´Ù†Ø¨Ù‡_Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡_Ù¾Ù†Ø¬‌Ø´Ù†Ø¨Ù‡_Ø¬Ù…Ø¹Ù‡_Ø´Ù†Ø¨Ù‡".split("_"),
                weekdaysMin: "ÛŒ_Ø¯_Ø³_Ú†_Ù¾_Ø¬_Ø´".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                meridiemParse: /Ù‚Ø¨Ù„ Ø§Ø² Ø¸Ù‡Ø±|Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±/,
                isPM: function(e) {
                    return /Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±/.test(e)
                },
                meridiem: function(e) {
                    return 12 > e ? "Ù‚Ø¨Ù„ Ø§Ø² Ø¸Ù‡Ø±" : "Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±"
                },
                calendar: {
                    sameDay: "[Ø§Ù…Ø±ÙˆØ² Ø³Ø§Ø¹Øª] LT",
                    nextDay: "[ÙØ±Ø¯Ø§ Ø³Ø§Ø¹Øª] LT",
                    nextWeek: "dddd [Ø³Ø§Ø¹Øª] LT",
                    lastDay: "[Ø¯ÛŒØ±ÙˆØ² Ø³Ø§Ø¹Øª] LT",
                    lastWeek: "dddd [Ù¾ÛŒØ´] [Ø³Ø§Ø¹Øª] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ø¯Ø± %s",
                    past: "%s Ù¾ÛŒØ´",
                    s: "Ú†Ù†Ø¯ÛŒÙ† Ø«Ø§Ù†ÛŒÙ‡",
                    m: "ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡",
                    mm: "%d Ø¯Ù‚ÛŒÙ‚Ù‡",
                    h: "ÛŒÚ© Ø³Ø§Ø¹Øª",
                    hh: "%d Ø³Ø§Ø¹Øª",
                    d: "ÛŒÚ© Ø±ÙˆØ²",
                    dd: "%d Ø±ÙˆØ²",
                    M: "ÛŒÚ© Ù…Ø§Ù‡",
                    MM: "%d Ù…Ø§Ù‡",
                    y: "ÛŒÚ© Ø³Ø§Ù„",
                    yy: "%d Ø³Ø§Ù„"
                },
                preparse: function(e) {
                    return e.replace(/[Û°-Û¹]/g, function(e) {
                        return a[e]
                    }).replace(/ØŒ/g, ",")
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    }).replace(/,/g, "ØŒ")
                },
                ordinalParse: /\d{1,2}Ù…/,
                ordinal: "%dÙ…",
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, n, r) {
                var s = "";
                switch (n) {
                    case "s":
                        return r ? "muutaman sekunnin" : "muutama sekunti";
                    case "m":
                        return r ? "minuutin" : "minuutti";
                    case "mm":
                        s = r ? "minuutin" : "minuuttia";
                        break;
                    case "h":
                        return r ? "tunnin" : "tunti";
                    case "hh":
                        s = r ? "tunnin" : "tuntia";
                        break;
                    case "d":
                        return r ? "pÃ¤ivÃ¤n" : "pÃ¤ivÃ¤";
                    case "dd":
                        s = r ? "pÃ¤ivÃ¤n" : "pÃ¤ivÃ¤Ã¤";
                        break;
                    case "M":
                        return r ? "kuukauden" : "kuukausi";
                    case "MM":
                        s = r ? "kuukauden" : "kuukautta";
                        break;
                    case "y":
                        return r ? "vuoden" : "vuosi";
                    case "yy":
                        s = r ? "vuoden" : "vuotta"
                }
                return s = a(e, r) + " " + s
            }

            function a(e, t) {
                return 10 > e ? t ? r[e] : n[e] : e
            }
            var n = "nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n".split(" "),
                r = ["nolla", "yhden", "kahden", "kolmen", "neljÃ¤n", "viiden", "kuuden", n[7], n[8], n[9]];
            return e.defineLocale("fi", {
                months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
                monthsShort: "tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu".split("_"),
                weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
                weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
                weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
                longDateFormat: {
                    LT: "HH.mm",
                    LTS: "HH.mm.ss",
                    L: "DD.MM.YYYY",
                    LL: "Do MMMM[ta] YYYY",
                    LLL: "Do MMMM[ta] YYYY, [klo] LT",
                    LLLL: "dddd, Do MMMM[ta] YYYY, [klo] LT",
                    l: "D.M.YYYY",
                    ll: "Do MMM YYYY",
                    lll: "Do MMM YYYY, [klo] LT",
                    llll: "ddd, Do MMM YYYY, [klo] LT"
                },
                calendar: {
                    sameDay: "[tÃ¤nÃ¤Ã¤n] [klo] LT",
                    nextDay: "[huomenna] [klo] LT",
                    nextWeek: "dddd [klo] LT",
                    lastDay: "[eilen] [klo] LT",
                    lastWeek: "[viime] dddd[na] [klo] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s pÃ¤Ã¤stÃ¤",
                    past: "%s sitten",
                    s: t,
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: t,
                    dd: t,
                    M: t,
                    MM: t,
                    y: t,
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("fo", {
                months: "januar_februar_mars_aprÃ­l_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
                weekdays: "sunnudagur_mÃ¡nadagur_tÃ½sdagur_mikudagur_hÃ³sdagur_frÃ­ggjadagur_leygardagur".split("_"),
                weekdaysShort: "sun_mÃ¡n_tÃ½s_mik_hÃ³s_frÃ­_ley".split("_"),
                weekdaysMin: "su_mÃ¡_tÃ½_mi_hÃ³_fr_le".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D. MMMM, YYYY LT"
                },
                calendar: {
                    sameDay: "[Ã dag kl.] LT",
                    nextDay: "[Ã morgin kl.] LT",
                    nextWeek: "dddd [kl.] LT",
                    lastDay: "[Ã gjÃ¡r kl.] LT",
                    lastWeek: "[sÃ­Ã°stu] dddd [kl] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "um %s",
                    past: "%s sÃ­Ã°ani",
                    s: "fÃ¡ sekund",
                    m: "ein minutt",
                    mm: "%d minuttir",
                    h: "ein tÃ­mi",
                    hh: "%d tÃ­mar",
                    d: "ein dagur",
                    dd: "%d dagar",
                    M: "ein mÃ¡naÃ°i",
                    MM: "%d mÃ¡naÃ°ir",
                    y: "eitt Ã¡r",
                    yy: "%d Ã¡r"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("fr-ca", {
                months: "janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre".split("_"),
                monthsShort: "janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.".split("_"),
                weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "YYYY-MM-DD",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Aujourd'hui Ã ] LT",
                    nextDay: "[Demain Ã ] LT",
                    nextWeek: "dddd [Ã ] LT",
                    lastDay: "[Hier Ã ] LT",
                    lastWeek: "dddd [dernier Ã ] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "dans %s",
                    past: "il y a %s",
                    s: "quelques secondes",
                    m: "une minute",
                    mm: "%d minutes",
                    h: "une heure",
                    hh: "%d heures",
                    d: "un jour",
                    dd: "%d jours",
                    M: "un mois",
                    MM: "%d mois",
                    y: "un an",
                    yy: "%d ans"
                },
                ordinalParse: /\d{1,2}(er|)/,
                ordinal: function(e) {
                    return e + (1 === e ? "er" : "")
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("fr", {
                months: "janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre".split("_"),
                monthsShort: "janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.".split("_"),
                weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Aujourd'hui Ã ] LT",
                    nextDay: "[Demain Ã ] LT",
                    nextWeek: "dddd [Ã ] LT",
                    lastDay: "[Hier Ã ] LT",
                    lastWeek: "dddd [dernier Ã ] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "dans %s",
                    past: "il y a %s",
                    s: "quelques secondes",
                    m: "une minute",
                    mm: "%d minutes",
                    h: "une heure",
                    hh: "%d heures",
                    d: "un jour",
                    dd: "%d jours",
                    M: "un mois",
                    MM: "%d mois",
                    y: "un an",
                    yy: "%d ans"
                },
                ordinalParse: /\d{1,2}(er|)/,
                ordinal: function(e) {
                    return e + (1 === e ? "er" : "")
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"),
                a = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
            return e.defineLocale("fy", {
                months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
                monthsShort: function(e, n) {
                    return /-MMM-/.test(n) ? a[e.month()] : t[e.month()]
                },
                weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
                weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
                weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD-MM-YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[hjoed om] LT",
                    nextDay: "[moarn om] LT",
                    nextWeek: "dddd [om] LT",
                    lastDay: "[juster om] LT",
                    lastWeek: "[Ã´frÃ»ne] dddd [om] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "oer %s",
                    past: "%s lyn",
                    s: "in pear sekonden",
                    m: "ien minÃºt",
                    mm: "%d minuten",
                    h: "ien oere",
                    hh: "%d oeren",
                    d: "ien dei",
                    dd: "%d dagen",
                    M: "ien moanne",
                    MM: "%d moannen",
                    y: "ien jier",
                    yy: "%d jierren"
                },
                ordinalParse: /\d{1,2}(ste|de)/,
                ordinal: function(e) {
                    return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("gl", {
                months: "Xaneiro_Febreiro_Marzo_Abril_Maio_XuÃ±o_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split("_"),
                monthsShort: "Xan._Feb._Mar._Abr._Mai._XuÃ±._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
                weekdays: "Domingo_Luns_Martes_MÃ©rcores_Xoves_Venres_SÃ¡bado".split("_"),
                weekdaysShort: "Dom._Lun._Mar._MÃ©r._Xov._Ven._SÃ¡b.".split("_"),
                weekdaysMin: "Do_Lu_Ma_MÃ©_Xo_Ve_SÃ¡".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: function() {
                        return "[hoxe " + (1 !== this.hours() ? "Ã¡s" : "Ã¡") + "] LT"
                    },
                    nextDay: function() {
                        return "[maÃ±Ã¡ " + (1 !== this.hours() ? "Ã¡s" : "Ã¡") + "] LT"
                    },
                    nextWeek: function() {
                        return "dddd [" + (1 !== this.hours() ? "Ã¡s" : "a") + "] LT"
                    },
                    lastDay: function() {
                        return "[onte " + (1 !== this.hours() ? "Ã¡" : "a") + "] LT"
                    },
                    lastWeek: function() {
                        return "[o] dddd [pasado " + (1 !== this.hours() ? "Ã¡s" : "a") + "] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: function(e) {
                        return "uns segundos" === e ? "nuns segundos" : "en " + e
                    },
                    past: "hai %s",
                    s: "uns segundos",
                    m: "un minuto",
                    mm: "%d minutos",
                    h: "unha hora",
                    hh: "%d horas",
                    d: "un dÃ­a",
                    dd: "%d dÃ­as",
                    M: "un mes",
                    MM: "%d meses",
                    y: "un ano",
                    yy: "%d anos"
                },
                ordinalParse: /\d{1,2}Âº/,
                ordinal: "%dÂº",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("he", {
                months: "×™× ×•××¨_×¤×‘×¨×•××¨_×ž×¨×¥_××¤×¨×™×œ_×ž××™_×™×•× ×™_×™×•×œ×™_××•×’×•×¡×˜_×¡×¤×˜×ž×‘×¨_××•×§×˜×•×‘×¨_× ×•×‘×ž×‘×¨_×“×¦×ž×‘×¨".split("_"),
                monthsShort: "×™× ×•×³_×¤×‘×¨×³_×ž×¨×¥_××¤×¨×³_×ž××™_×™×•× ×™_×™×•×œ×™_××•×’×³_×¡×¤×˜×³_××•×§×³_× ×•×‘×³_×“×¦×ž×³".split("_"),
                weekdays: "×¨××©×•×Ÿ_×©× ×™_×©×œ×™×©×™_×¨×‘×™×¢×™_×—×ž×™×©×™_×©×™×©×™_×©×‘×ª".split("_"),
                weekdaysShort: "××³_×‘×³_×’×³_×“×³_×”×³_×•×³_×©×³".split("_"),
                weekdaysMin: "×_×‘_×’_×“_×”_×•_×©".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D [×‘]MMMM YYYY",
                    LLL: "D [×‘]MMMM YYYY LT",
                    LLLL: "dddd, D [×‘]MMMM YYYY LT",
                    l: "D/M/YYYY",
                    ll: "D MMM YYYY",
                    lll: "D MMM YYYY LT",
                    llll: "ddd, D MMM YYYY LT"
                },
                calendar: {
                    sameDay: "[×”×™×•× ×‘Ö¾]LT",
                    nextDay: "[×ž×—×¨ ×‘Ö¾]LT",
                    nextWeek: "dddd [×‘×©×¢×”] LT",
                    lastDay: "[××ª×ž×•×œ ×‘Ö¾]LT",
                    lastWeek: "[×‘×™×•×] dddd [×”××—×¨×•×Ÿ ×‘×©×¢×”] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "×‘×¢×•×“ %s",
                    past: "×œ×¤× ×™ %s",
                    s: "×ž×¡×¤×¨ ×©× ×™×•×ª",
                    m: "×“×§×”",
                    mm: "%d ×“×§×•×ª",
                    h: "×©×¢×”",
                    hh: function(e) {
                        return 2 === e ? "×©×¢×ª×™×™×" : e + " ×©×¢×•×ª"
                    },
                    d: "×™×•×",
                    dd: function(e) {
                        return 2 === e ? "×™×•×ž×™×™×" : e + " ×™×ž×™×"
                    },
                    M: "×—×•×“×©",
                    MM: function(e) {
                        return 2 === e ? "×—×•×“×©×™×™×" : e + " ×—×•×“×©×™×"
                    },
                    y: "×©× ×”",
                    yy: function(e) {
                        return 2 === e ? "×©× ×ª×™×™×" : e % 10 === 0 && 10 !== e ? e + " ×©× ×”" : e + " ×©× ×™×"
                    }
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "à¥§",
                    2: "à¥¨",
                    3: "à¥©",
                    4: "à¥ª",
                    5: "à¥«",
                    6: "à¥¬",
                    7: "à¥­",
                    8: "à¥®",
                    9: "à¥¯",
                    0: "à¥¦"
                },
                a = {
                    "à¥§": "1",
                    "à¥¨": "2",
                    "à¥©": "3",
                    "à¥ª": "4",
                    "à¥«": "5",
                    "à¥¬": "6",
                    "à¥­": "7",
                    "à¥®": "8",
                    "à¥¯": "9",
                    "à¥¦": "0"
                };
            return e.defineLocale("hi", {
                months: "à¤œà¤¨à¤µà¤°à¥€_à¤«à¤¼à¤°à¤µà¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¥ˆà¤²_à¤®à¤ˆ_à¤œà¥‚à¤¨_à¤œà¥à¤²à¤¾à¤ˆ_à¤…à¤—à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°".split("_"),
                monthsShort: "à¤œà¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¥ˆ._à¤®à¤ˆ_à¤œà¥‚à¤¨_à¤œà¥à¤²._à¤…à¤—._à¤¸à¤¿à¤¤._à¤…à¤•à¥à¤Ÿà¥‚._à¤¨à¤µ._à¤¦à¤¿à¤¸.".split("_"),
                weekdays: "à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥‹à¤®à¤µà¤¾à¤°_à¤®à¤‚à¤—à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤—à¥à¤°à¥‚à¤µà¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°".split("_"),
                weekdaysShort: "à¤°à¤µà¤¿_à¤¸à¥‹à¤®_à¤®à¤‚à¤—à¤²_à¤¬à¥à¤§_à¤—à¥à¤°à¥‚_à¤¶à¥à¤•à¥à¤°_à¤¶à¤¨à¤¿".split("_"),
                weekdaysMin: "à¤°_à¤¸à¥‹_à¤®à¤‚_à¤¬à¥_à¤—à¥_à¤¶à¥_à¤¶".split("_"),
                longDateFormat: {
                    LT: "A h:mm à¤¬à¤œà¥‡",
                    LTS: "A h:mm:ss à¤¬à¤œà¥‡",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à¤†à¤œ] LT",
                    nextDay: "[à¤•à¤²] LT",
                    nextWeek: "dddd, LT",
                    lastDay: "[à¤•à¤²] LT",
                    lastWeek: "[à¤ªà¤¿à¤›à¤²à¥‡] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à¤®à¥‡à¤‚",
                    past: "%s à¤ªà¤¹à¤²à¥‡",
                    s: "à¤•à¥à¤› à¤¹à¥€ à¤•à¥à¤·à¤£",
                    m: "à¤à¤• à¤®à¤¿à¤¨à¤Ÿ",
                    mm: "%d à¤®à¤¿à¤¨à¤Ÿ",
                    h: "à¤à¤• à¤˜à¤‚à¤Ÿà¤¾",
                    hh: "%d à¤˜à¤‚à¤Ÿà¥‡",
                    d: "à¤à¤• à¤¦à¤¿à¤¨",
                    dd: "%d à¤¦à¤¿à¤¨",
                    M: "à¤à¤• à¤®à¤¹à¥€à¤¨à¥‡",
                    MM: "%d à¤®à¤¹à¥€à¤¨à¥‡",
                    y: "à¤à¤• à¤µà¤°à¥à¤·",
                    yy: "%d à¤µà¤°à¥à¤·"
                },
                preparse: function(e) {
                    return e.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥‹à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "à¤°à¤¾à¤¤" === t ? 4 > e ? e : e + 12 : "à¤¸à¥à¤¬à¤¹" === t ? e : "à¤¦à¥‹à¤ªà¤¹à¤°" === t ? e >= 10 ? e : e + 12 : "à¤¶à¤¾à¤®" === t ? e + 12 : void 0
                },
                meridiem: function(e) {
                    return 4 > e ? "à¤°à¤¾à¤¤" : 10 > e ? "à¤¸à¥à¤¬à¤¹" : 17 > e ? "à¤¦à¥‹à¤ªà¤¹à¤°" : 20 > e ? "à¤¶à¤¾à¤®" : "à¤°à¤¾à¤¤"
                },
                week: {
                    dow: 0,
                    doy: 6
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = e + " ";
                switch (a) {
                    case "m":
                        return t ? "jedna minuta" : "jedne minute";
                    case "mm":
                        return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                    case "h":
                        return t ? "jedan sat" : "jednog sata";
                    case "hh":
                        return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                    case "dd":
                        return n += 1 === e ? "dan" : "dana";
                    case "MM":
                        return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                    case "yy":
                        return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                }
            }
            return e.defineLocale("hr", {
                months: "sjeÄanj_veljaÄa_oÅ¾ujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_"),
                monthsShort: "sje._vel._oÅ¾u._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
                weekdays: "nedjelja_ponedjeljak_utorak_srijeda_Äetvrtak_petak_subota".split("_"),
                weekdaysShort: "ned._pon._uto._sri._Äet._pet._sub.".split("_"),
                weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD. MM. YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[danas u] LT",
                    nextDay: "[sutra u] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[u] [nedjelju] [u] LT";
                            case 3:
                                return "[u] [srijedu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                        }
                    },
                    lastDay: "[juÄer u] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                                return "[proÅ¡lu] dddd [u] LT";
                            case 6:
                                return "[proÅ¡le] [subote] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[proÅ¡li] dddd [u] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "prije %s",
                    s: "par sekundi",
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: "dan",
                    dd: t,
                    M: "mjesec",
                    MM: t,
                    y: "godinu",
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a, n) {
                var r = e;
                switch (a) {
                    case "s":
                        return n || t ? "nÃ©hÃ¡ny mÃ¡sodperc" : "nÃ©hÃ¡ny mÃ¡sodperce";
                    case "m":
                        return "egy" + (n || t ? " perc" : " perce");
                    case "mm":
                        return r + (n || t ? " perc" : " perce");
                    case "h":
                        return "egy" + (n || t ? " Ã³ra" : " Ã³rÃ¡ja");
                    case "hh":
                        return r + (n || t ? " Ã³ra" : " Ã³rÃ¡ja");
                    case "d":
                        return "egy" + (n || t ? " nap" : " napja");
                    case "dd":
                        return r + (n || t ? " nap" : " napja");
                    case "M":
                        return "egy" + (n || t ? " hÃ³nap" : " hÃ³napja");
                    case "MM":
                        return r + (n || t ? " hÃ³nap" : " hÃ³napja");
                    case "y":
                        return "egy" + (n || t ? " Ã©v" : " Ã©ve");
                    case "yy":
                        return r + (n || t ? " Ã©v" : " Ã©ve")
                }
                return ""
            }

            function a(e) {
                return (e ? "" : "[mÃºlt] ") + "[" + n[this.day()] + "] LT[-kor]"
            }
            var n = "vasÃ¡rnap hÃ©tfÅ‘n kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton".split(" ");
            return e.defineLocale("hu", {
                months: "januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december".split("_"),
                monthsShort: "jan_feb_mÃ¡rc_Ã¡pr_mÃ¡j_jÃºn_jÃºl_aug_szept_okt_nov_dec".split("_"),
                weekdays: "vasÃ¡rnap_hÃ©tfÅ‘_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat".split("_"),
                weekdaysShort: "vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo".split("_"),
                weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "YYYY.MM.DD.",
                    LL: "YYYY. MMMM D.",
                    LLL: "YYYY. MMMM D., LT",
                    LLLL: "YYYY. MMMM D., dddd LT"
                },
                meridiemParse: /de|du/i,
                isPM: function(e) {
                    return "u" === e.charAt(1).toLowerCase()
                },
                meridiem: function(e, t, a) {
                    return 12 > e ? a === !0 ? "de" : "DE" : a === !0 ? "du" : "DU"
                },
                calendar: {
                    sameDay: "[ma] LT[-kor]",
                    nextDay: "[holnap] LT[-kor]",
                    nextWeek: function() {
                        return a.call(this, !0)
                    },
                    lastDay: "[tegnap] LT[-kor]",
                    lastWeek: function() {
                        return a.call(this, !1)
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s mÃºlva",
                    past: "%s",
                    s: t,
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: t,
                    dd: t,
                    M: t,
                    MM: t,
                    y: t,
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t) {
                var a = {
                        nominative: "Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€_ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€_Õ´Õ¡Ö€Õ¿_Õ¡ÕºÖ€Õ«Õ¬_Õ´Õ¡ÕµÕ«Õ½_Õ°Õ¸Ö‚Õ¶Õ«Õ½_Õ°Õ¸Ö‚Õ¬Õ«Õ½_Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½_Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€_Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€_Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€_Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€".split("_"),
                        accusative: "Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€Õ«_ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€Õ«_Õ´Õ¡Ö€Õ¿Õ«_Õ¡ÕºÖ€Õ«Õ¬Õ«_Õ´Õ¡ÕµÕ«Õ½Õ«_Õ°Õ¸Ö‚Õ¶Õ«Õ½Õ«_Õ°Õ¸Ö‚Õ¬Õ«Õ½Õ«_Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½Õ«_Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«_Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«_Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€Õ«_Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«".split("_")
                    },
                    n = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function a(e) {
                var t = "Õ°Õ¶Õ¾_ÖƒÕ¿Ö€_Õ´Ö€Õ¿_Õ¡ÕºÖ€_Õ´ÕµÕ½_Õ°Õ¶Õ½_Õ°Õ¬Õ½_Ö…Õ£Õ½_Õ½ÕºÕ¿_Õ°Õ¯Õ¿_Õ¶Õ´Õ¢_Õ¤Õ¯Õ¿".split("_");
                return t[e.month()]
            }

            function n(e) {
                var t = "Õ¯Õ«Ö€Õ¡Õ¯Õ«_Õ¥Ö€Õ¯Õ¸Ö‚Õ·Õ¡Õ¢Õ©Õ«_Õ¥Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«_Õ¹Õ¸Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«_Õ°Õ«Õ¶Õ£Õ·Õ¡Õ¢Õ©Õ«_Õ¸Ö‚Ö€Õ¢Õ¡Õ©_Õ·Õ¡Õ¢Õ¡Õ©".split("_");
                return t[e.day()]
            }
            return e.defineLocale("hy-am", {
                months: t,
                monthsShort: a,
                weekdays: n,
                weekdaysShort: "Õ¯Ö€Õ¯_Õ¥Ö€Õ¯_Õ¥Ö€Ö„_Õ¹Ö€Ö„_Õ°Õ¶Õ£_Õ¸Ö‚Ö€Õ¢_Õ·Õ¢Õ©".split("_"),
                weekdaysMin: "Õ¯Ö€Õ¯_Õ¥Ö€Õ¯_Õ¥Ö€Ö„_Õ¹Ö€Ö„_Õ°Õ¶Õ£_Õ¸Ö‚Ö€Õ¢_Õ·Õ¢Õ©".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY Õ©.",
                    LLL: "D MMMM YYYY Õ©., LT",
                    LLLL: "dddd, D MMMM YYYY Õ©., LT"
                },
                calendar: {
                    sameDay: "[Õ¡ÕµÕ½Ö…Ö€] LT",
                    nextDay: "[Õ¾Õ¡Õ²Õ¨] LT",
                    lastDay: "[Õ¥Ö€Õ¥Õ¯] LT",
                    nextWeek: function() {
                        return "dddd [Ö…Ö€Õ¨ ÕªÕ¡Õ´Õ¨] LT"
                    },
                    lastWeek: function() {
                        return "[Õ¡Õ¶ÖÕ¡Õ®] dddd [Ö…Ö€Õ¨ ÕªÕ¡Õ´Õ¨] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s Õ°Õ¥Õ¿Õ¸",
                    past: "%s Õ¡Õ¼Õ¡Õ»",
                    s: "Õ´Õ« Ö„Õ¡Õ¶Õ« Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
                    m: "Ö€Õ¸ÕºÕ¥",
                    mm: "%d Ö€Õ¸ÕºÕ¥",
                    h: "ÕªÕ¡Õ´",
                    hh: "%d ÕªÕ¡Õ´",
                    d: "Ö…Ö€",
                    dd: "%d Ö…Ö€",
                    M: "Õ¡Õ´Õ«Õ½",
                    MM: "%d Õ¡Õ´Õ«Õ½",
                    y: "Õ¿Õ¡Ö€Õ«",
                    yy: "%d Õ¿Õ¡Ö€Õ«"
                },
                meridiemParse: /Õ£Õ«Õ·Õ¥Ö€Õ¾Õ¡|Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¾Õ¡|ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡|Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶/,
                isPM: function(e) {
                    return /^(ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡|Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "Õ£Õ«Õ·Õ¥Ö€Õ¾Õ¡" : 12 > e ? "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¾Õ¡" : 17 > e ? "ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡" : "Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶"
                },
                ordinalParse: /\d{1,2}|\d{1,2}-(Õ«Õ¶|Ö€Õ¤)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "DDD":
                        case "w":
                        case "W":
                        case "DDDo":
                            return 1 === e ? e + "-Õ«Õ¶" : e + "-Ö€Õ¤";
                        default:
                            return e
                    }
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("id", {
                months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
                monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
                weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
                weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
                weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
                longDateFormat: {
                    LT: "HH.mm",
                    LTS: "LT.ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY [pukul] LT",
                    LLLL: "dddd, D MMMM YYYY [pukul] LT"
                },
                meridiemParse: /pagi|siang|sore|malam/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "pagi" === t ? e : "siang" === t ? e >= 11 ? e : e + 12 : "sore" === t || "malam" === t ? e + 12 : void 0
                },
                meridiem: function(e) {
                    return 11 > e ? "pagi" : 15 > e ? "siang" : 19 > e ? "sore" : "malam"
                },
                calendar: {
                    sameDay: "[Hari ini pukul] LT",
                    nextDay: "[Besok pukul] LT",
                    nextWeek: "dddd [pukul] LT",
                    lastDay: "[Kemarin pukul] LT",
                    lastWeek: "dddd [lalu pukul] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "dalam %s",
                    past: "%s yang lalu",
                    s: "beberapa detik",
                    m: "semenit",
                    mm: "%d menit",
                    h: "sejam",
                    hh: "%d jam",
                    d: "sehari",
                    dd: "%d hari",
                    M: "sebulan",
                    MM: "%d bulan",
                    y: "setahun",
                    yy: "%d tahun"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e) {
                return e % 100 === 11 ? !0 : e % 10 === 1 ? !1 : !0
            }

            function a(e, a, n, r) {
                var s = e + " ";
                switch (n) {
                    case "s":
                        return a || r ? "nokkrar sekÃºndur" : "nokkrum sekÃºndum";
                    case "m":
                        return a ? "mÃ­nÃºta" : "mÃ­nÃºtu";
                    case "mm":
                        return t(e) ? s + (a || r ? "mÃ­nÃºtur" : "mÃ­nÃºtum") : a ? s + "mÃ­nÃºta" : s + "mÃ­nÃºtu";
                    case "hh":
                        return t(e) ? s + (a || r ? "klukkustundir" : "klukkustundum") : s + "klukkustund";
                    case "d":
                        return a ? "dagur" : r ? "dag" : "degi";
                    case "dd":
                        return t(e) ? a ? s + "dagar" : s + (r ? "daga" : "dÃ¶gum") : a ? s + "dagur" : s + (r ? "dag" : "degi");
                    case "M":
                        return a ? "mÃ¡nuÃ°ur" : r ? "mÃ¡nuÃ°" : "mÃ¡nuÃ°i";
                    case "MM":
                        return t(e) ? a ? s + "mÃ¡nuÃ°ir" : s + (r ? "mÃ¡nuÃ°i" : "mÃ¡nuÃ°um") : a ? s + "mÃ¡nuÃ°ur" : s + (r ? "mÃ¡nuÃ°" : "mÃ¡nuÃ°i");
                    case "y":
                        return a || r ? "Ã¡r" : "Ã¡ri";
                    case "yy":
                        return t(e) ? s + (a || r ? "Ã¡r" : "Ã¡rum") : s + (a || r ? "Ã¡r" : "Ã¡ri")
                }
            }
            return e.defineLocale("is", {
                months: "janÃºar_febrÃºar_mars_aprÃ­l_maÃ­_jÃºnÃ­_jÃºlÃ­_Ã¡gÃºst_september_oktÃ³ber_nÃ³vember_desember".split("_"),
                monthsShort: "jan_feb_mar_apr_maÃ­_jÃºn_jÃºl_Ã¡gÃº_sep_okt_nÃ³v_des".split("_"),
                weekdays: "sunnudagur_mÃ¡nudagur_Ã¾riÃ°judagur_miÃ°vikudagur_fimmtudagur_fÃ¶studagur_laugardagur".split("_"),
                weekdaysShort: "sun_mÃ¡n_Ã¾ri_miÃ°_fim_fÃ¶s_lau".split("_"),
                weekdaysMin: "Su_MÃ¡_Ãžr_Mi_Fi_FÃ¶_La".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY [kl.] LT",
                    LLLL: "dddd, D. MMMM YYYY [kl.] LT"
                },
                calendar: {
                    sameDay: "[Ã­ dag kl.] LT",
                    nextDay: "[Ã¡ morgun kl.] LT",
                    nextWeek: "dddd [kl.] LT",
                    lastDay: "[Ã­ gÃ¦r kl.] LT",
                    lastWeek: "[sÃ­Ã°asta] dddd [kl.] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "eftir %s",
                    past: "fyrir %s sÃ­Ã°an",
                    s: a,
                    m: a,
                    mm: a,
                    h: "klukkustund",
                    hh: a,
                    d: a,
                    dd: a,
                    M: a,
                    MM: a,
                    y: a,
                    yy: a
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("it", {
                months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
                monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
                weekdays: "Domenica_LunedÃ¬_MartedÃ¬_MercoledÃ¬_GiovedÃ¬_VenerdÃ¬_Sabato".split("_"),
                weekdaysShort: "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
                weekdaysMin: "D_L_Ma_Me_G_V_S".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Oggi alle] LT",
                    nextDay: "[Domani alle] LT",
                    nextWeek: "dddd [alle] LT",
                    lastDay: "[Ieri alle] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[la scorsa] dddd [alle] LT";
                            default:
                                return "[lo scorso] dddd [alle] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: function(e) {
                        return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e
                    },
                    past: "%s fa",
                    s: "alcuni secondi",
                    m: "un minuto",
                    mm: "%d minuti",
                    h: "un'ora",
                    hh: "%d ore",
                    d: "un giorno",
                    dd: "%d giorni",
                    M: "un mese",
                    MM: "%d mesi",
                    y: "un anno",
                    yy: "%d anni"
                },
                ordinalParse: /\d{1,2}Âº/,
                ordinal: "%dÂº",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ja", {
                months: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split("_"),
                monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split("_"),
                weekdays: "æ—¥æ›œæ—¥_æœˆæ›œæ—¥_ç«æ›œæ—¥_æ°´æ›œæ—¥_æœ¨æ›œæ—¥_é‡‘æ›œæ—¥_åœŸæ›œæ—¥".split("_"),
                weekdaysShort: "æ—¥_æœˆ_ç«_æ°´_æœ¨_é‡‘_åœŸ".split("_"),
                weekdaysMin: "æ—¥_æœˆ_ç«_æ°´_æœ¨_é‡‘_åœŸ".split("_"),
                longDateFormat: {
                    LT: "Ahæ™‚måˆ†",
                    LTS: "LTsç§’",
                    L: "YYYY/MM/DD",
                    LL: "YYYYå¹´MæœˆDæ—¥",
                    LLL: "YYYYå¹´MæœˆDæ—¥LT",
                    LLLL: "YYYYå¹´MæœˆDæ—¥LT dddd"
                },
                meridiemParse: /åˆå‰|åˆå¾Œ/i,
                isPM: function(e) {
                    return "åˆå¾Œ" === e
                },
                meridiem: function(e) {
                    return 12 > e ? "åˆå‰" : "åˆå¾Œ"
                },
                calendar: {
                    sameDay: "[ä»Šæ—¥] LT",
                    nextDay: "[æ˜Žæ—¥] LT",
                    nextWeek: "[æ¥é€±]dddd LT",
                    lastDay: "[æ˜¨æ—¥] LT",
                    lastWeek: "[å‰é€±]dddd LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%så¾Œ",
                    past: "%så‰",
                    s: "æ•°ç§’",
                    m: "1åˆ†",
                    mm: "%dåˆ†",
                    h: "1æ™‚é–“",
                    hh: "%dæ™‚é–“",
                    d: "1æ—¥",
                    dd: "%dæ—¥",
                    M: "1ãƒ¶æœˆ",
                    MM: "%dãƒ¶æœˆ",
                    y: "1å¹´",
                    yy: "%då¹´"
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t) {
                var a = {
                        nominative: "áƒ˜áƒáƒœáƒ•áƒáƒ áƒ˜_áƒ—áƒ”áƒ‘áƒ”áƒ áƒ•áƒáƒšáƒ˜_áƒ›áƒáƒ áƒ¢áƒ˜_áƒáƒžáƒ áƒ˜áƒšáƒ˜_áƒ›áƒáƒ˜áƒ¡áƒ˜_áƒ˜áƒ•áƒœáƒ˜áƒ¡áƒ˜_áƒ˜áƒ•áƒšáƒ˜áƒ¡áƒ˜_áƒáƒ’áƒ•áƒ˜áƒ¡áƒ¢áƒ_áƒ¡áƒ”áƒ¥áƒ¢áƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜_áƒáƒ¥áƒ¢áƒáƒ›áƒ‘áƒ”áƒ áƒ˜_áƒœáƒáƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜_áƒ“áƒ”áƒ™áƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜".split("_"),
                        accusative: "áƒ˜áƒáƒœáƒ•áƒáƒ áƒ¡_áƒ—áƒ”áƒ‘áƒ”áƒ áƒ•áƒáƒšáƒ¡_áƒ›áƒáƒ áƒ¢áƒ¡_áƒáƒžáƒ áƒ˜áƒšáƒ˜áƒ¡_áƒ›áƒáƒ˜áƒ¡áƒ¡_áƒ˜áƒ•áƒœáƒ˜áƒ¡áƒ¡_áƒ˜áƒ•áƒšáƒ˜áƒ¡áƒ¡_áƒáƒ’áƒ•áƒ˜áƒ¡áƒ¢áƒ¡_áƒ¡áƒ”áƒ¥áƒ¢áƒ”áƒ›áƒ‘áƒ”áƒ áƒ¡_áƒáƒ¥áƒ¢áƒáƒ›áƒ‘áƒ”áƒ áƒ¡_áƒœáƒáƒ”áƒ›áƒ‘áƒ”áƒ áƒ¡_áƒ“áƒ”áƒ™áƒ”áƒ›áƒ‘áƒ”áƒ áƒ¡".split("_")
                    },
                    n = /D[oD] *MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function a(e, t) {
                var a = {
                        nominative: "áƒ™áƒ•áƒ˜áƒ áƒ_áƒáƒ áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒ¡áƒáƒ›áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒáƒ—áƒ®áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒ®áƒ£áƒ—áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒžáƒáƒ áƒáƒ¡áƒ™áƒ”áƒ•áƒ˜_áƒ¨áƒáƒ‘áƒáƒ—áƒ˜".split("_"),
                        accusative: "áƒ™áƒ•áƒ˜áƒ áƒáƒ¡_áƒáƒ áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒ¡áƒáƒ›áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒáƒ—áƒ®áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒ®áƒ£áƒ—áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒžáƒáƒ áƒáƒ¡áƒ™áƒ”áƒ•áƒ¡_áƒ¨áƒáƒ‘áƒáƒ—áƒ¡".split("_")
                    },
                    n = /(áƒ¬áƒ˜áƒœáƒ|áƒ¨áƒ”áƒ›áƒ“áƒ”áƒ’)/.test(t) ? "accusative" : "nominative";
                return a[n][e.day()]
            }
            return e.defineLocale("ka", {
                months: t,
                monthsShort: "áƒ˜áƒáƒœ_áƒ—áƒ”áƒ‘_áƒ›áƒáƒ _áƒáƒžáƒ _áƒ›áƒáƒ˜_áƒ˜áƒ•áƒœ_áƒ˜áƒ•áƒš_áƒáƒ’áƒ•_áƒ¡áƒ”áƒ¥_áƒáƒ¥áƒ¢_áƒœáƒáƒ”_áƒ“áƒ”áƒ™".split("_"),
                weekdays: a,
                weekdaysShort: "áƒ™áƒ•áƒ˜_áƒáƒ áƒ¨_áƒ¡áƒáƒ›_áƒáƒ—áƒ®_áƒ®áƒ£áƒ—_áƒžáƒáƒ _áƒ¨áƒáƒ‘".split("_"),
                weekdaysMin: "áƒ™áƒ•_áƒáƒ _áƒ¡áƒ_áƒáƒ—_áƒ®áƒ£_áƒžáƒ_áƒ¨áƒ".split("_"),
                longDateFormat: {
                    LT: "h:mm A",
                    LTS: "h:mm:ss A",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[áƒ“áƒ¦áƒ”áƒ¡] LT[-áƒ–áƒ”]",
                    nextDay: "[áƒ®áƒ•áƒáƒš] LT[-áƒ–áƒ”]",
                    lastDay: "[áƒ’áƒ£áƒ¨áƒ˜áƒœ] LT[-áƒ–áƒ”]",
                    nextWeek: "[áƒ¨áƒ”áƒ›áƒ“áƒ”áƒ’] dddd LT[-áƒ–áƒ”]",
                    lastWeek: "[áƒ¬áƒ˜áƒœáƒ] dddd LT-áƒ–áƒ”",
                    sameElse: "L"
                },
                relativeTime: {
                    future: function(e) {
                        return /(áƒ¬áƒáƒ›áƒ˜|áƒ¬áƒ£áƒ—áƒ˜|áƒ¡áƒáƒáƒ—áƒ˜|áƒ¬áƒ”áƒšáƒ˜)/.test(e) ? e.replace(/áƒ˜$/, "áƒ¨áƒ˜") : e + "áƒ¨áƒ˜"
                    },
                    past: function(e) {
                        return /(áƒ¬áƒáƒ›áƒ˜|áƒ¬áƒ£áƒ—áƒ˜|áƒ¡áƒáƒáƒ—áƒ˜|áƒ“áƒ¦áƒ”|áƒ—áƒ•áƒ”)/.test(e) ? e.replace(/(áƒ˜|áƒ”)$/, "áƒ˜áƒ¡ áƒ¬áƒ˜áƒœ") : /áƒ¬áƒ”áƒšáƒ˜/.test(e) ? e.replace(/áƒ¬áƒ”áƒšáƒ˜$/, "áƒ¬áƒšáƒ˜áƒ¡ áƒ¬áƒ˜áƒœ") : void 0
                    },
                    s: "áƒ áƒáƒ›áƒ“áƒ”áƒœáƒ˜áƒ›áƒ” áƒ¬áƒáƒ›áƒ˜",
                    m: "áƒ¬áƒ£áƒ—áƒ˜",
                    mm: "%d áƒ¬áƒ£áƒ—áƒ˜",
                    h: "áƒ¡áƒáƒáƒ—áƒ˜",
                    hh: "%d áƒ¡áƒáƒáƒ—áƒ˜",
                    d: "áƒ“áƒ¦áƒ”",
                    dd: "%d áƒ“áƒ¦áƒ”",
                    M: "áƒ—áƒ•áƒ”",
                    MM: "%d áƒ—áƒ•áƒ”",
                    y: "áƒ¬áƒ”áƒšáƒ˜",
                    yy: "%d áƒ¬áƒ”áƒšáƒ˜"
                },
                ordinalParse: /0|1-áƒšáƒ˜|áƒ›áƒ”-\d{1,2}|\d{1,2}-áƒ”/,
                ordinal: function(e) {
                    return 0 === e ? e : 1 === e ? e + "-áƒšáƒ˜" : 20 > e || 100 >= e && e % 20 === 0 || e % 100 === 0 ? "áƒ›áƒ”-" + e : e + "-áƒ”"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("km", {
                months: "áž˜áž€ážšáž¶_áž€áž»áž˜áŸ’áž—áŸˆ_áž˜áž·áž“áž¶_áž˜áŸážŸáž¶_áž§ážŸáž—áž¶_áž˜áž·ážáž»áž“áž¶_áž€áž€áŸ’áž€ážŠáž¶_ážŸáž¸áž áž¶_áž€áž‰áŸ’áž‰áž¶_ážáž»áž›áž¶_ážœáž·áž…áŸ’áž†áž·áž€áž¶_áž’áŸ’áž“áž¼".split("_"),
                monthsShort: "áž˜áž€ážšáž¶_áž€áž»áž˜áŸ’áž—áŸˆ_áž˜áž·áž“áž¶_áž˜áŸážŸáž¶_áž§ážŸáž—áž¶_áž˜áž·ážáž»áž“áž¶_áž€áž€áŸ’áž€ážŠáž¶_ážŸáž¸áž áž¶_áž€áž‰áŸ’áž‰áž¶_ážáž»áž›áž¶_ážœáž·áž…áŸ’áž†áž·áž€áž¶_áž’áŸ’áž“áž¼".split("_"),
                weekdays: "áž¢áž¶áž‘áž·ážáŸ’áž™_áž…áŸáž“áŸ’áž‘_áž¢áž„áŸ’áž‚áž¶ážš_áž–áž»áž’_áž–áŸ’ážšáž ážŸáŸ’áž”ážáž·áŸ_ážŸáž»áž€áŸ’ážš_ážŸáŸ…ážšáŸ".split("_"),
                weekdaysShort: "áž¢áž¶áž‘áž·ážáŸ’áž™_áž…áŸáž“áŸ’áž‘_áž¢áž„áŸ’áž‚áž¶ážš_áž–áž»áž’_áž–áŸ’ážšáž ážŸáŸ’áž”ážáž·áŸ_ážŸáž»áž€áŸ’ážš_ážŸáŸ…ážšáŸ".split("_"),
                weekdaysMin: "áž¢áž¶áž‘áž·ážáŸ’áž™_áž…áŸáž“áŸ’áž‘_áž¢áž„áŸ’áž‚áž¶ážš_áž–áž»áž’_áž–áŸ’ážšáž ážŸáŸ’áž”ážáž·áŸ_ážŸáž»áž€áŸ’ážš_ážŸáŸ…ážšáŸ".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[ážáŸ’áž„áŸƒáž“áŸˆ áž˜áŸ‰áŸ„áž„] LT",
                    nextDay: "[ážŸáŸ’áž¢áŸ‚áž€ áž˜áŸ‰áŸ„áž„] LT",
                    nextWeek: "dddd [áž˜áŸ‰áŸ„áž„] LT",
                    lastDay: "[áž˜áŸ’ážŸáž·áž›áž˜áž·áž‰ áž˜áŸ‰áŸ„áž„] LT",
                    lastWeek: "dddd [ážŸáž”áŸ’ážáž¶áž áŸáž˜áž»áž“] [áž˜áŸ‰áŸ„áž„] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%sáž‘áŸ€áž",
                    past: "%sáž˜áž»áž“",
                    s: "áž”áŸ‰áž»áž“áŸ’áž˜áž¶áž“ážœáž·áž“áž¶áž‘áž¸",
                    m: "áž˜áž½áž™áž“áž¶áž‘áž¸",
                    mm: "%d áž“áž¶áž‘áž¸",
                    h: "áž˜áž½áž™áž˜áŸ‰áŸ„áž„",
                    hh: "%d áž˜áŸ‰áŸ„áž„",
                    d: "áž˜áž½áž™ážáŸ’áž„áŸƒ",
                    dd: "%d ážáŸ’áž„áŸƒ",
                    M: "áž˜áž½áž™ážáŸ‚",
                    MM: "%d ážáŸ‚",
                    y: "áž˜áž½áž™áž†áŸ’áž“áž¶áŸ†",
                    yy: "%d áž†áŸ’áž“áž¶áŸ†"
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ko", {
                months: "1ì›”_2ì›”_3ì›”_4ì›”_5ì›”_6ì›”_7ì›”_8ì›”_9ì›”_10ì›”_11ì›”_12ì›”".split("_"),
                monthsShort: "1ì›”_2ì›”_3ì›”_4ì›”_5ì›”_6ì›”_7ì›”_8ì›”_9ì›”_10ì›”_11ì›”_12ì›”".split("_"),
                weekdays: "ì¼ìš”ì¼_ì›”ìš”ì¼_í™”ìš”ì¼_ìˆ˜ìš”ì¼_ëª©ìš”ì¼_ê¸ˆìš”ì¼_í† ìš”ì¼".split("_"),
                weekdaysShort: "ì¼_ì›”_í™”_ìˆ˜_ëª©_ê¸ˆ_í† ".split("_"),
                weekdaysMin: "ì¼_ì›”_í™”_ìˆ˜_ëª©_ê¸ˆ_í† ".split("_"),
                longDateFormat: {
                    LT: "A hì‹œ më¶„",
                    LTS: "A hì‹œ më¶„ sì´ˆ",
                    L: "YYYY.MM.DD",
                    LL: "YYYYë…„ MMMM Dì¼",
                    LLL: "YYYYë…„ MMMM Dì¼ LT",
                    LLLL: "YYYYë…„ MMMM Dì¼ dddd LT"
                },
                calendar: {
                    sameDay: "ì˜¤ëŠ˜ LT",
                    nextDay: "ë‚´ì¼ LT",
                    nextWeek: "dddd LT",
                    lastDay: "ì–´ì œ LT",
                    lastWeek: "ì§€ë‚œì£¼ dddd LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s í›„",
                    past: "%s ì „",
                    s: "ëª‡ì´ˆ",
                    ss: "%dì´ˆ",
                    m: "ì¼ë¶„",
                    mm: "%dë¶„",
                    h: "í•œì‹œê°„",
                    hh: "%dì‹œê°„",
                    d: "í•˜ë£¨",
                    dd: "%dì¼",
                    M: "í•œë‹¬",
                    MM: "%dë‹¬",
                    y: "ì¼ë…„",
                    yy: "%dë…„"
                },
                ordinalParse: /\d{1,2}ì¼/,
                ordinal: "%dì¼",
                meridiemParse: /ì˜¤ì „|ì˜¤í›„/,
                isPM: function(e) {
                    return "ì˜¤í›„" === e
                },
                meridiem: function(e) {
                    return 12 > e ? "ì˜¤ì „" : "ì˜¤í›„"
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = {
                    m: ["eng Minutt", "enger Minutt"],
                    h: ["eng Stonn", "enger Stonn"],
                    d: ["een Dag", "engem Dag"],
                    M: ["ee Mount", "engem Mount"],
                    y: ["ee Joer", "engem Joer"]
                };
                return t ? n[a][0] : n[a][1]
            }

            function a(e) {
                var t = e.substr(0, e.indexOf(" "));
                return r(t) ? "a " + e : "an " + e
            }

            function n(e) {
                var t = e.substr(0, e.indexOf(" "));
                return r(t) ? "viru " + e : "virun " + e
            }

            function r(e) {
                if (e = parseInt(e, 10), isNaN(e)) return !1;
                if (0 > e) return !0;
                if (10 > e) return e >= 4 && 7 >= e ? !0 : !1;
                if (100 > e) {
                    var t = e % 10,
                        a = e / 10;
                    return r(0 === t ? a : t)
                }
                if (1e4 > e) {
                    for (; e >= 10;) e /= 10;
                    return r(e)
                }
                return e /= 1e3, r(e)
            }
            return e.defineLocale("lb", {
                months: "Januar_Februar_MÃ¤erz_AbrÃ«ll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
                weekdays: "Sonndeg_MÃ©indeg_DÃ«nschdeg_MÃ«ttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
                weekdaysShort: "So._MÃ©._DÃ«._MÃ«._Do._Fr._Sa.".split("_"),
                weekdaysMin: "So_MÃ©_DÃ«_MÃ«_Do_Fr_Sa".split("_"),
                longDateFormat: {
                    LT: "H:mm [Auer]",
                    LTS: "H:mm:ss [Auer]",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Haut um] LT",
                    sameElse: "L",
                    nextDay: "[Muer um] LT",
                    nextWeek: "dddd [um] LT",
                    lastDay: "[GÃ«schter um] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 2:
                            case 4:
                                return "[Leschten] dddd [um] LT";
                            default:
                                return "[Leschte] dddd [um] LT"
                        }
                    }
                },
                relativeTime: {
                    future: a,
                    past: n,
                    s: "e puer Sekonnen",
                    m: t,
                    mm: "%d Minutten",
                    h: t,
                    hh: "%d Stonnen",
                    d: t,
                    dd: "%d Deeg",
                    M: t,
                    MM: "%d MÃ©int",
                    y: t,
                    yy: "%d Joer"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a, n) {
                return t ? "kelios sekundÄ—s" : n ? "keliÅ³ sekundÅ¾iÅ³" : "kelias sekundes"
            }

            function a(e, t, a, n) {
                return t ? r(a)[0] : n ? r(a)[1] : r(a)[2]
            }

            function n(e) {
                return e % 10 === 0 || e > 10 && 20 > e
            }

            function r(e) {
                return d[e].split("_")
            }

            function s(e, t, s, i) {
                var d = e + " ";
                return 1 === e ? d + a(e, t, s[0], i) : t ? d + (n(e) ? r(s)[1] : r(s)[0]) : i ? d + r(s)[1] : d + (n(e) ? r(s)[1] : r(s)[2])
            }

            function i(e, t) {
                var a = -1 === t.indexOf("dddd HH:mm"),
                    n = o[e.day()];
                return a ? n : n.substring(0, n.length - 2) + "Ä¯"
            }
            var d = {
                    m: "minutÄ—_minutÄ—s_minutÄ™",
                    mm: "minutÄ—s_minuÄiÅ³_minutes",
                    h: "valanda_valandos_valandÄ…",
                    hh: "valandos_valandÅ³_valandas",
                    d: "diena_dienos_dienÄ…",
                    dd: "dienos_dienÅ³_dienas",
                    M: "mÄ—nuo_mÄ—nesio_mÄ—nesÄ¯",
                    MM: "mÄ—nesiai_mÄ—nesiÅ³_mÄ—nesius",
                    y: "metai_metÅ³_metus",
                    yy: "metai_metÅ³_metus"
                },
                o = "sekmadienis_pirmadienis_antradienis_treÄiadienis_ketvirtadienis_penktadienis_Å¡eÅ¡tadienis".split("_");
            return e.defineLocale("lt", {
                months: "sausio_vasario_kovo_balandÅ¾io_geguÅ¾Ä—s_birÅ¾elio_liepos_rugpjÅ«Äio_rugsÄ—jo_spalio_lapkriÄio_gruodÅ¾io".split("_"),
                monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
                weekdays: i,
                weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Å eÅ¡".split("_"),
                weekdaysMin: "S_P_A_T_K_Pn_Å ".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "YYYY-MM-DD",
                    LL: "YYYY [m.] MMMM D [d.]",
                    LLL: "YYYY [m.] MMMM D [d.], LT [val.]",
                    LLLL: "YYYY [m.] MMMM D [d.], dddd, LT [val.]",
                    l: "YYYY-MM-DD",
                    ll: "YYYY [m.] MMMM D [d.]",
                    lll: "YYYY [m.] MMMM D [d.], LT [val.]",
                    llll: "YYYY [m.] MMMM D [d.], ddd, LT [val.]"
                },
                calendar: {
                    sameDay: "[Å iandien] LT",
                    nextDay: "[Rytoj] LT",
                    nextWeek: "dddd LT",
                    lastDay: "[Vakar] LT",
                    lastWeek: "[PraÄ—jusÄ¯] dddd LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "po %s",
                    past: "prieÅ¡ %s",
                    s: t,
                    m: a,
                    mm: s,
                    h: a,
                    hh: s,
                    d: a,
                    dd: s,
                    M: a,
                    MM: s,
                    y: a,
                    yy: s
                },
                ordinalParse: /\d{1,2}-oji/,
                ordinal: function(e) {
                    return e + "-oji"
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = e.split("_");
                return a ? t % 10 === 1 && 11 !== t ? n[2] : n[3] : t % 10 === 1 && 11 !== t ? n[0] : n[1]
            }

            function a(e, a, r) {
                return e + " " + t(n[r], e, a)
            }
            var n = {
                mm: "minÅ«ti_minÅ«tes_minÅ«te_minÅ«tes",
                hh: "stundu_stundas_stunda_stundas",
                dd: "dienu_dienas_diena_dienas",
                MM: "mÄ“nesi_mÄ“neÅ¡us_mÄ“nesis_mÄ“neÅ¡i",
                yy: "gadu_gadus_gads_gadi"
            };
            return e.defineLocale("lv", {
                months: "janvÄris_februÄris_marts_aprÄ«lis_maijs_jÅ«nijs_jÅ«lijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
                monthsShort: "jan_feb_mar_apr_mai_jÅ«n_jÅ«l_aug_sep_okt_nov_dec".split("_"),
                weekdays: "svÄ“tdiena_pirmdiena_otrdiena_treÅ¡diena_ceturtdiena_piektdiena_sestdiena".split("_"),
                weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
                weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "YYYY. [gada] D. MMMM",
                    LLL: "YYYY. [gada] D. MMMM, LT",
                    LLLL: "YYYY. [gada] D. MMMM, dddd, LT"
                },
                calendar: {
                    sameDay: "[Å odien pulksten] LT",
                    nextDay: "[RÄ«t pulksten] LT",
                    nextWeek: "dddd [pulksten] LT",
                    lastDay: "[Vakar pulksten] LT",
                    lastWeek: "[PagÄjuÅ¡Ä] dddd [pulksten] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s vÄ“lÄk",
                    past: "%s agrÄk",
                    s: "daÅ¾as sekundes",
                    m: "minÅ«ti",
                    mm: a,
                    h: "stundu",
                    hh: a,
                    d: "dienu",
                    dd: a,
                    M: "mÄ“nesi",
                    MM: a,
                    y: "gadu",
                    yy: a
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("mk", {
                months: "Ñ˜Ð°Ð½ÑƒÐ°Ñ€Ð¸_Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€Ð¸Ð»_Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½Ð¸_Ñ˜ÑƒÐ»Ð¸_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸_Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸_Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸_Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸".split("_"),
                monthsShort: "Ñ˜Ð°Ð½_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½_Ñ˜ÑƒÐ»_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ‚_Ð½Ð¾Ðµ_Ð´ÐµÐº".split("_"),
                weekdays: "Ð½ÐµÐ´ÐµÐ»Ð°_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð¾Ðº_Ð¿ÐµÑ‚Ð¾Ðº_ÑÐ°Ð±Ð¾Ñ‚Ð°".split("_"),
                weekdaysShort: "Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²Ñ‚Ð¾_ÑÑ€Ðµ_Ñ‡ÐµÑ‚_Ð¿ÐµÑ‚_ÑÐ°Ð±".split("_"),
                weekdaysMin: "Ð½e_Ð¿o_Ð²Ñ‚_ÑÑ€_Ñ‡Ðµ_Ð¿Ðµ_Ña".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "D.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Ð”ÐµÐ½ÐµÑ Ð²Ð¾] LT",
                    nextDay: "[Ð£Ñ‚Ñ€Ðµ Ð²Ð¾] LT",
                    nextWeek: "dddd [Ð²Ð¾] LT",
                    lastDay: "[Ð’Ñ‡ÐµÑ€Ð° Ð²Ð¾] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                            case 6:
                                return "[Ð’Ð¾ Ð¸Ð·Ð¼Ð¸Ð½Ð°Ñ‚Ð°Ñ‚Ð°] dddd [Ð²Ð¾] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[Ð’Ð¾ Ð¸Ð·Ð¼Ð¸Ð½Ð°Ñ‚Ð¸Ð¾Ñ‚] dddd [Ð²Ð¾] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ð¿Ð¾ÑÐ»Ðµ %s",
                    past: "Ð¿Ñ€ÐµÐ´ %s",
                    s: "Ð½ÐµÐºÐ¾Ð»ÐºÑƒ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                    m: "Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
                    mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
                    h: "Ñ‡Ð°Ñ",
                    hh: "%d Ñ‡Ð°ÑÐ°",
                    d: "Ð´ÐµÐ½",
                    dd: "%d Ð´ÐµÐ½Ð°",
                    M: "Ð¼ÐµÑÐµÑ†",
                    MM: "%d Ð¼ÐµÑÐµÑ†Ð¸",
                    y: "Ð³Ð¾Ð´Ð¸Ð½Ð°",
                    yy: "%d Ð³Ð¾Ð´Ð¸Ð½Ð¸"
                },
                ordinalParse: /\d{1,2}-(ÐµÐ²|ÐµÐ½|Ñ‚Ð¸|Ð²Ð¸|Ñ€Ð¸|Ð¼Ð¸)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = e % 100;
                    return 0 === e ? e + "-ÐµÐ²" : 0 === a ? e + "-ÐµÐ½" : a > 10 && 20 > a ? e + "-Ñ‚Ð¸" : 1 === t ? e + "-Ð²Ð¸" : 2 === t ? e + "-Ñ€Ð¸" : 7 === t || 8 === t ? e + "-Ð¼Ð¸" : e + "-Ñ‚Ð¸"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ml", {
                months: "à´œà´¨àµà´µà´°à´¿_à´«àµ†à´¬àµà´°àµà´µà´°à´¿_à´®à´¾àµ¼à´šàµà´šàµ_à´à´ªàµà´°à´¿àµ½_à´®àµ‡à´¯àµ_à´œàµ‚àµº_à´œàµ‚à´²àµˆ_à´“à´—à´¸àµà´±àµà´±àµ_à´¸àµ†à´ªàµà´±àµà´±à´‚à´¬àµ¼_à´’à´•àµà´Ÿàµ‹à´¬àµ¼_à´¨à´µà´‚à´¬àµ¼_à´¡à´¿à´¸à´‚à´¬àµ¼".split("_"),
                monthsShort: "à´œà´¨àµ._à´«àµ†à´¬àµà´°àµ._à´®à´¾àµ¼._à´à´ªàµà´°à´¿._à´®àµ‡à´¯àµ_à´œàµ‚àµº_à´œàµ‚à´²àµˆ._à´“à´—._à´¸àµ†à´ªàµà´±àµà´±._à´’à´•àµà´Ÿàµ‹._à´¨à´µà´‚._à´¡à´¿à´¸à´‚.".split("_"),
                weekdays: "à´žà´¾à´¯à´±à´¾à´´àµà´š_à´¤à´¿à´™àµà´•à´³à´¾à´´àµà´š_à´šàµŠà´µàµà´µà´¾à´´àµà´š_à´¬àµà´§à´¨à´¾à´´àµà´š_à´µàµà´¯à´¾à´´à´¾à´´àµà´š_à´µàµ†à´³àµà´³à´¿à´¯à´¾à´´àµà´š_à´¶à´¨à´¿à´¯à´¾à´´àµà´š".split("_"),
                weekdaysShort: "à´žà´¾à´¯àµ¼_à´¤à´¿à´™àµà´•àµ¾_à´šàµŠà´µàµà´µ_à´¬àµà´§àµ»_à´µàµà´¯à´¾à´´à´‚_à´µàµ†à´³àµà´³à´¿_à´¶à´¨à´¿".split("_"),
                weekdaysMin: "à´žà´¾_à´¤à´¿_à´šàµŠ_à´¬àµ_à´µàµà´¯à´¾_à´µàµ†_à´¶".split("_"),
                longDateFormat: {
                    LT: "A h:mm -à´¨àµ",
                    LTS: "A h:mm:ss -à´¨àµ",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à´‡à´¨àµà´¨àµ] LT",
                    nextDay: "[à´¨à´¾à´³àµ†] LT",
                    nextWeek: "dddd, LT",
                    lastDay: "[à´‡à´¨àµà´¨à´²àµ†] LT",
                    lastWeek: "[à´•à´´à´¿à´žàµà´ž] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à´•à´´à´¿à´žàµà´žàµ",
                    past: "%s à´®àµàµ»à´ªàµ",
                    s: "à´…àµ½à´ª à´¨à´¿à´®à´¿à´·à´™àµà´™àµ¾",
                    m: "à´’à´°àµ à´®à´¿à´¨à´¿à´±àµà´±àµ",
                    mm: "%d à´®à´¿à´¨à´¿à´±àµà´±àµ",
                    h: "à´’à´°àµ à´®à´£à´¿à´•àµà´•àµ‚àµ¼",
                    hh: "%d à´®à´£à´¿à´•àµà´•àµ‚àµ¼",
                    d: "à´’à´°àµ à´¦à´¿à´µà´¸à´‚",
                    dd: "%d à´¦à´¿à´µà´¸à´‚",
                    M: "à´’à´°àµ à´®à´¾à´¸à´‚",
                    MM: "%d à´®à´¾à´¸à´‚",
                    y: "à´’à´°àµ à´µàµ¼à´·à´‚",
                    yy: "%d à´µàµ¼à´·à´‚"
                },
                meridiemParse: /à´°à´¾à´¤àµà´°à´¿|à´°à´¾à´µà´¿à´²àµ†|à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ|à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚|à´°à´¾à´¤àµà´°à´¿/i,
                isPM: function(e) {
                    return /^(à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ|à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚|à´°à´¾à´¤àµà´°à´¿)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "à´°à´¾à´¤àµà´°à´¿" : 12 > e ? "à´°à´¾à´µà´¿à´²àµ†" : 17 > e ? "à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ" : 20 > e ? "à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚" : "à´°à´¾à´¤àµà´°à´¿"
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "à¥§",
                    2: "à¥¨",
                    3: "à¥©",
                    4: "à¥ª",
                    5: "à¥«",
                    6: "à¥¬",
                    7: "à¥­",
                    8: "à¥®",
                    9: "à¥¯",
                    0: "à¥¦"
                },
                a = {
                    "à¥§": "1",
                    "à¥¨": "2",
                    "à¥©": "3",
                    "à¥ª": "4",
                    "à¥«": "5",
                    "à¥¬": "6",
                    "à¥­": "7",
                    "à¥®": "8",
                    "à¥¯": "9",
                    "à¥¦": "0"
                };
            return e.defineLocale("mr", {
                months: "à¤œà¤¾à¤¨à¥‡à¤µà¤¾à¤°à¥€_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤à¤ªà¥à¤°à¤¿à¤²_à¤®à¥‡_à¤œà¥‚à¤¨_à¤œà¥à¤²à¥ˆ_à¤‘à¤—à¤¸à¥à¤Ÿ_à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚à¤¬à¤°_à¤‘à¤•à¥à¤Ÿà¥‹à¤¬à¤°_à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚à¤¬à¤°_à¤¡à¤¿à¤¸à¥‡à¤‚à¤¬à¤°".split("_"),
                monthsShort: "à¤œà¤¾à¤¨à¥‡._à¤«à¥‡à¤¬à¥à¤°à¥._à¤®à¤¾à¤°à¥à¤š._à¤à¤ªà¥à¤°à¤¿._à¤®à¥‡._à¤œà¥‚à¤¨._à¤œà¥à¤²à¥ˆ._à¤‘à¤—._à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚._à¤‘à¤•à¥à¤Ÿà¥‹._à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚._à¤¡à¤¿à¤¸à¥‡à¤‚.".split("_"),
                weekdays: "à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥‹à¤®à¤µà¤¾à¤°_à¤®à¤‚à¤—à¤³à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤—à¥à¤°à¥‚à¤µà¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°".split("_"),
                weekdaysShort: "à¤°à¤µà¤¿_à¤¸à¥‹à¤®_à¤®à¤‚à¤—à¤³_à¤¬à¥à¤§_à¤—à¥à¤°à¥‚_à¤¶à¥à¤•à¥à¤°_à¤¶à¤¨à¤¿".split("_"),
                weekdaysMin: "à¤°_à¤¸à¥‹_à¤®à¤‚_à¤¬à¥_à¤—à¥_à¤¶à¥_à¤¶".split("_"),
                longDateFormat: {
                    LT: "A h:mm à¤µà¤¾à¤œà¤¤à¤¾",
                    LTS: "A h:mm:ss à¤µà¤¾à¤œà¤¤à¤¾",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à¤†à¤œ] LT",
                    nextDay: "[à¤‰à¤¦à¥à¤¯à¤¾] LT",
                    nextWeek: "dddd, LT",
                    lastDay: "[à¤•à¤¾à¤²] LT",
                    lastWeek: "[à¤®à¤¾à¤—à¥€à¤²] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à¤¨à¤‚à¤¤à¤°",
                    past: "%s à¤ªà¥‚à¤°à¥à¤µà¥€",
                    s: "à¤¸à¥‡à¤•à¤‚à¤¦",
                    m: "à¤à¤• à¤®à¤¿à¤¨à¤¿à¤Ÿ",
                    mm: "%d à¤®à¤¿à¤¨à¤¿à¤Ÿà¥‡",
                    h: "à¤à¤• à¤¤à¤¾à¤¸",
                    hh: "%d à¤¤à¤¾à¤¸",
                    d: "à¤à¤• à¤¦à¤¿à¤µà¤¸",
                    dd: "%d à¤¦à¤¿à¤µà¤¸",
                    M: "à¤à¤• à¤®à¤¹à¤¿à¤¨à¤¾",
                    MM: "%d à¤®à¤¹à¤¿à¤¨à¥‡",
                    y: "à¤à¤• à¤µà¤°à¥à¤·",
                    yy: "%d à¤µà¤°à¥à¤·à¥‡"
                },
                preparse: function(e) {
                    return e.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                meridiemParse: /à¤°à¤¾à¤¤à¥à¤°à¥€|à¤¸à¤•à¤¾à¤³à¥€|à¤¦à¥à¤ªà¤¾à¤°à¥€|à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "à¤°à¤¾à¤¤à¥à¤°à¥€" === t ? 4 > e ? e : e + 12 : "à¤¸à¤•à¤¾à¤³à¥€" === t ? e : "à¤¦à¥à¤ªà¤¾à¤°à¥€" === t ? e >= 10 ? e : e + 12 : "à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€" === t ? e + 12 : void 0
                },
                meridiem: function(e) {
                    return 4 > e ? "à¤°à¤¾à¤¤à¥à¤°à¥€" : 10 > e ? "à¤¸à¤•à¤¾à¤³à¥€" : 17 > e ? "à¤¦à¥à¤ªà¤¾à¤°à¥€" : 20 > e ? "à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€" : "à¤°à¤¾à¤¤à¥à¤°à¥€"
                },
                week: {
                    dow: 0,
                    doy: 6
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ms-my", {
                months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
                monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
                weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
                weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
                weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
                longDateFormat: {
                    LT: "HH.mm",
                    LTS: "LT.ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY [pukul] LT",
                    LLLL: "dddd, D MMMM YYYY [pukul] LT"
                },
                meridiemParse: /pagi|tengahari|petang|malam/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0
                },
                meridiem: function(e) {
                    return 11 > e ? "pagi" : 15 > e ? "tengahari" : 19 > e ? "petang" : "malam"
                },
                calendar: {
                    sameDay: "[Hari ini pukul] LT",
                    nextDay: "[Esok pukul] LT",
                    nextWeek: "dddd [pukul] LT",
                    lastDay: "[Kelmarin pukul] LT",
                    lastWeek: "dddd [lepas pukul] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "dalam %s",
                    past: "%s yang lepas",
                    s: "beberapa saat",
                    m: "seminit",
                    mm: "%d minit",
                    h: "sejam",
                    hh: "%d jam",
                    d: "sehari",
                    dd: "%d hari",
                    M: "sebulan",
                    MM: "%d bulan",
                    y: "setahun",
                    yy: "%d tahun"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "á",
                    2: "á‚",
                    3: "áƒ",
                    4: "á„",
                    5: "á…",
                    6: "á†",
                    7: "á‡",
                    8: "áˆ",
                    9: "á‰",
                    0: "á€"
                },
                a = {
                    "á": "1",
                    "á‚": "2",
                    "áƒ": "3",
                    "á„": "4",
                    "á…": "5",
                    "á†": "6",
                    "á‡": "7",
                    "áˆ": "8",
                    "á‰": "9",
                    "á€": "0"
                };
            return e.defineLocale("my", {
                months: "á€‡á€”á€ºá€”á€á€«á€›á€®_á€–á€±á€–á€±á€¬á€ºá€á€«á€›á€®_á€™á€á€º_á€§á€•á€¼á€®_á€™á€±_á€‡á€½á€”á€º_á€‡á€°á€œá€­á€¯á€„á€º_á€žá€¼á€‚á€¯á€á€º_á€…á€€á€ºá€á€„á€ºá€˜á€¬_á€¡á€±á€¬á€€á€ºá€á€­á€¯á€˜á€¬_á€”á€­á€¯á€á€„á€ºá€˜á€¬_á€’á€®á€‡á€„á€ºá€˜á€¬".split("_"),
                monthsShort: "á€‡á€”á€º_á€–á€±_á€™á€á€º_á€•á€¼á€®_á€™á€±_á€‡á€½á€”á€º_á€œá€­á€¯á€„á€º_á€žá€¼_á€…á€€á€º_á€¡á€±á€¬á€€á€º_á€”á€­á€¯_á€’á€®".split("_"),
                weekdays: "á€á€”á€„á€ºá€¹á€‚á€”á€½á€±_á€á€”á€„á€ºá€¹á€œá€¬_á€¡á€„á€ºá€¹á€‚á€«_á€—á€¯á€’á€¹á€“á€Ÿá€°á€¸_á€€á€¼á€¬á€žá€•á€á€±á€¸_á€žá€±á€¬á€€á€¼á€¬_á€…á€”á€±".split("_"),
                weekdaysShort: "á€”á€½á€±_á€œá€¬_á€„á€ºá€¹á€‚á€«_á€Ÿá€°á€¸_á€€á€¼á€¬_á€žá€±á€¬_á€”á€±".split("_"),
                weekdaysMin: "á€”á€½á€±_á€œá€¬_á€„á€ºá€¹á€‚á€«_á€Ÿá€°á€¸_á€€á€¼á€¬_á€žá€±á€¬_á€”á€±".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "HH:mm:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[á€šá€”á€±.] LT [á€™á€¾á€¬]",
                    nextDay: "[á€™á€”á€€á€ºá€–á€¼á€”á€º] LT [á€™á€¾á€¬]",
                    nextWeek: "dddd LT [á€™á€¾á€¬]",
                    lastDay: "[á€™á€”á€±.á€€] LT [á€™á€¾á€¬]",
                    lastWeek: "[á€•á€¼á€®á€¸á€á€²á€·á€žá€±á€¬] dddd LT [á€™á€¾á€¬]",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "á€œá€¬á€™á€Šá€ºá€· %s á€™á€¾á€¬",
                    past: "á€œá€½á€”á€ºá€á€²á€·á€žá€±á€¬ %s á€€",
                    s: "á€…á€€á€¹á€€á€”á€º.á€¡á€”á€Šá€ºá€¸á€„á€šá€º",
                    m: "á€á€…á€ºá€™á€­á€”á€…á€º",
                    mm: "%d á€™á€­á€”á€…á€º",
                    h: "á€á€…á€ºá€”á€¬á€›á€®",
                    hh: "%d á€”á€¬á€›á€®",
                    d: "á€á€…á€ºá€›á€€á€º",
                    dd: "%d á€›á€€á€º",
                    M: "á€á€…á€ºá€œ",
                    MM: "%d á€œ",
                    y: "á€á€…á€ºá€”á€¾á€…á€º",
                    yy: "%d á€”á€¾á€…á€º"
                },
                preparse: function(e) {
                    return e.replace(/[áá‚áƒá„á…á†á‡áˆá‰á€]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("nb", {
                months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
                weekdays: "sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag".split("_"),
                weekdaysShort: "sÃ¸n_man_tirs_ons_tors_fre_lÃ¸r".split("_"),
                weekdaysMin: "sÃ¸_ma_ti_on_to_fr_lÃ¸".split("_"),
                longDateFormat: {
                    LT: "H.mm",
                    LTS: "LT.ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY [kl.] LT",
                    LLLL: "dddd D. MMMM YYYY [kl.] LT"
                },
                calendar: {
                    sameDay: "[i dag kl.] LT",
                    nextDay: "[i morgen kl.] LT",
                    nextWeek: "dddd [kl.] LT",
                    lastDay: "[i gÃ¥r kl.] LT",
                    lastWeek: "[forrige] dddd [kl.] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "om %s",
                    past: "for %s siden",
                    s: "noen sekunder",
                    m: "ett minutt",
                    mm: "%d minutter",
                    h: "en time",
                    hh: "%d timer",
                    d: "en dag",
                    dd: "%d dager",
                    M: "en mÃ¥ned",
                    MM: "%d mÃ¥neder",
                    y: "ett Ã¥r",
                    yy: "%d Ã¥r"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                    1: "à¥§",
                    2: "à¥¨",
                    3: "à¥©",
                    4: "à¥ª",
                    5: "à¥«",
                    6: "à¥¬",
                    7: "à¥­",
                    8: "à¥®",
                    9: "à¥¯",
                    0: "à¥¦"
                },
                a = {
                    "à¥§": "1",
                    "à¥¨": "2",
                    "à¥©": "3",
                    "à¥ª": "4",
                    "à¥«": "5",
                    "à¥¬": "6",
                    "à¥­": "7",
                    "à¥®": "8",
                    "à¥¯": "9",
                    "à¥¦": "0"
                };
            return e.defineLocale("ne", {
                months: "à¤œà¤¨à¤µà¤°à¥€_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¤¿à¤²_à¤®à¤ˆ_à¤œà¥à¤¨_à¤œà¥à¤²à¤¾à¤ˆ_à¤…à¤—à¤·à¥à¤Ÿ_à¤¸à¥‡à¤ªà¥à¤Ÿà¥‡à¤®à¥à¤¬à¤°_à¤…à¤•à¥à¤Ÿà¥‹à¤¬à¤°_à¤¨à¥‹à¤­à¥‡à¤®à¥à¤¬à¤°_à¤¡à¤¿à¤¸à¥‡à¤®à¥à¤¬à¤°".split("_"),
                monthsShort: "à¤œà¤¨._à¤«à¥‡à¤¬à¥à¤°à¥._à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¤¿._à¤®à¤ˆ_à¤œà¥à¤¨_à¤œà¥à¤²à¤¾à¤ˆ._à¤…à¤—._à¤¸à¥‡à¤ªà¥à¤Ÿ._à¤…à¤•à¥à¤Ÿà¥‹._à¤¨à¥‹à¤­à¥‡._à¤¡à¤¿à¤¸à¥‡.".split("_"),
                weekdays: "à¤†à¤‡à¤¤à¤¬à¤¾à¤°_à¤¸à¥‹à¤®à¤¬à¤¾à¤°_à¤®à¤™à¥à¤—à¤²à¤¬à¤¾à¤°_à¤¬à¥à¤§à¤¬à¤¾à¤°_à¤¬à¤¿à¤¹à¤¿à¤¬à¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤¬à¤¾à¤°_à¤¶à¤¨à¤¿à¤¬à¤¾à¤°".split("_"),
                weekdaysShort: "à¤†à¤‡à¤¤._à¤¸à¥‹à¤®._à¤®à¤™à¥à¤—à¤²._à¤¬à¥à¤§._à¤¬à¤¿à¤¹à¤¿._à¤¶à¥à¤•à¥à¤°._à¤¶à¤¨à¤¿.".split("_"),
                weekdaysMin: "à¤†à¤‡._à¤¸à¥‹._à¤®à¤™à¥_à¤¬à¥._à¤¬à¤¿._à¤¶à¥._à¤¶.".split("_"),
                longDateFormat: {
                    LT: "Aà¤•à¥‹ h:mm à¤¬à¤œà¥‡",
                    LTS: "Aà¤•à¥‹ h:mm:ss à¤¬à¤œà¥‡",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                preparse: function(e) {
                    return e.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function(e) {
                        return a[e]
                    })
                },
                postformat: function(e) {
                    return e.replace(/\d/g, function(e) {
                        return t[e]
                    })
                },
                meridiemParse: /à¤°à¤¾à¤¤à¥€|à¤¬à¤¿à¤¹à¤¾à¤¨|à¤¦à¤¿à¤‰à¤à¤¸à¥‹|à¤¬à¥‡à¤²à¥à¤•à¤¾|à¤¸à¤¾à¤à¤|à¤°à¤¾à¤¤à¥€/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "à¤°à¤¾à¤¤à¥€" === t ? 3 > e ? e : e + 12 : "à¤¬à¤¿à¤¹à¤¾à¤¨" === t ? e : "à¤¦à¤¿à¤‰à¤à¤¸à¥‹" === t ? e >= 10 ? e : e + 12 : "à¤¬à¥‡à¤²à¥à¤•à¤¾" === t || "à¤¸à¤¾à¤à¤" === t ? e + 12 : void 0
                },
                meridiem: function(e) {
                    return 3 > e ? "à¤°à¤¾à¤¤à¥€" : 10 > e ? "à¤¬à¤¿à¤¹à¤¾à¤¨" : 15 > e ? "à¤¦à¤¿à¤‰à¤à¤¸à¥‹" : 18 > e ? "à¤¬à¥‡à¤²à¥à¤•à¤¾" : 20 > e ? "à¤¸à¤¾à¤à¤" : "à¤°à¤¾à¤¤à¥€"
                },
                calendar: {
                    sameDay: "[à¤†à¤œ] LT",
                    nextDay: "[à¤­à¥‹à¤²à¥€] LT",
                    nextWeek: "[à¤†à¤‰à¤à¤¦à¥‹] dddd[,] LT",
                    lastDay: "[à¤¹à¤¿à¤œà¥‹] LT",
                    lastWeek: "[à¤—à¤à¤•à¥‹] dddd[,] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%sà¤®à¤¾",
                    past: "%s à¤…à¤—à¤¾à¤¡à¥€",
                    s: "à¤•à¥‡à¤¹à¥€ à¤¸à¤®à¤¯",
                    m: "à¤à¤• à¤®à¤¿à¤¨à¥‡à¤Ÿ",
                    mm: "%d à¤®à¤¿à¤¨à¥‡à¤Ÿ",
                    h: "à¤à¤• à¤˜à¤£à¥à¤Ÿà¤¾",
                    hh: "%d à¤˜à¤£à¥à¤Ÿà¤¾",
                    d: "à¤à¤• à¤¦à¤¿à¤¨",
                    dd: "%d à¤¦à¤¿à¤¨",
                    M: "à¤à¤• à¤®à¤¹à¤¿à¤¨à¤¾",
                    MM: "%d à¤®à¤¹à¤¿à¤¨à¤¾",
                    y: "à¤à¤• à¤¬à¤°à¥à¤·",
                    yy: "%d à¤¬à¤°à¥à¤·"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
                a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_");
            return e.defineLocale("nl", {
                months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
                monthsShort: function(e, n) {
                    return /-MMM-/.test(n) ? a[e.month()] : t[e.month()]
                },
                weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
                weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
                weekdaysMin: "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD-MM-YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[vandaag om] LT",
                    nextDay: "[morgen om] LT",
                    nextWeek: "dddd [om] LT",
                    lastDay: "[gisteren om] LT",
                    lastWeek: "[afgelopen] dddd [om] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "over %s",
                    past: "%s geleden",
                    s: "een paar seconden",
                    m: "Ã©Ã©n minuut",
                    mm: "%d minuten",
                    h: "Ã©Ã©n uur",
                    hh: "%d uur",
                    d: "Ã©Ã©n dag",
                    dd: "%d dagen",
                    M: "Ã©Ã©n maand",
                    MM: "%d maanden",
                    y: "Ã©Ã©n jaar",
                    yy: "%d jaar"
                },
                ordinalParse: /\d{1,2}(ste|de)/,
                ordinal: function(e) {
                    return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("nn", {
                months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
                weekdays: "sundag_mÃ¥ndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
                weekdaysShort: "sun_mÃ¥n_tys_ons_tor_fre_lau".split("_"),
                weekdaysMin: "su_mÃ¥_ty_on_to_fr_lÃ¸".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[I dag klokka] LT",
                    nextDay: "[I morgon klokka] LT",
                    nextWeek: "dddd [klokka] LT",
                    lastDay: "[I gÃ¥r klokka] LT",
                    lastWeek: "[FÃ¸regÃ¥ande] dddd [klokka] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "om %s",
                    past: "for %s sidan",
                    s: "nokre sekund",
                    m: "eit minutt",
                    mm: "%d minutt",
                    h: "ein time",
                    hh: "%d timar",
                    d: "ein dag",
                    dd: "%d dagar",
                    M: "ein mÃ¥nad",
                    MM: "%d mÃ¥nader",
                    y: "eit Ã¥r",
                    yy: "%d Ã¥r"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e) {
                return 5 > e % 10 && e % 10 > 1 && ~~(e / 10) % 10 !== 1
            }

            function a(e, a, n) {
                var r = e + " ";
                switch (n) {
                    case "m":
                        return a ? "minuta" : "minutÄ™";
                    case "mm":
                        return r + (t(e) ? "minuty" : "minut");
                    case "h":
                        return a ? "godzina" : "godzinÄ™";
                    case "hh":
                        return r + (t(e) ? "godziny" : "godzin");
                    case "MM":
                        return r + (t(e) ? "miesiÄ…ce" : "miesiÄ™cy");
                    case "yy":
                        return r + (t(e) ? "lata" : "lat")
                }
            }
            var n = "styczeÅ„_luty_marzec_kwiecieÅ„_maj_czerwiec_lipiec_sierpieÅ„_wrzesieÅ„_paÅºdziernik_listopad_grudzieÅ„".split("_"),
                r = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅ›nia_paÅºdziernika_listopada_grudnia".split("_");
            return e.defineLocale("pl", {
                months: function(e, t) {
                    return /D MMMM/.test(t) ? r[e.month()] : n[e.month()]
                },
                monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru".split("_"),
                weekdays: "niedziela_poniedziaÅ‚ek_wtorek_Å›roda_czwartek_piÄ…tek_sobota".split("_"),
                weekdaysShort: "nie_pon_wt_Å›r_czw_pt_sb".split("_"),
                weekdaysMin: "N_Pn_Wt_Åšr_Cz_Pt_So".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[DziÅ› o] LT",
                    nextDay: "[Jutro o] LT",
                    nextWeek: "[W] dddd [o] LT",
                    lastDay: "[Wczoraj o] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[W zeszÅ‚Ä… niedzielÄ™ o] LT";
                            case 3:
                                return "[W zeszÅ‚Ä… Å›rodÄ™ o] LT";
                            case 6:
                                return "[W zeszÅ‚Ä… sobotÄ™ o] LT";
                            default:
                                return "[W zeszÅ‚y] dddd [o] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "%s temu",
                    s: "kilka sekund",
                    m: a,
                    mm: a,
                    h: a,
                    hh: a,
                    d: "1 dzieÅ„",
                    dd: "%d dni",
                    M: "miesiÄ…c",
                    MM: a,
                    y: "rok",
                    yy: a
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("pt-br", {
                months: "janeiro_fevereiro_marÃ§o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                weekdays: "domingo_segunda-feira_terÃ§a-feira_quarta-feira_quinta-feira_sexta-feira_sÃ¡bado".split("_"),
                weekdaysShort: "dom_seg_ter_qua_qui_sex_sÃ¡b".split("_"),
                weekdaysMin: "dom_2Âª_3Âª_4Âª_5Âª_6Âª_sÃ¡b".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D [de] MMMM [de] YYYY",
                    LLL: "D [de] MMMM [de] YYYY [Ã s] LT",
                    LLLL: "dddd, D [de] MMMM [de] YYYY [Ã s] LT"
                },
                calendar: {
                    sameDay: "[Hoje Ã s] LT",
                    nextDay: "[AmanhÃ£ Ã s] LT",
                    nextWeek: "dddd [Ã s] LT",
                    lastDay: "[Ontem Ã s] LT",
                    lastWeek: function() {
                        return 0 === this.day() || 6 === this.day() ? "[Ãšltimo] dddd [Ã s] LT" : "[Ãšltima] dddd [Ã s] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "em %s",
                    past: "%s atrÃ¡s",
                    s: "segundos",
                    m: "um minuto",
                    mm: "%d minutos",
                    h: "uma hora",
                    hh: "%d horas",
                    d: "um dia",
                    dd: "%d dias",
                    M: "um mÃªs",
                    MM: "%d meses",
                    y: "um ano",
                    yy: "%d anos"
                },
                ordinalParse: /\d{1,2}Âº/,
                ordinal: "%dÂº"
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("pt", {
                months: "janeiro_fevereiro_marÃ§o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                weekdays: "domingo_segunda-feira_terÃ§a-feira_quarta-feira_quinta-feira_sexta-feira_sÃ¡bado".split("_"),
                weekdaysShort: "dom_seg_ter_qua_qui_sex_sÃ¡b".split("_"),
                weekdaysMin: "dom_2Âª_3Âª_4Âª_5Âª_6Âª_sÃ¡b".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D [de] MMMM [de] YYYY",
                    LLL: "D [de] MMMM [de] YYYY LT",
                    LLLL: "dddd, D [de] MMMM [de] YYYY LT"
                },
                calendar: {
                    sameDay: "[Hoje Ã s] LT",
                    nextDay: "[AmanhÃ£ Ã s] LT",
                    nextWeek: "dddd [Ã s] LT",
                    lastDay: "[Ontem Ã s] LT",
                    lastWeek: function() {
                        return 0 === this.day() || 6 === this.day() ? "[Ãšltimo] dddd [Ã s] LT" : "[Ãšltima] dddd [Ã s] LT"
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "em %s",
                    past: "hÃ¡ %s",
                    s: "segundos",
                    m: "um minuto",
                    mm: "%d minutos",
                    h: "uma hora",
                    hh: "%d horas",
                    d: "um dia",
                    dd: "%d dias",
                    M: "um mÃªs",
                    MM: "%d meses",
                    y: "um ano",
                    yy: "%d anos"
                },
                ordinalParse: /\d{1,2}Âº/,
                ordinal: "%dÂº",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = {
                        mm: "minute",
                        hh: "ore",
                        dd: "zile",
                        MM: "luni",
                        yy: "ani"
                    },
                    r = " ";
                return (e % 100 >= 20 || e >= 100 && e % 100 === 0) && (r = " de "), e + r + n[a]
            }
            return e.defineLocale("ro", {
                months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
                monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
                weekdays: "duminicÄƒ_luni_marÈ›i_miercuri_joi_vineri_sÃ¢mbÄƒtÄƒ".split("_"),
                weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m".split("_"),
                weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_SÃ¢".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY H:mm",
                    LLLL: "dddd, D MMMM YYYY H:mm"
                },
                calendar: {
                    sameDay: "[azi la] LT",
                    nextDay: "[mÃ¢ine la] LT",
                    nextWeek: "dddd [la] LT",
                    lastDay: "[ieri la] LT",
                    lastWeek: "[fosta] dddd [la] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "peste %s",
                    past: "%s Ã®n urmÄƒ",
                    s: "cÃ¢teva secunde",
                    m: "un minut",
                    mm: t,
                    h: "o orÄƒ",
                    hh: t,
                    d: "o zi",
                    dd: t,
                    M: "o lunÄƒ",
                    MM: t,
                    y: "un an",
                    yy: t
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t) {
                var a = e.split("_");
                return t % 10 === 1 && t % 100 !== 11 ? a[0] : t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20) ? a[1] : a[2]
            }

            function a(e, a, n) {
                var r = {
                    mm: a ? "Ð¼Ð¸Ð½ÑƒÑ‚Ð°_Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹_Ð¼Ð¸Ð½ÑƒÑ‚" : "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ_Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹_Ð¼Ð¸Ð½ÑƒÑ‚",
                    hh: "Ñ‡Ð°Ñ_Ñ‡Ð°ÑÐ°_Ñ‡Ð°ÑÐ¾Ð²",
                    dd: "Ð´ÐµÐ½ÑŒ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹",
                    MM: "Ð¼ÐµÑÑÑ†_Ð¼ÐµÑÑÑ†Ð°_Ð¼ÐµÑÑÑ†ÐµÐ²",
                    yy: "Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ‚"
                };
                return "m" === n ? a ? "Ð¼Ð¸Ð½ÑƒÑ‚Ð°" : "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ" : e + " " + t(r[n], +e)
            }

            function n(e, t) {
                var a = {
                        nominative: "ÑÐ½Ð²Ð°Ñ€ÑŒ_Ñ„ÐµÐ²Ñ€Ð°Ð»ÑŒ_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»ÑŒ_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ_Ð¾ÐºÑ‚ÑÐ±Ñ€ÑŒ_Ð½Ð¾ÑÐ±Ñ€ÑŒ_Ð´ÐµÐºÐ°Ð±Ñ€ÑŒ".split("_"),
                        accusative: "ÑÐ½Ð²Ð°Ñ€Ñ_Ñ„ÐµÐ²Ñ€Ð°Ð»Ñ_Ð¼Ð°Ñ€Ñ‚Ð°_Ð°Ð¿Ñ€ÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑŽÐ½Ñ_Ð¸ÑŽÐ»Ñ_Ð°Ð²Ð³ÑƒÑÑ‚Ð°_ÑÐµÐ½Ñ‚ÑÐ±Ñ€Ñ_Ð¾ÐºÑ‚ÑÐ±Ñ€Ñ_Ð½Ð¾ÑÐ±Ñ€Ñ_Ð´ÐµÐºÐ°Ð±Ñ€Ñ".split("_")
                    },
                    n = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function r(e, t) {
                var a = {
                        nominative: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split("_"),
                        accusative: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ñ_Ð¸ÑŽÐ½Ñ_Ð¸ÑŽÐ»Ñ_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split("_")
                    },
                    n = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function s(e, t) {
                var a = {
                        nominative: "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³_Ð¿ÑÑ‚Ð½Ð¸Ñ†Ð°_ÑÑƒÐ±Ð±Ð¾Ñ‚Ð°".split("_"),
                        accusative: "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ñƒ_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³_Ð¿ÑÑ‚Ð½Ð¸Ñ†Ñƒ_ÑÑƒÐ±Ð±Ð¾Ñ‚Ñƒ".split("_")
                    },
                    n = /\[ ?[Ð’Ð²] ?(?:Ð¿Ñ€Ð¾ÑˆÐ»ÑƒÑŽ|ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÑƒÑŽ|ÑÑ‚Ñƒ)? ?\] ?dddd/.test(t) ? "accusative" : "nominative";
                return a[n][e.day()]
            }
            return e.defineLocale("ru", {
                months: n,
                monthsShort: r,
                weekdays: s,
                weekdaysShort: "Ð²Ñ_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
                weekdaysMin: "Ð²Ñ_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
                monthsParse: [/^ÑÐ½Ð²/i, /^Ñ„ÐµÐ²/i, /^Ð¼Ð°Ñ€/i, /^Ð°Ð¿Ñ€/i, /^Ð¼Ð°[Ð¹|Ñ]/i, /^Ð¸ÑŽÐ½/i, /^Ð¸ÑŽÐ»/i, /^Ð°Ð²Ð³/i, /^ÑÐµÐ½/i, /^Ð¾ÐºÑ‚/i, /^Ð½Ð¾Ñ/i, /^Ð´ÐµÐº/i],
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY Ð³.",
                    LLL: "D MMMM YYYY Ð³., LT",
                    LLLL: "dddd, D MMMM YYYY Ð³., LT"
                },
                calendar: {
                    sameDay: "[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ Ð²] LT",
                    nextDay: "[Ð—Ð°Ð²Ñ‚Ñ€Ð° Ð²] LT",
                    lastDay: "[Ð’Ñ‡ÐµÑ€Ð° Ð²] LT",
                    nextWeek: function() {
                        return 2 === this.day() ? "[Ð’Ð¾] dddd [Ð²] LT" : "[Ð’] dddd [Ð²] LT"
                    },
                    lastWeek: function(e) {
                        if (e.week() === this.week()) return 2 === this.day() ? "[Ð’Ð¾] dddd [Ð²] LT" : "[Ð’] dddd [Ð²] LT";
                        switch (this.day()) {
                            case 0:
                                return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ðµ] dddd [Ð²] LT";
                            case 1:
                            case 2:
                            case 4:
                                return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»Ñ‹Ð¹] dddd [Ð²] LT";
                            case 3:
                            case 5:
                            case 6:
                                return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»ÑƒÑŽ] dddd [Ð²] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ñ‡ÐµÑ€ÐµÐ· %s",
                    past: "%s Ð½Ð°Ð·Ð°Ð´",
                    s: "Ð½ÐµÑÐºÐ¾Ð»ÑŒÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´",
                    m: a,
                    mm: a,
                    h: "Ñ‡Ð°Ñ",
                    hh: a,
                    d: "Ð´ÐµÐ½ÑŒ",
                    dd: a,
                    M: "Ð¼ÐµÑÑÑ†",
                    MM: a,
                    y: "Ð³Ð¾Ð´",
                    yy: a
                },
                meridiemParse: /Ð½Ð¾Ñ‡Ð¸|ÑƒÑ‚Ñ€Ð°|Ð´Ð½Ñ|Ð²ÐµÑ‡ÐµÑ€Ð°/i,
                isPM: function(e) {
                    return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡ÐµÑ€Ð°)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "Ð½Ð¾Ñ‡Ð¸" : 12 > e ? "ÑƒÑ‚Ñ€Ð°" : 17 > e ? "Ð´Ð½Ñ" : "Ð²ÐµÑ‡ÐµÑ€Ð°"
                },
                ordinalParse: /\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                            return e + "-Ð¹";
                        case "D":
                            return e + "-Ð³Ð¾";
                        case "w":
                        case "W":
                            return e + "-Ñ";
                        default:
                            return e
                    }
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e) {
                return e > 1 && 5 > e
            }

            function a(e, a, n, r) {
                var s = e + " ";
                switch (n) {
                    case "s":
                        return a || r ? "pÃ¡r sekÃºnd" : "pÃ¡r sekundami";
                    case "m":
                        return a ? "minÃºta" : r ? "minÃºtu" : "minÃºtou";
                    case "mm":
                        return a || r ? s + (t(e) ? "minÃºty" : "minÃºt") : s + "minÃºtami";
                    case "h":
                        return a ? "hodina" : r ? "hodinu" : "hodinou";
                    case "hh":
                        return a || r ? s + (t(e) ? "hodiny" : "hodÃ­n") : s + "hodinami";
                    case "d":
                        return a || r ? "deÅˆ" : "dÅˆom";
                    case "dd":
                        return a || r ? s + (t(e) ? "dni" : "dnÃ­") : s + "dÅˆami";
                    case "M":
                        return a || r ? "mesiac" : "mesiacom";
                    case "MM":
                        return a || r ? s + (t(e) ? "mesiace" : "mesiacov") : s + "mesiacmi";
                    case "y":
                        return a || r ? "rok" : "rokom";
                    case "yy":
                        return a || r ? s + (t(e) ? "roky" : "rokov") : s + "rokmi"
                }
            }
            var n = "januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december".split("_"),
                r = "jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec".split("_");
            return e.defineLocale("sk", {
                months: n,
                monthsShort: r,
                monthsParse: function(e, t) {
                    var a, n = [];
                    for (a = 0; 12 > a; a++) n[a] = new RegExp("^" + e[a] + "$|^" + t[a] + "$", "i");
                    return n
                }(n, r),
                weekdays: "nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota".split("_"),
                weekdaysShort: "ne_po_ut_st_Å¡t_pi_so".split("_"),
                weekdaysMin: "ne_po_ut_st_Å¡t_pi_so".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[dnes o] LT",
                    nextDay: "[zajtra o] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[v nedeÄ¾u o] LT";
                            case 1:
                            case 2:
                                return "[v] dddd [o] LT";
                            case 3:
                                return "[v stredu o] LT";
                            case 4:
                                return "[vo Å¡tvrtok o] LT";
                            case 5:
                                return "[v piatok o] LT";
                            case 6:
                                return "[v sobotu o] LT"
                        }
                    },
                    lastDay: "[vÄera o] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[minulÃº nedeÄ¾u o] LT";
                            case 1:
                            case 2:
                                return "[minulÃ½] dddd [o] LT";
                            case 3:
                                return "[minulÃº stredu o] LT";
                            case 4:
                            case 5:
                                return "[minulÃ½] dddd [o] LT";
                            case 6:
                                return "[minulÃº sobotu o] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "pred %s",
                    s: a,
                    m: a,
                    mm: a,
                    h: a,
                    hh: a,
                    d: a,
                    dd: a,
                    M: a,
                    MM: a,
                    y: a,
                    yy: a
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t, a) {
                var n = e + " ";
                switch (a) {
                    case "m":
                        return t ? "ena minuta" : "eno minuto";
                    case "mm":
                        return n += 1 === e ? "minuta" : 2 === e ? "minuti" : 3 === e || 4 === e ? "minute" : "minut";
                    case "h":
                        return t ? "ena ura" : "eno uro";
                    case "hh":
                        return n += 1 === e ? "ura" : 2 === e ? "uri" : 3 === e || 4 === e ? "ure" : "ur";
                    case "dd":
                        return n += 1 === e ? "dan" : "dni";
                    case "MM":
                        return n += 1 === e ? "mesec" : 2 === e ? "meseca" : 3 === e || 4 === e ? "mesece" : "mesecev";
                    case "yy":
                        return n += 1 === e ? "leto" : 2 === e ? "leti" : 3 === e || 4 === e ? "leta" : "let"
                }
            }
            return e.defineLocale("sl", {
                months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
                monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
                weekdays: "nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota".split("_"),
                weekdaysShort: "ned._pon._tor._sre._Äet._pet._sob.".split("_"),
                weekdaysMin: "ne_po_to_sr_Äe_pe_so".split("_"),
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD. MM. YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[danes ob] LT",
                    nextDay: "[jutri ob] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[v] [nedeljo] [ob] LT";
                            case 3:
                                return "[v] [sredo] [ob] LT";
                            case 6:
                                return "[v] [soboto] [ob] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[v] dddd [ob] LT"
                        }
                    },
                    lastDay: "[vÄeraj ob] LT",
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                            case 6:
                                return "[prejÅ¡nja] dddd [ob] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[prejÅ¡nji] dddd [ob] LT"
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Äez %s",
                    past: "%s nazaj",
                    s: "nekaj sekund",
                    m: t,
                    mm: t,
                    h: t,
                    hh: t,
                    d: "en dan",
                    dd: t,
                    M: "en mesec",
                    MM: t,
                    y: "eno leto",
                    yy: t
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("sq", {
                months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_NÃ«ntor_Dhjetor".split("_"),
                monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_NÃ«n_Dhj".split("_"),
                weekdays: "E Diel_E HÃ«nÃ«_E MartÃ«_E MÃ«rkurÃ«_E Enjte_E Premte_E ShtunÃ«".split("_"),
                weekdaysShort: "Die_HÃ«n_Mar_MÃ«r_Enj_Pre_Sht".split("_"),
                weekdaysMin: "D_H_Ma_MÃ«_E_P_Sh".split("_"),
                meridiemParse: /PD|MD/,
                isPM: function(e) {
                    return "M" === e.charAt(0)
                },
                meridiem: function(e) {
                    return 12 > e ? "PD" : "MD"
                },
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Sot nÃ«] LT",
                    nextDay: "[NesÃ«r nÃ«] LT",
                    nextWeek: "dddd [nÃ«] LT",
                    lastDay: "[Dje nÃ«] LT",
                    lastWeek: "dddd [e kaluar nÃ«] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "nÃ« %s",
                    past: "%s mÃ« parÃ«",
                    s: "disa sekonda",
                    m: "njÃ« minutÃ«",
                    mm: "%d minuta",
                    h: "njÃ« orÃ«",
                    hh: "%d orÃ«",
                    d: "njÃ« ditÃ«",
                    dd: "%d ditÃ«",
                    M: "njÃ« muaj",
                    MM: "%d muaj",
                    y: "njÃ« vit",
                    yy: "%d vite"
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                words: {
                    m: ["Ñ˜ÐµÐ´Ð°Ð½ Ð¼Ð¸Ð½ÑƒÑ‚", "Ñ˜ÐµÐ´Ð½Ðµ Ð¼Ð¸Ð½ÑƒÑ‚Ðµ"],
                    mm: ["Ð¼Ð¸Ð½ÑƒÑ‚", "Ð¼Ð¸Ð½ÑƒÑ‚Ðµ", "Ð¼Ð¸Ð½ÑƒÑ‚Ð°"],
                    h: ["Ñ˜ÐµÐ´Ð°Ð½ ÑÐ°Ñ‚", "Ñ˜ÐµÐ´Ð½Ð¾Ð³ ÑÐ°Ñ‚Ð°"],
                    hh: ["ÑÐ°Ñ‚", "ÑÐ°Ñ‚Ð°", "ÑÐ°Ñ‚Ð¸"],
                    dd: ["Ð´Ð°Ð½", "Ð´Ð°Ð½Ð°", "Ð´Ð°Ð½Ð°"],
                    MM: ["Ð¼ÐµÑÐµÑ†", "Ð¼ÐµÑÐµÑ†Ð°", "Ð¼ÐµÑÐµÑ†Ð¸"],
                    yy: ["Ð³Ð¾Ð´Ð¸Ð½Ð°", "Ð³Ð¾Ð´Ð¸Ð½Ðµ", "Ð³Ð¾Ð´Ð¸Ð½Ð°"]
                },
                correctGrammaticalCase: function(e, t) {
                    return 1 === e ? t[0] : e >= 2 && 4 >= e ? t[1] : t[2]
                },
                translate: function(e, a, n) {
                    var r = t.words[n];
                    return 1 === n.length ? a ? r[0] : r[1] : e + " " + t.correctGrammaticalCase(e, r)
                }
            };
            return e.defineLocale("sr-cyrl", {
                months: ["Ñ˜Ð°Ð½ÑƒÐ°Ñ€", "Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€", "Ð¼Ð°Ñ€Ñ‚", "Ð°Ð¿Ñ€Ð¸Ð»", "Ð¼Ð°Ñ˜", "Ñ˜ÑƒÐ½", "Ñ˜ÑƒÐ»", "Ð°Ð²Ð³ÑƒÑÑ‚", "ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ð°Ñ€", "Ð¾ÐºÑ‚Ð¾Ð±Ð°Ñ€", "Ð½Ð¾Ð²ÐµÐ¼Ð±Ð°Ñ€", "Ð´ÐµÑ†ÐµÐ¼Ð±Ð°Ñ€"],
                monthsShort: ["Ñ˜Ð°Ð½.", "Ñ„ÐµÐ±.", "Ð¼Ð°Ñ€.", "Ð°Ð¿Ñ€.", "Ð¼Ð°Ñ˜", "Ñ˜ÑƒÐ½", "Ñ˜ÑƒÐ»", "Ð°Ð²Ð³.", "ÑÐµÐ¿.", "Ð¾ÐºÑ‚.", "Ð½Ð¾Ð².", "Ð´ÐµÑ†."],
                weekdays: ["Ð½ÐµÐ´ÐµÑ™Ð°", "Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™Ð°Ðº", "ÑƒÑ‚Ð¾Ñ€Ð°Ðº", "ÑÑ€ÐµÐ´Ð°", "Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð°Ðº", "Ð¿ÐµÑ‚Ð°Ðº", "ÑÑƒÐ±Ð¾Ñ‚Ð°"],
                weekdaysShort: ["Ð½ÐµÐ´.", "Ð¿Ð¾Ð½.", "ÑƒÑ‚Ð¾.", "ÑÑ€Ðµ.", "Ñ‡ÐµÑ‚.", "Ð¿ÐµÑ‚.", "ÑÑƒÐ±."],
                weekdaysMin: ["Ð½Ðµ", "Ð¿Ð¾", "ÑƒÑ‚", "ÑÑ€", "Ñ‡Ðµ", "Ð¿Ðµ", "ÑÑƒ"],
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD. MM. YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Ð´Ð°Ð½Ð°Ñ Ñƒ] LT",
                    nextDay: "[ÑÑƒÑ‚Ñ€Ð° Ñƒ] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[Ñƒ] [Ð½ÐµÐ´ÐµÑ™Ñƒ] [Ñƒ] LT";
                            case 3:
                                return "[Ñƒ] [ÑÑ€ÐµÐ´Ñƒ] [Ñƒ] LT";
                            case 6:
                                return "[Ñƒ] [ÑÑƒÐ±Ð¾Ñ‚Ñƒ] [Ñƒ] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[Ñƒ] dddd [Ñƒ] LT"
                        }
                    },
                    lastDay: "[Ñ˜ÑƒÑ‡Ðµ Ñƒ] LT",
                    lastWeek: function() {
                        var e = ["[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [Ð½ÐµÐ´ÐµÑ™Ðµ] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™ÐºÐ°] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [ÑƒÑ‚Ð¾Ñ€ÐºÐ°] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [ÑÑ€ÐµÐ´Ðµ] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚ÐºÐ°] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ð¿ÐµÑ‚ÐºÐ°] [Ñƒ] LT", "[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [ÑÑƒÐ±Ð¾Ñ‚Ðµ] [Ñƒ] LT"];
                        return e[this.day()]
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ð·Ð° %s",
                    past: "Ð¿Ñ€Ðµ %s",
                    s: "Ð½ÐµÐºÐ¾Ð»Ð¸ÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                    m: t.translate,
                    mm: t.translate,
                    h: t.translate,
                    hh: t.translate,
                    d: "Ð´Ð°Ð½",
                    dd: t.translate,
                    M: "Ð¼ÐµÑÐµÑ†",
                    MM: t.translate,
                    y: "Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
                    yy: t.translate
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                words: {
                    m: ["jedan minut", "jedne minute"],
                    mm: ["minut", "minute", "minuta"],
                    h: ["jedan sat", "jednog sata"],
                    hh: ["sat", "sata", "sati"],
                    dd: ["dan", "dana", "dana"],
                    MM: ["mesec", "meseca", "meseci"],
                    yy: ["godina", "godine", "godina"]
                },
                correctGrammaticalCase: function(e, t) {
                    return 1 === e ? t[0] : e >= 2 && 4 >= e ? t[1] : t[2]
                },
                translate: function(e, a, n) {
                    var r = t.words[n];
                    return 1 === n.length ? a ? r[0] : r[1] : e + " " + t.correctGrammaticalCase(e, r)
                }
            };
            return e.defineLocale("sr", {
                months: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"],
                monthsShort: ["jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec."],
                weekdays: ["nedelja", "ponedeljak", "utorak", "sreda", "Äetvrtak", "petak", "subota"],
                weekdaysShort: ["ned.", "pon.", "uto.", "sre.", "Äet.", "pet.", "sub."],
                weekdaysMin: ["ne", "po", "ut", "sr", "Äe", "pe", "su"],
                longDateFormat: {
                    LT: "H:mm",
                    LTS: "LT:ss",
                    L: "DD. MM. YYYY",
                    LL: "D. MMMM YYYY",
                    LLL: "D. MMMM YYYY LT",
                    LLLL: "dddd, D. MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[danas u] LT",
                    nextDay: "[sutra u] LT",
                    nextWeek: function() {
                        switch (this.day()) {
                            case 0:
                                return "[u] [nedelju] [u] LT";
                            case 3:
                                return "[u] [sredu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                        }
                    },
                    lastDay: "[juÄe u] LT",
                    lastWeek: function() {
                        var e = ["[proÅ¡le] [nedelje] [u] LT", "[proÅ¡log] [ponedeljka] [u] LT", "[proÅ¡log] [utorka] [u] LT", "[proÅ¡le] [srede] [u] LT", "[proÅ¡log] [Äetvrtka] [u] LT", "[proÅ¡log] [petka] [u] LT", "[proÅ¡le] [subote] [u] LT"];
                        return e[this.day()]
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "za %s",
                    past: "pre %s",
                    s: "nekoliko sekundi",
                    m: t.translate,
                    mm: t.translate,
                    h: t.translate,
                    hh: t.translate,
                    d: "dan",
                    dd: t.translate,
                    M: "mesec",
                    MM: t.translate,
                    y: "godinu",
                    yy: t.translate
                },
                ordinalParse: /\d{1,2}\./,
                ordinal: "%d.",
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("sv", {
                months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
                monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                weekdays: "sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag".split("_"),
                weekdaysShort: "sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r".split("_"),
                weekdaysMin: "sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "YYYY-MM-DD",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[Idag] LT",
                    nextDay: "[Imorgon] LT",
                    lastDay: "[IgÃ¥r] LT",
                    nextWeek: "dddd LT",
                    lastWeek: "[FÃ¶rra] dddd[en] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "om %s",
                    past: "fÃ¶r %s sedan",
                    s: "nÃ¥gra sekunder",
                    m: "en minut",
                    mm: "%d minuter",
                    h: "en timme",
                    hh: "%d timmar",
                    d: "en dag",
                    dd: "%d dagar",
                    M: "en mÃ¥nad",
                    MM: "%d mÃ¥nader",
                    y: "ett Ã¥r",
                    yy: "%d Ã¥r"
                },
                ordinalParse: /\d{1,2}(e|a)/,
                ordinal: function(e) {
                    var t = e % 10,
                        a = 1 === ~~(e % 100 / 10) ? "e" : 1 === t ? "a" : 2 === t ? "a" : "e";
                    return e + a
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("ta", {
                months: "à®œà®©à®µà®°à®¿_à®ªà®¿à®ªà¯à®°à®µà®°à®¿_à®®à®¾à®°à¯à®šà¯_à®à®ªà¯à®°à®²à¯_à®®à¯‡_à®œà¯‚à®©à¯_à®œà¯‚à®²à¯ˆ_à®†à®•à®¸à¯à®Ÿà¯_à®šà¯†à®ªà¯à®Ÿà¯†à®®à¯à®ªà®°à¯_à®…à®•à¯à®Ÿà¯‡à®¾à®ªà®°à¯_à®¨à®µà®®à¯à®ªà®°à¯_à®Ÿà®¿à®šà®®à¯à®ªà®°à¯".split("_"),
                monthsShort: "à®œà®©à®µà®°à®¿_à®ªà®¿à®ªà¯à®°à®µà®°à®¿_à®®à®¾à®°à¯à®šà¯_à®à®ªà¯à®°à®²à¯_à®®à¯‡_à®œà¯‚à®©à¯_à®œà¯‚à®²à¯ˆ_à®†à®•à®¸à¯à®Ÿà¯_à®šà¯†à®ªà¯à®Ÿà¯†à®®à¯à®ªà®°à¯_à®…à®•à¯à®Ÿà¯‡à®¾à®ªà®°à¯_à®¨à®µà®®à¯à®ªà®°à¯_à®Ÿà®¿à®šà®®à¯à®ªà®°à¯".split("_"),
                weekdays: "à®žà®¾à®¯à®¿à®±à¯à®±à¯à®•à¯à®•à®¿à®´à®®à¯ˆ_à®¤à®¿à®™à¯à®•à®Ÿà¯à®•à®¿à®´à®®à¯ˆ_à®šà¯†à®µà¯à®µà®¾à®¯à¯à®•à®¿à®´à®®à¯ˆ_à®ªà¯à®¤à®©à¯à®•à®¿à®´à®®à¯ˆ_à®µà®¿à®¯à®¾à®´à®•à¯à®•à®¿à®´à®®à¯ˆ_à®µà¯†à®³à¯à®³à®¿à®•à¯à®•à®¿à®´à®®à¯ˆ_à®šà®©à®¿à®•à¯à®•à®¿à®´à®®à¯ˆ".split("_"),
                weekdaysShort: "à®žà®¾à®¯à®¿à®±à¯_à®¤à®¿à®™à¯à®•à®³à¯_à®šà¯†à®µà¯à®µà®¾à®¯à¯_à®ªà¯à®¤à®©à¯_à®µà®¿à®¯à®¾à®´à®©à¯_à®µà¯†à®³à¯à®³à®¿_à®šà®©à®¿".split("_"),
                weekdaysMin: "à®žà®¾_à®¤à®¿_à®šà¯†_à®ªà¯_à®µà®¿_à®µà¯†_à®š".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY, LT",
                    LLLL: "dddd, D MMMM YYYY, LT"
                },
                calendar: {
                    sameDay: "[à®‡à®©à¯à®±à¯] LT",
                    nextDay: "[à®¨à®¾à®³à¯ˆ] LT",
                    nextWeek: "dddd, LT",
                    lastDay: "[à®¨à¯‡à®±à¯à®±à¯] LT",
                    lastWeek: "[à®•à®Ÿà®¨à¯à®¤ à®µà®¾à®°à®®à¯] dddd, LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s à®‡à®²à¯",
                    past: "%s à®®à¯à®©à¯",
                    s: "à®’à®°à¯ à®šà®¿à®² à®µà®¿à®¨à®¾à®Ÿà®¿à®•à®³à¯",
                    m: "à®’à®°à¯ à®¨à®¿à®®à®¿à®Ÿà®®à¯",
                    mm: "%d à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯",
                    h: "à®’à®°à¯ à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
                    hh: "%d à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
                    d: "à®’à®°à¯ à®¨à®¾à®³à¯",
                    dd: "%d à®¨à®¾à®Ÿà¯à®•à®³à¯",
                    M: "à®’à®°à¯ à®®à®¾à®¤à®®à¯",
                    MM: "%d à®®à®¾à®¤à®™à¯à®•à®³à¯",
                    y: "à®’à®°à¯ à®µà®°à¯à®Ÿà®®à¯",
                    yy: "%d à®†à®£à¯à®Ÿà¯à®•à®³à¯"
                },
                ordinalParse: /\d{1,2}à®µà®¤à¯/,
                ordinal: function(e) {
                    return e + "à®µà®¤à¯"
                },
                meridiemParse: /à®¯à®¾à®®à®®à¯|à®µà¯ˆà®•à®±à¯ˆ|à®•à®¾à®²à¯ˆ|à®¨à®£à¯à®ªà®•à®²à¯|à®Žà®±à¯à®ªà®¾à®Ÿà¯|à®®à®¾à®²à¯ˆ/,
                meridiem: function(e) {
                    return 2 > e ? " à®¯à®¾à®®à®®à¯" : 6 > e ? " à®µà¯ˆà®•à®±à¯ˆ" : 10 > e ? " à®•à®¾à®²à¯ˆ" : 14 > e ? " à®¨à®£à¯à®ªà®•à®²à¯" : 18 > e ? " à®Žà®±à¯à®ªà®¾à®Ÿà¯" : 22 > e ? " à®®à®¾à®²à¯ˆ" : " à®¯à®¾à®®à®®à¯"
                },
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "à®¯à®¾à®®à®®à¯" === t ? 2 > e ? e : e + 12 : "à®µà¯ˆà®•à®±à¯ˆ" === t || "à®•à®¾à®²à¯ˆ" === t ? e : "à®¨à®£à¯à®ªà®•à®²à¯" === t && e >= 10 ? e : e + 12
                },
                week: {
                    dow: 0,
                    doy: 6
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("th", {
                months: "à¸¡à¸à¸£à¸²à¸„à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸žà¸±à¸™à¸˜à¹Œ_à¸¡à¸µà¸™à¸²à¸„à¸¡_à¹€à¸¡à¸©à¸²à¸¢à¸™_à¸žà¸¤à¸©à¸ à¸²à¸„à¸¡_à¸¡à¸´à¸–à¸¸à¸™à¸²à¸¢à¸™_à¸à¸£à¸à¸Žà¸²à¸„à¸¡_à¸ªà¸´à¸‡à¸«à¸²à¸„à¸¡_à¸à¸±à¸™à¸¢à¸²à¸¢à¸™_à¸•à¸¸à¸¥à¸²à¸„à¸¡_à¸žà¸¤à¸¨à¸ˆà¸´à¸à¸²à¸¢à¸™_à¸˜à¸±à¸™à¸§à¸²à¸„à¸¡".split("_"),
                monthsShort: "à¸¡à¸à¸£à¸²_à¸à¸¸à¸¡à¸ à¸²_à¸¡à¸µà¸™à¸²_à¹€à¸¡à¸©à¸²_à¸žà¸¤à¸©à¸ à¸²_à¸¡à¸´à¸–à¸¸à¸™à¸²_à¸à¸£à¸à¸Žà¸²_à¸ªà¸´à¸‡à¸«à¸²_à¸à¸±à¸™à¸¢à¸²_à¸•à¸¸à¸¥à¸²_à¸žà¸¤à¸¨à¸ˆà¸´à¸à¸²_à¸˜à¸±à¸™à¸§à¸²".split("_"),
                weekdays: "à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ_à¸ˆà¸±à¸™à¸—à¸£à¹Œ_à¸­à¸±à¸‡à¸„à¸²à¸£_à¸žà¸¸à¸˜_à¸žà¸¤à¸«à¸±à¸ªà¸šà¸”à¸µ_à¸¨à¸¸à¸à¸£à¹Œ_à¹€à¸ªà¸²à¸£à¹Œ".split("_"),
                weekdaysShort: "à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ_à¸ˆà¸±à¸™à¸—à¸£à¹Œ_à¸­à¸±à¸‡à¸„à¸²à¸£_à¸žà¸¸à¸˜_à¸žà¸¤à¸«à¸±à¸ª_à¸¨à¸¸à¸à¸£à¹Œ_à¹€à¸ªà¸²à¸£à¹Œ".split("_"),
                weekdaysMin: "à¸­à¸²._à¸ˆ._à¸­._à¸ž._à¸žà¸¤._à¸¨._à¸ª.".split("_"),
                longDateFormat: {
                    LT: "H à¸™à¸²à¸¬à¸´à¸à¸² m à¸™à¸²à¸—à¸µ",
                    LTS: "LT s à¸§à¸´à¸™à¸²à¸—à¸µ",
                    L: "YYYY/MM/DD",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY à¹€à¸§à¸¥à¸² LT",
                    LLLL: "à¸§à¸±à¸™ddddà¸—à¸µà¹ˆ D MMMM YYYY à¹€à¸§à¸¥à¸² LT"
                },
                meridiemParse: /à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡|à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡/,
                isPM: function(e) {
                    return "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡" === e
                },
                meridiem: function(e) {
                    return 12 > e ? "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡" : "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡"
                },
                calendar: {
                    sameDay: "[à¸§à¸±à¸™à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                    nextDay: "[à¸žà¸£à¸¸à¹ˆà¸‡à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                    nextWeek: "dddd[à¸«à¸™à¹‰à¸² à¹€à¸§à¸¥à¸²] LT",
                    lastDay: "[à¹€à¸¡à¸·à¹ˆà¸­à¸§à¸²à¸™à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                    lastWeek: "[à¸§à¸±à¸™]dddd[à¸—à¸µà¹ˆà¹à¸¥à¹‰à¸§ à¹€à¸§à¸¥à¸²] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "à¸­à¸µà¸ %s",
                    past: "%sà¸—à¸µà¹ˆà¹à¸¥à¹‰à¸§",
                    s: "à¹„à¸¡à¹ˆà¸à¸µà¹ˆà¸§à¸´à¸™à¸²à¸—à¸µ",
                    m: "1 à¸™à¸²à¸—à¸µ",
                    mm: "%d à¸™à¸²à¸—à¸µ",
                    h: "1 à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
                    hh: "%d à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
                    d: "1 à¸§à¸±à¸™",
                    dd: "%d à¸§à¸±à¸™",
                    M: "1 à¹€à¸”à¸·à¸­à¸™",
                    MM: "%d à¹€à¸”à¸·à¸­à¸™",
                    y: "1 à¸›à¸µ",
                    yy: "%d à¸›à¸µ"
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("tl-ph", {
                months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
                monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
                weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
                weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
                weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "MM/D/YYYY",
                    LL: "MMMM D, YYYY",
                    LLL: "MMMM D, YYYY LT",
                    LLLL: "dddd, MMMM DD, YYYY LT"
                },
                calendar: {
                    sameDay: "[Ngayon sa] LT",
                    nextDay: "[Bukas sa] LT",
                    nextWeek: "dddd [sa] LT",
                    lastDay: "[Kahapon sa] LT",
                    lastWeek: "dddd [huling linggo] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "sa loob ng %s",
                    past: "%s ang nakalipas",
                    s: "ilang segundo",
                    m: "isang minuto",
                    mm: "%d minuto",
                    h: "isang oras",
                    hh: "%d oras",
                    d: "isang araw",
                    dd: "%d araw",
                    M: "isang buwan",
                    MM: "%d buwan",
                    y: "isang taon",
                    yy: "%d taon"
                },
                ordinalParse: /\d{1,2}/,
                ordinal: function(e) {
                    return e
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            var t = {
                1: "'inci",
                5: "'inci",
                8: "'inci",
                70: "'inci",
                80: "'inci",
                2: "'nci",
                7: "'nci",
                20: "'nci",
                50: "'nci",
                3: "'Ã¼ncÃ¼",
                4: "'Ã¼ncÃ¼",
                100: "'Ã¼ncÃ¼",
                6: "'ncÄ±",
                9: "'uncu",
                10: "'uncu",
                30: "'uncu",
                60: "'Ä±ncÄ±",
                90: "'Ä±ncÄ±"
            };
            return e.defineLocale("tr", {
                months: "Ocak_Åžubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄŸustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k".split("_"),
                monthsShort: "Oca_Åžub_Mar_Nis_May_Haz_Tem_AÄŸu_Eyl_Eki_Kas_Ara".split("_"),
                weekdays: "Pazar_Pazartesi_SalÄ±_Ã‡arÅŸamba_PerÅŸembe_Cuma_Cumartesi".split("_"),
                weekdaysShort: "Paz_Pts_Sal_Ã‡ar_Per_Cum_Cts".split("_"),
                weekdaysMin: "Pz_Pt_Sa_Ã‡a_Pe_Cu_Ct".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd, D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[bugÃ¼n saat] LT",
                    nextDay: "[yarÄ±n saat] LT",
                    nextWeek: "[haftaya] dddd [saat] LT",
                    lastDay: "[dÃ¼n] LT",
                    lastWeek: "[geÃ§en hafta] dddd [saat] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s sonra",
                    past: "%s Ã¶nce",
                    s: "birkaÃ§ saniye",
                    m: "bir dakika",
                    mm: "%d dakika",
                    h: "bir saat",
                    hh: "%d saat",
                    d: "bir gÃ¼n",
                    dd: "%d gÃ¼n",
                    M: "bir ay",
                    MM: "%d ay",
                    y: "bir yÄ±l",
                    yy: "%d yÄ±l"
                },
                ordinalParse: /\d{1,2}'(inci|nci|Ã¼ncÃ¼|ncÄ±|uncu|Ä±ncÄ±)/,
                ordinal: function(e) {
                    if (0 === e) return e + "'Ä±ncÄ±";
                    var a = e % 10,
                        n = e % 100 - a,
                        r = e >= 100 ? 100 : null;
                    return e + (t[a] || t[n] || t[r])
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("tzm-latn", {
                months: "innayr_brË¤ayrË¤_marË¤sË¤_ibrir_mayyw_ywnyw_ywlywz_É£wÅ¡t_Å¡wtanbir_ktË¤wbrË¤_nwwanbir_dwjnbir".split("_"),
                monthsShort: "innayr_brË¤ayrË¤_marË¤sË¤_ibrir_mayyw_ywnyw_ywlywz_É£wÅ¡t_Å¡wtanbir_ktË¤wbrË¤_nwwanbir_dwjnbir".split("_"),
                weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split("_"),
                weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split("_"),
                weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[asdkh g] LT",
                    nextDay: "[aska g] LT",
                    nextWeek: "dddd [g] LT",
                    lastDay: "[assant g] LT",
                    lastWeek: "dddd [g] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "dadkh s yan %s",
                    past: "yan %s",
                    s: "imik",
                    m: "minuá¸",
                    mm: "%d minuá¸",
                    h: "saÉ›a",
                    hh: "%d tassaÉ›in",
                    d: "ass",
                    dd: "%d ossan",
                    M: "ayowr",
                    MM: "%d iyyirn",
                    y: "asgas",
                    yy: "%d isgasn"
                },
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("tzm", {
                months: "âµ‰âµâµâ´°âµ¢âµ”_â´±âµ•â´°âµ¢âµ•_âµŽâ´°âµ•âµš_âµ‰â´±âµ”âµ‰âµ”_âµŽâ´°âµ¢âµ¢âµ“_âµ¢âµ“âµâµ¢âµ“_âµ¢âµ“âµâµ¢âµ“âµ£_âµ–âµ“âµ›âµœ_âµ›âµ“âµœâ´°âµâ´±âµ‰âµ”_â´½âµŸâµ“â´±âµ•_âµâµ“âµ¡â´°âµâ´±âµ‰âµ”_â´·âµ“âµŠâµâ´±âµ‰âµ”".split("_"),
                monthsShort: "âµ‰âµâµâ´°âµ¢âµ”_â´±âµ•â´°âµ¢âµ•_âµŽâ´°âµ•âµš_âµ‰â´±âµ”âµ‰âµ”_âµŽâ´°âµ¢âµ¢âµ“_âµ¢âµ“âµâµ¢âµ“_âµ¢âµ“âµâµ¢âµ“âµ£_âµ–âµ“âµ›âµœ_âµ›âµ“âµœâ´°âµâ´±âµ‰âµ”_â´½âµŸâµ“â´±âµ•_âµâµ“âµ¡â´°âµâ´±âµ‰âµ”_â´·âµ“âµŠâµâ´±âµ‰âµ”".split("_"),
                weekdays: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split("_"),
                weekdaysShort: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split("_"),
                weekdaysMin: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "dddd D MMMM YYYY LT"
                },
                calendar: {
                    sameDay: "[â´°âµ™â´·âµ… â´´] LT",
                    nextDay: "[â´°âµ™â´½â´° â´´] LT",
                    nextWeek: "dddd [â´´] LT",
                    lastDay: "[â´°âµšâ´°âµâµœ â´´] LT",
                    lastWeek: "dddd [â´´] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "â´·â´°â´·âµ… âµ™ âµ¢â´°âµ %s",
                    past: "âµ¢â´°âµ %s",
                    s: "âµ‰âµŽâµ‰â´½",
                    m: "âµŽâµ‰âµâµ“â´º",
                    mm: "%d âµŽâµ‰âµâµ“â´º",
                    h: "âµ™â´°âµ„â´°",
                    hh: "%d âµœâ´°âµ™âµ™â´°âµ„âµ‰âµ",
                    d: "â´°âµ™âµ™",
                    dd: "%d oâµ™âµ™â´°âµ",
                    M: "â´°âµ¢oâµ“âµ”",
                    MM: "%d âµ‰âµ¢âµ¢âµ‰âµ”âµ",
                    y: "â´°âµ™â´³â´°âµ™",
                    yy: "%d âµ‰âµ™â´³â´°âµ™âµ"
                },
                week: {
                    dow: 6,
                    doy: 12
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            function t(e, t) {
                var a = e.split("_");
                return t % 10 === 1 && t % 100 !== 11 ? a[0] : t % 10 >= 2 && 4 >= t % 10 && (10 > t % 100 || t % 100 >= 20) ? a[1] : a[2]
            }

            function a(e, a, n) {
                var r = {
                    mm: "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð°_Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸_Ñ…Ð²Ð¸Ð»Ð¸Ð½",
                    hh: "Ð³Ð¾Ð´Ð¸Ð½Ð°_Ð³Ð¾Ð´Ð¸Ð½Ð¸_Ð³Ð¾Ð´Ð¸Ð½",
                    dd: "Ð´ÐµÐ½ÑŒ_Ð´Ð½Ñ–_Ð´Ð½Ñ–Ð²",
                    MM: "Ð¼Ñ–ÑÑÑ†ÑŒ_Ð¼Ñ–ÑÑÑ†Ñ–_Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
                    yy: "Ñ€Ñ–Ðº_Ñ€Ð¾ÐºÐ¸_Ñ€Ð¾ÐºÑ–Ð²"
                };
                return "m" === n ? a ? "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð°" : "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ" : "h" === n ? a ? "Ð³Ð¾Ð´Ð¸Ð½Ð°" : "Ð³Ð¾Ð´Ð¸Ð½Ñƒ" : e + " " + t(r[n], +e)
            }

            function n(e, t) {
                var a = {
                        nominative: "ÑÑ–Ñ‡ÐµÐ½ÑŒ_Ð»ÑŽÑ‚Ð¸Ð¹_Ð±ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ_ÐºÐ²Ñ–Ñ‚ÐµÐ½ÑŒ_Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ_Ñ‡ÐµÑ€Ð²ÐµÐ½ÑŒ_Ð»Ð¸Ð¿ÐµÐ½ÑŒ_ÑÐµÑ€Ð¿ÐµÐ½ÑŒ_Ð²ÐµÑ€ÐµÑÐµÐ½ÑŒ_Ð¶Ð¾Ð²Ñ‚ÐµÐ½ÑŒ_Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´_Ð³Ñ€ÑƒÐ´ÐµÐ½ÑŒ".split("_"),
                        accusative: "ÑÑ–Ñ‡Ð½Ñ_Ð»ÑŽÑ‚Ð¾Ð³Ð¾_Ð±ÐµÑ€ÐµÐ·Ð½Ñ_ÐºÐ²Ñ–Ñ‚Ð½Ñ_Ñ‚Ñ€Ð°Ð²Ð½Ñ_Ñ‡ÐµÑ€Ð²Ð½Ñ_Ð»Ð¸Ð¿Ð½Ñ_ÑÐµÑ€Ð¿Ð½Ñ_Ð²ÐµÑ€ÐµÑÐ½Ñ_Ð¶Ð¾Ð²Ñ‚Ð½Ñ_Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´Ð°_Ð³Ñ€ÑƒÐ´Ð½Ñ".split("_")
                    },
                    n = /D[oD]? *MMMM?/.test(t) ? "accusative" : "nominative";
                return a[n][e.month()]
            }

            function r(e, t) {
                var a = {
                        nominative: "Ð½ÐµÐ´Ñ–Ð»Ñ_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº_ÑÐµÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÐµÑ€_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†Ñ_ÑÑƒÐ±Ð¾Ñ‚Ð°".split("_"),
                        accusative: "Ð½ÐµÐ´Ñ–Ð»ÑŽ_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº_ÑÐµÑ€ÐµÐ´Ñƒ_Ñ‡ÐµÑ‚Ð²ÐµÑ€_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†ÑŽ_ÑÑƒÐ±Ð¾Ñ‚Ñƒ".split("_"),
                        genitive: "Ð½ÐµÐ´Ñ–Ð»Ñ–_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»ÐºÐ°_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€ÐºÐ°_ÑÐµÑ€ÐµÐ´Ð¸_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³Ð°_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†Ñ–_ÑÑƒÐ±Ð¾Ñ‚Ð¸".split("_")
                    },
                    n = /(\[[Ð’Ð²Ð£Ñƒ]\]) ?dddd/.test(t) ? "accusative" : /\[?(?:Ð¼Ð¸Ð½ÑƒÐ»Ð¾Ñ—|Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½Ð¾Ñ—)? ?\] ?dddd/.test(t) ? "genitive" : "nominative";
                return a[n][e.day()]
            }

            function s(e) {
                return function() {
                    return e + "Ð¾" + (11 === this.hours() ? "Ð±" : "") + "] LT"
                }
            }
            return e.defineLocale("uk", {
                months: n,
                monthsShort: "ÑÑ–Ñ‡_Ð»ÑŽÑ‚_Ð±ÐµÑ€_ÐºÐ²Ñ–Ñ‚_Ñ‚Ñ€Ð°Ð²_Ñ‡ÐµÑ€Ð²_Ð»Ð¸Ð¿_ÑÐµÑ€Ð¿_Ð²ÐµÑ€_Ð¶Ð¾Ð²Ñ‚_Ð»Ð¸ÑÑ‚_Ð³Ñ€ÑƒÐ´".split("_"),
                weekdays: r,
                weekdaysShort: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
                weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD.MM.YYYY",
                    LL: "D MMMM YYYY Ñ€.",
                    LLL: "D MMMM YYYY Ñ€., LT",
                    LLLL: "dddd, D MMMM YYYY Ñ€., LT"
                },
                calendar: {
                    sameDay: s("[Ð¡ÑŒÐ¾Ð³Ð¾Ð´Ð½Ñ– "),
                    nextDay: s("[Ð—Ð°Ð²Ñ‚Ñ€Ð° "),
                    lastDay: s("[Ð’Ñ‡Ð¾Ñ€Ð° "),
                    nextWeek: s("[Ð£] dddd ["),
                    lastWeek: function() {
                        switch (this.day()) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return s("[ÐœÐ¸Ð½ÑƒÐ»Ð¾Ñ—] dddd [").call(this);
                            case 1:
                            case 2:
                            case 4:
                                return s("[ÐœÐ¸Ð½ÑƒÐ»Ð¾Ð³Ð¾] dddd [").call(this)
                        }
                    },
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ð·Ð° %s",
                    past: "%s Ñ‚Ð¾Ð¼Ñƒ",
                    s: "Ð´ÐµÐºÑ–Ð»ÑŒÐºÐ° ÑÐµÐºÑƒÐ½Ð´",
                    m: a,
                    mm: a,
                    h: "Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
                    hh: a,
                    d: "Ð´ÐµÐ½ÑŒ",
                    dd: a,
                    M: "Ð¼Ñ–ÑÑÑ†ÑŒ",
                    MM: a,
                    y: "Ñ€Ñ–Ðº",
                    yy: a
                },
                meridiemParse: /Ð½Ð¾Ñ‡Ñ–|Ñ€Ð°Ð½ÐºÑƒ|Ð´Ð½Ñ|Ð²ÐµÑ‡Ð¾Ñ€Ð°/,
                isPM: function(e) {
                    return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡Ð¾Ñ€Ð°)$/.test(e)
                },
                meridiem: function(e) {
                    return 4 > e ? "Ð½Ð¾Ñ‡Ñ–" : 12 > e ? "Ñ€Ð°Ð½ÐºÑƒ" : 17 > e ? "Ð´Ð½Ñ" : "Ð²ÐµÑ‡Ð¾Ñ€Ð°"
                },
                ordinalParse: /\d{1,2}-(Ð¹|Ð³Ð¾)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                        case "w":
                        case "W":
                            return e + "-Ð¹";
                        case "D":
                            return e + "-Ð³Ð¾";
                        default:
                            return e
                    }
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("uz", {
                months: "ÑÐ½Ð²Ð°Ñ€ÑŒ_Ñ„ÐµÐ²Ñ€Ð°Ð»ÑŒ_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»ÑŒ_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ_Ð¾ÐºÑ‚ÑÐ±Ñ€ÑŒ_Ð½Ð¾ÑÐ±Ñ€ÑŒ_Ð´ÐµÐºÐ°Ð±Ñ€ÑŒ".split("_"),
                monthsShort: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½_Ð¸ÑŽÐ»_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split("_"),
                weekdays: "Ð¯ÐºÑˆÐ°Ð½Ð±Ð°_Ð”ÑƒÑˆÐ°Ð½Ð±Ð°_Ð¡ÐµÑˆÐ°Ð½Ð±Ð°_Ð§Ð¾Ñ€ÑˆÐ°Ð½Ð±Ð°_ÐŸÐ°Ð¹ÑˆÐ°Ð½Ð±Ð°_Ð–ÑƒÐ¼Ð°_Ð¨Ð°Ð½Ð±Ð°".split("_"),
                weekdaysShort: "Ð¯ÐºÑˆ_Ð”ÑƒÑˆ_Ð¡ÐµÑˆ_Ð§Ð¾Ñ€_ÐŸÐ°Ð¹_Ð–ÑƒÐ¼_Ð¨Ð°Ð½".split("_"),
                weekdaysMin: "Ð¯Ðº_Ð”Ñƒ_Ð¡Ðµ_Ð§Ð¾_ÐŸÐ°_Ð–Ñƒ_Ð¨Ð°".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM YYYY",
                    LLL: "D MMMM YYYY LT",
                    LLLL: "D MMMM YYYY, dddd LT"
                },
                calendar: {
                    sameDay: "[Ð‘ÑƒÐ³ÑƒÐ½ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                    nextDay: "[Ð­Ñ€Ñ‚Ð°Ð³Ð°] LT [Ð´Ð°]",
                    nextWeek: "dddd [ÐºÑƒÐ½Ð¸ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                    lastDay: "[ÐšÐµÑ‡Ð° ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                    lastWeek: "[Ð£Ñ‚Ð³Ð°Ð½] dddd [ÐºÑƒÐ½Ð¸ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "Ð¯ÐºÐ¸Ð½ %s Ð¸Ñ‡Ð¸Ð´Ð°",
                    past: "Ð‘Ð¸Ñ€ Ð½ÐµÑ‡Ð° %s Ð¾Ð»Ð´Ð¸Ð½",
                    s: "Ñ„ÑƒÑ€ÑÐ°Ñ‚",
                    m: "Ð±Ð¸Ñ€ Ð´Ð°ÐºÐ¸ÐºÐ°",
                    mm: "%d Ð´Ð°ÐºÐ¸ÐºÐ°",
                    h: "Ð±Ð¸Ñ€ ÑÐ¾Ð°Ñ‚",
                    hh: "%d ÑÐ¾Ð°Ñ‚",
                    d: "Ð±Ð¸Ñ€ ÐºÑƒÐ½",
                    dd: "%d ÐºÑƒÐ½",
                    M: "Ð±Ð¸Ñ€ Ð¾Ð¹",
                    MM: "%d Ð¾Ð¹",
                    y: "Ð±Ð¸Ñ€ Ð¹Ð¸Ð»",
                    yy: "%d Ð¹Ð¸Ð»"
                },
                week: {
                    dow: 1,
                    doy: 7
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("vi", {
                months: "thÃ¡ng 1_thÃ¡ng 2_thÃ¡ng 3_thÃ¡ng 4_thÃ¡ng 5_thÃ¡ng 6_thÃ¡ng 7_thÃ¡ng 8_thÃ¡ng 9_thÃ¡ng 10_thÃ¡ng 11_thÃ¡ng 12".split("_"),
                monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
                weekdays: "chá»§ nháº­t_thá»© hai_thá»© ba_thá»© tÆ°_thá»© nÄƒm_thá»© sÃ¡u_thá»© báº£y".split("_"),
                weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                longDateFormat: {
                    LT: "HH:mm",
                    LTS: "LT:ss",
                    L: "DD/MM/YYYY",
                    LL: "D MMMM [nÄƒm] YYYY",
                    LLL: "D MMMM [nÄƒm] YYYY LT",
                    LLLL: "dddd, D MMMM [nÄƒm] YYYY LT",
                    l: "DD/M/YYYY",
                    ll: "D MMM YYYY",
                    lll: "D MMM YYYY LT",
                    llll: "ddd, D MMM YYYY LT"
                },
                calendar: {
                    sameDay: "[HÃ´m nay lÃºc] LT",
                    nextDay: "[NgÃ y mai lÃºc] LT",
                    nextWeek: "dddd [tuáº§n tá»›i lÃºc] LT",
                    lastDay: "[HÃ´m qua lÃºc] LT",
                    lastWeek: "dddd [tuáº§n rá»“i lÃºc] LT",
                    sameElse: "L"
                },
                relativeTime: {
                    future: "%s tá»›i",
                    past: "%s trÆ°á»›c",
                    s: "vÃ i giÃ¢y",
                    m: "má»™t phÃºt",
                    mm: "%d phÃºt",
                    h: "má»™t giá»",
                    hh: "%d giá»",
                    d: "má»™t ngÃ y",
                    dd: "%d ngÃ y",
                    M: "má»™t thÃ¡ng",
                    MM: "%d thÃ¡ng",
                    y: "má»™t nÄƒm",
                    yy: "%d nÄƒm"
                },
                ordinalParse: /\d{1,2}/,
                ordinal: function(e) {
                    return e
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("zh-cn", {
                months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split("_"),
                monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split("_"),
                weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split("_"),
                weekdaysShort: "å‘¨æ—¥_å‘¨ä¸€_å‘¨äºŒ_å‘¨ä¸‰_å‘¨å››_å‘¨äº”_å‘¨å…­".split("_"),
                weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
                longDateFormat: {
                    LT: "Ahç‚¹mm",
                    LTS: "Ahç‚¹måˆ†sç§’",
                    L: "YYYY-MM-DD",
                    LL: "YYYYå¹´MMMDæ—¥",
                    LLL: "YYYYå¹´MMMDæ—¥LT",
                    LLLL: "YYYYå¹´MMMDæ—¥ddddLT",
                    l: "YYYY-MM-DD",
                    ll: "YYYYå¹´MMMDæ—¥",
                    lll: "YYYYå¹´MMMDæ—¥LT",
                    llll: "YYYYå¹´MMMDæ—¥ddddLT"
                },
                meridiemParse: /å‡Œæ™¨|æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "å‡Œæ™¨" === t || "æ—©ä¸Š" === t || "ä¸Šåˆ" === t ? e : "ä¸‹åˆ" === t || "æ™šä¸Š" === t ? e + 12 : e >= 11 ? e : e + 12
                },
                meridiem: function(e, t) {
                    var a = 100 * e + t;
                    return 600 > a ? "å‡Œæ™¨" : 900 > a ? "æ—©ä¸Š" : 1130 > a ? "ä¸Šåˆ" : 1230 > a ? "ä¸­åˆ" : 1800 > a ? "ä¸‹åˆ" : "æ™šä¸Š"
                },
                calendar: {
                    sameDay: function() {
                        return 0 === this.minutes() ? "[ä»Šå¤©]Ah[ç‚¹æ•´]" : "[ä»Šå¤©]LT"
                    },
                    nextDay: function() {
                        return 0 === this.minutes() ? "[æ˜Žå¤©]Ah[ç‚¹æ•´]" : "[æ˜Žå¤©]LT"
                    },
                    lastDay: function() {
                        return 0 === this.minutes() ? "[æ˜¨å¤©]Ah[ç‚¹æ•´]" : "[æ˜¨å¤©]LT"
                    },
                    nextWeek: function() {
                        var t, a;
                        return t = e().startOf("week"), a = this.unix() - t.unix() >= 604800 ? "[ä¸‹]" : "[æœ¬]", 0 === this.minutes() ? a + "dddAhç‚¹æ•´" : a + "dddAhç‚¹mm"
                    },
                    lastWeek: function() {
                        var t, a;
                        return t = e().startOf("week"), a = this.unix() < t.unix() ? "[ä¸Š]" : "[æœ¬]", 0 === this.minutes() ? a + "dddAhç‚¹æ•´" : a + "dddAhç‚¹mm"
                    },
                    sameElse: "LL"
                },
                ordinalParse: /\d{1,2}(æ—¥|æœˆ|å‘¨)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "æ—¥";
                        case "M":
                            return e + "æœˆ";
                        case "w":
                        case "W":
                            return e + "å‘¨";
                        default:
                            return e
                    }
                },
                relativeTime: {
                    future: "%så†…",
                    past: "%så‰",
                    s: "å‡ ç§’",
                    m: "1åˆ†é’Ÿ",
                    mm: "%dåˆ†é’Ÿ",
                    h: "1å°æ—¶",
                    hh: "%då°æ—¶",
                    d: "1å¤©",
                    dd: "%då¤©",
                    M: "1ä¸ªæœˆ",
                    MM: "%dä¸ªæœˆ",
                    y: "1å¹´",
                    yy: "%då¹´"
                },
                week: {
                    dow: 1,
                    doy: 4
                }
            })
        }),
        function(e) {
            e(Dt)
        }(function(e) {
            return e.defineLocale("zh-tw", {
                months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split("_"),
                monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split("_"),
                weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split("_"),
                weekdaysShort: "é€±æ—¥_é€±ä¸€_é€±äºŒ_é€±ä¸‰_é€±å››_é€±äº”_é€±å…­".split("_"),
                weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
                longDateFormat: {
                    LT: "Ahé»žmm",
                    LTS: "Ahé»žmåˆ†sç§’",
                    L: "YYYYå¹´MMMDæ—¥",
                    LL: "YYYYå¹´MMMDæ—¥",
                    LLL: "YYYYå¹´MMMDæ—¥LT",
                    LLLL: "YYYYå¹´MMMDæ—¥ddddLT",
                    l: "YYYYå¹´MMMDæ—¥",
                    ll: "YYYYå¹´MMMDæ—¥",
                    lll: "YYYYå¹´MMMDæ—¥LT",
                    llll: "YYYYå¹´MMMDæ—¥ddddLT"
                },
                meridiemParse: /æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
                meridiemHour: function(e, t) {
                    return 12 === e && (e = 0), "æ—©ä¸Š" === t || "ä¸Šåˆ" === t ? e : "ä¸­åˆ" === t ? e >= 11 ? e : e + 12 : "ä¸‹åˆ" === t || "æ™šä¸Š" === t ? e + 12 : void 0
                },
                meridiem: function(e, t) {
                    var a = 100 * e + t;
                    return 900 > a ? "æ—©ä¸Š" : 1130 > a ? "ä¸Šåˆ" : 1230 > a ? "ä¸­åˆ" : 1800 > a ? "ä¸‹åˆ" : "æ™šä¸Š"
                },
                calendar: {
                    sameDay: "[ä»Šå¤©]LT",
                    nextDay: "[æ˜Žå¤©]LT",
                    nextWeek: "[ä¸‹]ddddLT",
                    lastDay: "[æ˜¨å¤©]LT",
                    lastWeek: "[ä¸Š]ddddLT",
                    sameElse: "L"
                },
                ordinalParse: /\d{1,2}(æ—¥|æœˆ|é€±)/,
                ordinal: function(e, t) {
                    switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "æ—¥";
                        case "M":
                            return e + "æœˆ";
                        case "w":
                        case "W":
                            return e + "é€±";
                        default:
                            return e
                    }
                },
                relativeTime: {
                    future: "%så…§",
                    past: "%så‰",
                    s: "å¹¾ç§’",
                    m: "ä¸€åˆ†é˜",
                    mm: "%dåˆ†é˜",
                    h: "ä¸€å°æ™‚",
                    hh: "%då°æ™‚",
                    d: "ä¸€å¤©",
                    dd: "%då¤©",
                    M: "ä¸€å€‹æœˆ",
                    MM: "%då€‹æœˆ",
                    y: "ä¸€å¹´",
                    yy: "%då¹´"
                }
            })
        }), Dt.locale("en"), Ft ? module.exports = Dt : "function" == typeof define && define.amd ? (define(function(e, t, a) {
            return a.config && a.config() && a.config().noGlobal === !0 && (wt.moment = Tt), Dt
        }), Yt(!0)) : Yt()
}).call(this), ! function(e) {
    "use strict";
    if ("function" == typeof define && define.amd) define(["jquery", "moment"], e);
    else if ("object" == typeof exports) e(require("jquery"), require("moment"));
    else {
        if ("undefined" == typeof jQuery) throw "bootstrap-datetimepicker requires jQuery to be loaded first";
        if ("undefined" == typeof moment) throw "bootstrap-datetimepicker requires Moment.js to be loaded first";
        e(jQuery, moment)
    }
}(function(e, t) {
    "use strict";
    if (!t) throw new Error("bootstrap-datetimepicker requires Moment.js to be loaded first");
    var a = function(a, n) {
        var r, s, i, d, o, _, u, l = {},
            m = !0,
            c = !1,
            h = !1,
            M = 0,
            f = [{
                clsName: "days",
                navFnc: "M",
                navStep: 1
            }, {
                clsName: "months",
                navFnc: "y",
                navStep: 1
            }, {
                clsName: "years",
                navFnc: "y",
                navStep: 10
            }, {
                clsName: "decades",
                navFnc: "y",
                navStep: 100
            }],
            p = ["days", "months", "years", "decades"],
            L = ["top", "bottom", "auto"],
            y = ["left", "right", "auto"],
            Y = ["default", "top", "bottom"],
            D = {
                up: 38,
                38: "up",
                down: 40,
                40: "down",
                left: 37,
                37: "left",
                right: 39,
                39: "right",
                tab: 9,
                9: "tab",
                escape: 27,
                27: "escape",
                enter: 13,
                13: "enter",
                pageUp: 33,
                33: "pageUp",
                pageDown: 34,
                34: "pageDown",
                shift: 16,
                16: "shift",
                control: 17,
                17: "control",
                space: 32,
                32: "space",
                t: 84,
                84: "t",
                "delete": 46,
                46: "delete"
            },
            T = {},
            k = function(e) {
                var a, r, s, i, d, o = !1;
                return void 0 !== t.tz && void 0 !== n.timeZone && null !== n.timeZone && "" !== n.timeZone && (o = !0), void 0 === e || null === e ? a = o ? t().tz(n.timeZone).startOf("d") : t().startOf("d") : o ? (r = t().tz(n.timeZone).utcOffset(), s = t(e, _, n.useStrict).utcOffset(), s !== r ? (i = t().tz(n.timeZone).format("Z"), d = t(e, _, n.useStrict).format("YYYY-MM-DD[T]HH:mm:ss") + i, a = t(d, _, n.useStrict).tz(n.timeZone)) : a = t(e, _, n.useStrict).tz(n.timeZone)) : a = t(e, _, n.useStrict), a
            },
            g = function(e) {
                if ("string" != typeof e || e.length > 1) throw new TypeError("isEnabled expects a single character string parameter");
                switch (e) {
                    case "y":
                        return -1 !== o.indexOf("Y");
                    case "M":
                        return -1 !== o.indexOf("M");
                    case "d":
                        return -1 !== o.toLowerCase().indexOf("d");
                    case "h":
                    case "H":
                        return -1 !== o.toLowerCase().indexOf("h");
                    case "m":
                        return -1 !== o.indexOf("m");
                    case "s":
                        return -1 !== o.indexOf("s");
                    default:
                        return !1
                }
            },
            w = function() {
                return g("h") || g("m") || g("s")
            },
            v = function() {
                return g("y") || g("M") || g("d")
            },
            b = function() {
                var t = e("<thead>").append(e("<tr>").append(e("<th>").addClass("prev").attr("data-action", "previous").append(e("<span>").addClass(n.icons.previous))).append(e("<th>").addClass("picker-switch").attr("data-action", "pickerSwitch").attr("colspan", n.calendarWeeks ? "6" : "5")).append(e("<th>").addClass("next").attr("data-action", "next").append(e("<span>").addClass(n.icons.next)))),
                    a = e("<tbody>").append(e("<tr>").append(e("<td>").attr("colspan", n.calendarWeeks ? "8" : "7")));
                return [e("<div>").addClass("datepicker-days").append(e("<table>").addClass("table-condensed").append(t).append(e("<tbody>"))), e("<div>").addClass("datepicker-months").append(e("<table>").addClass("table-condensed").append(t.clone()).append(a.clone())), e("<div>").addClass("datepicker-years").append(e("<table>").addClass("table-condensed").append(t.clone()).append(a.clone())), e("<div>").addClass("datepicker-decades").append(e("<table>").addClass("table-condensed").append(t.clone()).append(a.clone()))]
            },
            S = function() {
                var t = e("<tr>"),
                    a = e("<tr>"),
                    r = e("<tr>");
                return g("h") && (t.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.incrementHour
                }).addClass("btn").attr("data-action", "incrementHours").append(e("<span>").addClass(n.icons.up)))), a.append(e("<td>").append(e("<span>").addClass("timepicker-hour").attr({
                    "data-time-component": "hours",
                    title: n.tooltips.pickHour
                }).attr("data-action", "showHours"))), r.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.decrementHour
                }).addClass("btn").attr("data-action", "decrementHours").append(e("<span>").addClass(n.icons.down))))), g("m") && (g("h") && (t.append(e("<td>").addClass("separator")), a.append(e("<td>").addClass("separator").html(":")), r.append(e("<td>").addClass("separator"))), t.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.incrementMinute
                }).addClass("btn").attr("data-action", "incrementMinutes").append(e("<span>").addClass(n.icons.up)))), a.append(e("<td>").append(e("<span>").addClass("timepicker-minute").attr({
                    "data-time-component": "minutes",
                    title: n.tooltips.pickMinute
                }).attr("data-action", "showMinutes"))), r.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.decrementMinute
                }).addClass("btn").attr("data-action", "decrementMinutes").append(e("<span>").addClass(n.icons.down))))), g("s") && (g("m") && (t.append(e("<td>").addClass("separator")), a.append(e("<td>").addClass("separator").html(":")), r.append(e("<td>").addClass("separator"))), t.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.incrementSecond
                }).addClass("btn").attr("data-action", "incrementSeconds").append(e("<span>").addClass(n.icons.up)))), a.append(e("<td>").append(e("<span>").addClass("timepicker-second").attr({
                    "data-time-component": "seconds",
                    title: n.tooltips.pickSecond
                }).attr("data-action", "showSeconds"))), r.append(e("<td>").append(e("<a>").attr({
                    href: "#",
                    tabindex: "-1",
                    title: n.tooltips.decrementSecond
                }).addClass("btn").attr("data-action", "decrementSeconds").append(e("<span>").addClass(n.icons.down))))), d || (t.append(e("<td>").addClass("separator")), a.append(e("<td>").append(e("<button>").addClass("btn btn-primary").attr({
                    "data-action": "togglePeriod",
                    tabindex: "-1",
                    title: n.tooltips.togglePeriod
                }))), r.append(e("<td>").addClass("separator"))), e("<div>").addClass("timepicker-picker").append(e("<table>").addClass("table-condensed").append([t, a, r]))
            },
            x = function() {
                var t = e("<div>").addClass("timepicker-hours").append(e("<table>").addClass("table-condensed")),
                    a = e("<div>").addClass("timepicker-minutes").append(e("<table>").addClass("table-condensed")),
                    n = e("<div>").addClass("timepicker-seconds").append(e("<table>").addClass("table-condensed")),
                    r = [S()];
                return g("h") && r.push(t), g("m") && r.push(a), g("s") && r.push(n), r
            },
            j = function() {
                var t = [];
                return n.showTodayButton && t.push(e("<td>").append(e("<a>").attr({
                    "data-action": "today",
                    title: n.tooltips.today
                }).append(e("<span>").addClass(n.icons.today)))), !n.sideBySide && v() && w() && t.push(e("<td>").append(e("<a>").attr({
                    "data-action": "togglePicker",
                    title: n.tooltips.selectTime
                }).append(e("<span>").addClass(n.icons.time)))), n.showClear && t.push(e("<td>").append(e("<a>").attr({
                    "data-action": "clear",
                    title: n.tooltips.clear
                }).append(e("<span>").addClass(n.icons.clear)))), n.showClose && t.push(e("<td>").append(e("<a>").attr({
                    "data-action": "close",
                    title: n.tooltips.close
                }).append(e("<span>").addClass(n.icons.close)))), e("<table>").addClass("table-condensed").append(e("<tbody>").append(e("<tr>").append(t)))
            },
            W = function() {
                var t = e("<div>").addClass("bootstrap-datetimepicker-widget dropdown-menu"),
                    a = e("<div>").addClass("datepicker").append(b()),
                    r = e("<div>").addClass("timepicker").append(x()),
                    s = e("<ul>").addClass("list-unstyled"),
                    i = e("<li>").addClass("picker-switch" + (n.collapse ? " accordion-toggle" : "")).append(j());
                return n.inline && t.removeClass("dropdown-menu"), d && t.addClass("usetwentyfour"), g("s") && !d && t.addClass("wider"), n.sideBySide && v() && w() ? (t.addClass("timepicker-sbs"), "top" === n.toolbarPlacement && t.append(i), t.append(e("<div>").addClass("row").append(a.addClass("col-md-6")).append(r.addClass("col-md-6"))), "bottom" === n.toolbarPlacement && t.append(i), t) : ("top" === n.toolbarPlacement && s.append(i), v() && s.append(e("<li>").addClass(n.collapse && w() ? "collapse in" : "").append(a)), "default" === n.toolbarPlacement && s.append(i), w() && s.append(e("<li>").addClass(n.collapse && v() ? "collapse" : "").append(r)), "bottom" === n.toolbarPlacement && s.append(i), t.append(s))
            },
            H = function() {
                var t, r = {};
                return t = a.is("input") || n.inline ? a.data() : a.find("input").data(), t.dateOptions && t.dateOptions instanceof Object && (r = e.extend(!0, r, t.dateOptions)), e.each(n, function(e) {
                    var a = "date" + e.charAt(0).toUpperCase() + e.slice(1);
                    void 0 !== t[a] && (r[e] = t[a])
                }), r
            },
            P = function() {
                var t, r = (c || a).position(),
                    s = (c || a).offset(),
                    i = n.widgetPositioning.vertical,
                    d = n.widgetPositioning.horizontal;
                if (n.widgetParent) t = n.widgetParent.append(h);
                else if (a.is("input")) t = a.after(h).parent();
                else {
                    if (n.inline) return void(t = a.append(h));
                    t = a, a.children().first().after(h)
                }
                if ("auto" === i && (i = s.top + 1.5 * h.height() >= e(window).height() + e(window).scrollTop() && h.height() + a.outerHeight() < s.top ? "top" : "bottom"), "auto" === d && (d = t.width() < s.left + h.outerWidth() / 2 && s.left + h.outerWidth() > e(window).width() ? "right" : "left"), "top" === i ? h.addClass("top").removeClass("bottom") : h.addClass("bottom").removeClass("top"), "right" === d ? h.addClass("pull-right") : h.removeClass("pull-right"), "relative" !== t.css("position") && (t = t.parents().filter(function() {
                        return "relative" === e(this).css("position")
                    }).first()), 0 === t.length) throw new Error("datetimepicker component should be placed within a relative positioned container");
                h.css({
                    top: "top" === i ? "auto" : r.top + a.outerHeight(),
                    bottom: "top" === i ? r.top + a.outerHeight() : "auto",
                    left: "left" === d ? t === a ? 0 : r.left : "auto",
                    right: "left" === d ? "auto" : t.outerWidth() - a.outerWidth() - (t === a ? 0 : r.left)
                })
            },
            C = function(e) {
                "dp.change" === e.type && (e.date && e.date.isSame(e.oldDate) || !e.date && !e.oldDate) || a.trigger(e)
            },
            O = function(e) {
                "y" === e && (e = "YYYY"), C({
                    type: "dp.update",
                    change: e,
                    viewDate: s.clone()
                })
            },
            E = function(e) {
                h && (e && (u = Math.max(M, Math.min(3, u + e))), h.find(".datepicker > div").hide().filter(".datepicker-" + f[u].clsName).show())
            },
            F = function() {
                var t = e("<tr>"),
                    a = s.clone().startOf("w").startOf("d");
                for (n.calendarWeeks === !0 && t.append(e("<th>").addClass("cw").text("#")); a.isBefore(s.clone().endOf("w"));) t.append(e("<th>").addClass("dow").text(a.format("dd"))), a.add(1, "d");
                h.find(".datepicker-days thead").append(t)
            },
            z = function(e) {
                return n.disabledDates[e.format("YYYY-MM-DD")] === !0
            },
            A = function(e) {
                return n.enabledDates[e.format("YYYY-MM-DD")] === !0
            },
            I = function(e) {
                return n.disabledHours[e.format("H")] === !0
            },
            J = function(e) {
                return n.enabledHours[e.format("H")] === !0
            },
            G = function(t, a) {
                if (!t.isValid()) return !1;
                if (n.disabledDates && "d" === a && z(t)) return !1;
                if (n.enabledDates && "d" === a && !A(t)) return !1;
                if (n.minDate && t.isBefore(n.minDate, a)) return !1;
                if (n.maxDate && t.isAfter(n.maxDate, a)) return !1;
                if (n.daysOfWeekDisabled && "d" === a && -1 !== n.daysOfWeekDisabled.indexOf(t.day())) return !1;
                if (n.disabledHours && ("h" === a || "m" === a || "s" === a) && I(t)) return !1;
                if (n.enabledHours && ("h" === a || "m" === a || "s" === a) && !J(t)) return !1;
                if (n.disabledTimeIntervals && ("h" === a || "m" === a || "s" === a)) {
                    var r = !1;
                    if (e.each(n.disabledTimeIntervals, function() {
                            return t.isBetween(this[0], this[1]) ? (r = !0, !1) : void 0
                        }), r) return !1
                }
                return !0
            },
            U = function() {
                for (var t = [], a = s.clone().startOf("y").startOf("d"); a.isSame(s, "y");) t.push(e("<span>").attr("data-action", "selectMonth").addClass("month").text(a.format("MMM"))), a.add(1, "M");
                h.find(".datepicker-months td").empty().append(t)
            },
            N = function() {
                var t = h.find(".datepicker-months"),
                    a = t.find("th"),
                    i = t.find("tbody").find("span");
                a.eq(0).find("span").attr("title", n.tooltips.prevYear), a.eq(1).attr("title", n.tooltips.selectYear), a.eq(2).find("span").attr("title", n.tooltips.nextYear), t.find(".disabled").removeClass("disabled"), G(s.clone().subtract(1, "y"), "y") || a.eq(0).addClass("disabled"), a.eq(1).text(s.year()), G(s.clone().add(1, "y"), "y") || a.eq(2).addClass("disabled"), i.removeClass("active"), r.isSame(s, "y") && !m && i.eq(r.month()).addClass("active"), i.each(function(t) {
                    G(s.clone().month(t), "M") || e(this).addClass("disabled")
                })
            },
            q = function() {
                var e = h.find(".datepicker-years"),
                    t = e.find("th"),
                    a = s.clone().subtract(5, "y"),
                    i = s.clone().add(6, "y"),
                    d = "";
                for (t.eq(0).find("span").attr("title", n.tooltips.prevDecade), t.eq(1).attr("title", n.tooltips.selectDecade), t.eq(2).find("span").attr("title", n.tooltips.nextDecade), e.find(".disabled").removeClass("disabled"), n.minDate && n.minDate.isAfter(a, "y") && t.eq(0).addClass("disabled"), t.eq(1).text(a.year() + "-" + i.year()), n.maxDate && n.maxDate.isBefore(i, "y") && t.eq(2).addClass("disabled"); !a.isAfter(i, "y");) d += '<span data-action="selectYear" class="year' + (a.isSame(r, "y") && !m ? " active" : "") + (G(a, "y") ? "" : " disabled") + '">' + a.year() + "</span>", a.add(1, "y");
                e.find("td").html(d)
            },
            B = function() {
                var e = h.find(".datepicker-decades"),
                    a = e.find("th"),
                    i = t({
                        y: s.year() - s.year() % 100 - 1
                    }),
                    d = i.clone().add(100, "y"),
                    o = i.clone(),
                    _ = "";
                for (a.eq(0).find("span").attr("title", n.tooltips.prevCentury), a.eq(2).find("span").attr("title", n.tooltips.nextCentury), e.find(".disabled").removeClass("disabled"), (i.isSame(t({
                        y: 1900
                    })) || n.minDate && n.minDate.isAfter(i, "y")) && a.eq(0).addClass("disabled"), a.eq(1).text(i.year() + "-" + d.year()), (i.isSame(t({
                        y: 2e3
                    })) || n.maxDate && n.maxDate.isBefore(d, "y")) && a.eq(2).addClass("disabled"); !i.isAfter(d, "y");) _ += '<span data-action="selectDecade" class="decade' + (i.isSame(r, "y") ? " active" : "") + (G(i, "y") ? "" : " disabled") + '" data-selection="' + (i.year() + 6) + '">' + (i.year() + 1) + " - " + (i.year() + 12) + "</span>", i.add(12, "y");
                _ += "<span></span><span></span><span></span>", e.find("td").html(_), a.eq(1).text(o.year() + 1 + "-" + i.year())
            },
            V = function() {
                var t, a, i, d, o = h.find(".datepicker-days"),
                    _ = o.find("th"),
                    u = [];
                if (v()) {
                    for (_.eq(0).find("span").attr("title", n.tooltips.prevMonth), _.eq(1).attr("title", n.tooltips.selectMonth), _.eq(2).find("span").attr("title", n.tooltips.nextMonth), o.find(".disabled").removeClass("disabled"), _.eq(1).text(s.format(n.dayViewHeaderFormat)), G(s.clone().subtract(1, "M"), "M") || _.eq(0).addClass("disabled"), G(s.clone().add(1, "M"), "M") || _.eq(2).addClass("disabled"), t = s.clone().startOf("M").startOf("w").startOf("d"), d = 0; 42 > d; d++) 0 === t.weekday() && (a = e("<tr>"), n.calendarWeeks && a.append('<td class="cw">' + t.week() + "</td>"), u.push(a)), i = "", t.isBefore(s, "M") && (i += " old"), t.isAfter(s, "M") && (i += " new"), t.isSame(r, "d") && !m && (i += " active"), G(t, "d") || (i += " disabled"), t.isSame(k(), "d") && (i += " today"), (0 === t.day() || 6 === t.day()) && (i += " weekend"), a.append('<td data-action="selectDay" data-day="' + t.format("L") + '" class="day' + i + '">' + t.date() + "</td>"), t.add(1, "d");
                    o.find("tbody").empty().append(u), N(), q(), B()
                }
            },
            Z = function() {
                var t = h.find(".timepicker-hours table"),
                    a = s.clone().startOf("d"),
                    n = [],
                    r = e("<tr>");
                for (s.hour() > 11 && !d && a.hour(12); a.isSame(s, "d") && (d || s.hour() < 12 && a.hour() < 12 || s.hour() > 11);) a.hour() % 4 === 0 && (r = e("<tr>"), n.push(r)), r.append('<td data-action="selectHour" class="hour' + (G(a, "h") ? "" : " disabled") + '">' + a.format(d ? "HH" : "hh") + "</td>"), a.add(1, "h");
                t.empty().append(n)
            },
            $ = function() {
                for (var t = h.find(".timepicker-minutes table"), a = s.clone().startOf("h"), r = [], i = e("<tr>"), d = 1 === n.stepping ? 5 : n.stepping; s.isSame(a, "h");) a.minute() % (4 * d) === 0 && (i = e("<tr>"), r.push(i)), i.append('<td data-action="selectMinute" class="minute' + (G(a, "m") ? "" : " disabled") + '">' + a.format("mm") + "</td>"), a.add(d, "m");
                t.empty().append(r)
            },
            R = function() {
                for (var t = h.find(".timepicker-seconds table"), a = s.clone().startOf("m"), n = [], r = e("<tr>"); s.isSame(a, "m");) a.second() % 20 === 0 && (r = e("<tr>"), n.push(r)), r.append('<td data-action="selectSecond" class="second' + (G(a, "s") ? "" : " disabled") + '">' + a.format("ss") + "</td>"), a.add(5, "s");
                t.empty().append(n)
            },
            K = function() {
                var e, t, a = h.find(".timepicker span[data-time-component]");
                d || (e = h.find(".timepicker [data-action=togglePeriod]"), t = r.clone().add(r.hours() >= 12 ? -12 : 12, "h"), e.text(r.format("A")), G(t, "h") ? e.removeClass("disabled") : e.addClass("disabled")), a.filter("[data-time-component=hours]").text(r.format(d ? "HH" : "hh")), a.filter("[data-time-component=minutes]").text(r.format("mm")), a.filter("[data-time-component=seconds]").text(r.format("ss")), Z(), $(), R()
            },
            X = function() {
                h && (V(), K())
            },
            Q = function(e) {
                var t = m ? null : r;
                return e ? (e = e.clone().locale(n.locale), 1 !== n.stepping && e.minutes(Math.round(e.minutes() / n.stepping) * n.stepping % 60).seconds(0), void(G(e) ? (r = e, s = r.clone(), i.val(r.format(o)), a.data("date", r.format(o)), m = !1, X(), C({
                    type: "dp.change",
                    date: r.clone(),
                    oldDate: t
                })) : (n.keepInvalid || i.val(m ? "" : r.format(o)), C({
                    type: "dp.error",
                    date: e
                })))) : (m = !0, i.val(""), a.data("date", ""), C({
                    type: "dp.change",
                    date: !1,
                    oldDate: t
                }), void X())
            },
            et = function() {
                var t = !1;
                return h ? (h.find(".collapse").each(function() {
                    var a = e(this).data("collapse");
                    return a && a.transitioning ? (t = !0, !1) : !0
                }), t ? l : (c && c.hasClass("btn") && c.toggleClass("active"), h.hide(), e(window).off("resize", P), h.off("click", "[data-action]"), h.off("mousedown", !1), h.remove(), h = !1, C({
                    type: "dp.hide",
                    date: r.clone()
                }), i.blur(), l)) : l
            },
            tt = function() {
                Q(null)
            },
            at = {
                next: function() {
                    var e = f[u].navFnc;
                    s.add(f[u].navStep, e), V(), O(e)
                },
                previous: function() {
                    var e = f[u].navFnc;
                    s.subtract(f[u].navStep, e), V(), O(e)
                },
                pickerSwitch: function() {
                    E(1)
                },
                selectMonth: function(t) {
                    var a = e(t.target).closest("tbody").find("span").index(e(t.target));
                    s.month(a), u === M ? (Q(r.clone().year(s.year()).month(s.month())), n.inline || et()) : (E(-1), V()), O("M")
                },
                selectYear: function(t) {
                    var a = parseInt(e(t.target).text(), 10) || 0;
                    s.year(a), u === M ? (Q(r.clone().year(s.year())), n.inline || et()) : (E(-1), V()), O("YYYY")
                },
                selectDecade: function(t) {
                    var a = parseInt(e(t.target).data("selection"), 10) || 0;
                    s.year(a), u === M ? (Q(r.clone().year(s.year())), n.inline || et()) : (E(-1), V()), O("YYYY")
                },
                selectDay: function(t) {
                    var a = s.clone();
                    e(t.target).is(".old") && a.subtract(1, "M"), e(t.target).is(".new") && a.add(1, "M"), Q(a.date(parseInt(e(t.target).text(), 10))), w() || n.keepOpen || n.inline || et()
                },
                incrementHours: function() {
                    var e = r.clone().add(1, "h");
                    G(e, "h") && Q(e)
                },
                incrementMinutes: function() {
                    var e = r.clone().add(n.stepping, "m");
                    G(e, "m") && Q(e)
                },
                incrementSeconds: function() {
                    var e = r.clone().add(1, "s");
                    G(e, "s") && Q(e)
                },
                decrementHours: function() {
                    var e = r.clone().subtract(1, "h");
                    G(e, "h") && Q(e)
                },
                decrementMinutes: function() {
                    var e = r.clone().subtract(n.stepping, "m");
                    G(e, "m") && Q(e)
                },
                decrementSeconds: function() {
                    var e = r.clone().subtract(1, "s");
                    G(e, "s") && Q(e)
                },
                togglePeriod: function() {
                    Q(r.clone().add(r.hours() >= 12 ? -12 : 12, "h"))
                },
                togglePicker: function(t) {
                    var a, r = e(t.target),
                        s = r.closest("ul"),
                        i = s.find(".in"),
                        d = s.find(".collapse:not(.in)");
                    if (i && i.length) {
                        if (a = i.data("collapse"), a && a.transitioning) return;
                        i.collapse ? (i.collapse("hide"), d.collapse("show")) : (i.removeClass("in"), d.addClass("in")), r.is("span") ? r.toggleClass(n.icons.time + " " + n.icons.date) : r.find("span").toggleClass(n.icons.time + " " + n.icons.date)
                    }
                },
                showPicker: function() {
                    h.find(".timepicker > div:not(.timepicker-picker)").hide(), h.find(".timepicker .timepicker-picker").show()
                },
                showHours: function() {
                    h.find(".timepicker .timepicker-picker").hide(), h.find(".timepicker .timepicker-hours").show()
                },
                showMinutes: function() {
                    h.find(".timepicker .timepicker-picker").hide(), h.find(".timepicker .timepicker-minutes").show()
                },
                showSeconds: function() {
                    h.find(".timepicker .timepicker-picker").hide(), h.find(".timepicker .timepicker-seconds").show()
                },
                selectHour: function(t) {
                    var a = parseInt(e(t.target).text(), 10);
                    d || (r.hours() >= 12 ? 12 !== a && (a += 12) : 12 === a && (a = 0)), Q(r.clone().hours(a)), at.showPicker.call(l)
                },
                selectMinute: function(t) {
                    Q(r.clone().minutes(parseInt(e(t.target).text(), 10))), at.showPicker.call(l)
                },
                selectSecond: function(t) {
                    Q(r.clone().seconds(parseInt(e(t.target).text(), 10))), at.showPicker.call(l)
                },
                clear: tt,
                today: function() {
                    var e = k();
                    G(e, "d") && Q(e)
                },
                close: et
            },
            nt = function(t) {
                return e(t.currentTarget).is(".disabled") ? !1 : (at[e(t.currentTarget).data("action")].apply(l, arguments), !1)
            },
            rt = function() {
                var t, a = {
                    year: function(e) {
                        return e.month(0).date(1).hours(0).seconds(0).minutes(0)
                    },
                    month: function(e) {
                        return e.date(1).hours(0).seconds(0).minutes(0)
                    },
                    day: function(e) {
                        return e.hours(0).seconds(0).minutes(0)
                    },
                    hour: function(e) {
                        return e.seconds(0).minutes(0)
                    },
                    minute: function(e) {
                        return e.seconds(0)
                    }
                };
                return i.prop("disabled") || !n.ignoreReadonly && i.prop("readonly") || h ? l : (void 0 !== i.val() && 0 !== i.val().trim().length ? Q(it(i.val().trim())) : n.useCurrent && m && (i.is("input") && 0 === i.val().trim().length || n.inline) && (t = k(), "string" == typeof n.useCurrent && (t = a[n.useCurrent](t)), Q(t)), h = W(), F(), U(), h.find(".timepicker-hours").hide(), h.find(".timepicker-minutes").hide(), h.find(".timepicker-seconds").hide(), X(), E(), e(window).on("resize", P), h.on("click", "[data-action]", nt), h.on("mousedown", !1), c && c.hasClass("btn") && c.toggleClass("active"), h.show(), P(), n.focusOnShow && !i.is(":focus") && i.focus(), C({
                    type: "dp.show"
                }), l)
            },
            st = function() {
                return h ? et() : rt()
            },
            it = function(e) {
                return e = void 0 === n.parseInputDate ? t.isMoment(e) || e instanceof Date ? t(e) : k(e) : n.parseInputDate(e), e.locale(n.locale), e
            },
            dt = function(e) {
                var t, a, r, s, i = null,
                    d = [],
                    o = {},
                    _ = e.which,
                    u = "p";
                T[_] = u;
                for (t in T) T.hasOwnProperty(t) && T[t] === u && (d.push(t), parseInt(t, 10) !== _ && (o[t] = !0));
                for (t in n.keyBinds)
                    if (n.keyBinds.hasOwnProperty(t) && "function" == typeof n.keyBinds[t] && (r = t.split(" "), r.length === d.length && D[_] === r[r.length - 1])) {
                        for (s = !0, a = r.length - 2; a >= 0; a--)
                            if (!(D[r[a]] in o)) {
                                s = !1;
                                break
                            }
                        if (s) {
                            i = n.keyBinds[t];
                            break
                        }
                    }
                i && (i.call(l, h), e.stopPropagation(), e.preventDefault())
            },
            ot = function(e) {
                T[e.which] = "r", e.stopPropagation(), e.preventDefault()
            },
            _t = function(t) {
                var a = e(t.target).val().trim(),
                    n = a ? it(a) : null;
                return Q(n), t.stopImmediatePropagation(), !1
            },
            ut = function() {
                i.on({
                    change: _t,
                    blur: n.debug ? "" : et,
                    keydown: dt,
                    keyup: ot,
                    focus: n.allowInputToggle ? rt : ""
                }), a.is("input") ? i.on({
                    focus: rt
                }) : c && (c.on("click", st), c.on("mousedown", !1))
            },
            lt = function() {
                i.off({
                    change: _t,
                    blur: blur,
                    keydown: dt,
                    keyup: ot,
                    focus: n.allowInputToggle ? et : ""
                }), a.is("input") ? i.off({
                    focus: rt
                }) : c && (c.off("click", st), c.off("mousedown", !1))
            },
            mt = function(t) {
                var a = {};
                return e.each(t, function() {
                    var e = it(this);
                    e.isValid() && (a[e.format("YYYY-MM-DD")] = !0)
                }), Object.keys(a).length ? a : !1
            },
            ct = function(t) {
                var a = {};
                return e.each(t, function() {
                    a[this] = !0
                }), Object.keys(a).length ? a : !1
            },
            ht = function() {
                var e = n.format || "L LT";
                o = e.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function(e) {
                    var t = r.localeData().longDateFormat(e) || e;
                    return t.replace(/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function(e) {
                        return r.localeData().longDateFormat(e) || e
                    })
                }), _ = n.extraFormats ? n.extraFormats.slice() : [], _.indexOf(e) < 0 && _.indexOf(o) < 0 && _.push(o), d = o.toLowerCase().indexOf("a") < 1 && o.replace(/\[.*?\]/g, "").indexOf("h") < 1, g("y") && (M = 2), g("M") && (M = 1), g("d") && (M = 0), u = Math.max(M, u), m || Q(r)
            };
        if (l.destroy = function() {
                et(), lt(), a.removeData("DateTimePicker"), a.removeData("date")
            }, l.toggle = st, l.show = rt, l.hide = et, l.disable = function() {
                return et(), c && c.hasClass("btn") && c.addClass("disabled"), i.prop("disabled", !0), l
            }, l.enable = function() {
                return c && c.hasClass("btn") && c.removeClass("disabled"), i.prop("disabled", !1), l
            }, l.ignoreReadonly = function(e) {
                if (0 === arguments.length) return n.ignoreReadonly;
                if ("boolean" != typeof e) throw new TypeError("ignoreReadonly () expects a boolean parameter");
                return n.ignoreReadonly = e, l
            }, l.options = function(t) {
                if (0 === arguments.length) return e.extend(!0, {}, n);
                if (!(t instanceof Object)) throw new TypeError("options() options parameter should be an object");
                return e.extend(!0, n, t), e.each(n, function(e, t) {
                    if (void 0 === l[e]) throw new TypeError("option " + e + " is not recognized!");
                    l[e](t)
                }), l
            }, l.date = function(e) {
                if (0 === arguments.length) return m ? null : r.clone();
                if (!(null === e || "string" == typeof e || t.isMoment(e) || e instanceof Date)) throw new TypeError("date() parameter must be one of [null, string, moment or Date]");
                return Q(null === e ? null : it(e)), l
            }, l.format = function(e) {
                if (0 === arguments.length) return n.format;
                if ("string" != typeof e && ("boolean" != typeof e || e !== !1)) throw new TypeError("format() expects a sting or boolean:false parameter " + e);
                return n.format = e, o && ht(), l
            }, l.timeZone = function(e) {
                return 0 === arguments.length ? n.timeZone : (n.timeZone = e, l)
            }, l.dayViewHeaderFormat = function(e) {
                if (0 === arguments.length) return n.dayViewHeaderFormat;
                if ("string" != typeof e) throw new TypeError("dayViewHeaderFormat() expects a string parameter");
                return n.dayViewHeaderFormat = e, l
            }, l.extraFormats = function(e) {
                if (0 === arguments.length) return n.extraFormats;
                if (e !== !1 && !(e instanceof Array)) throw new TypeError("extraFormats() expects an array or false parameter");
                return n.extraFormats = e, _ && ht(), l
            }, l.disabledDates = function(t) {
                if (0 === arguments.length) return n.disabledDates ? e.extend({}, n.disabledDates) : n.disabledDates;
                if (!t) return n.disabledDates = !1, X(), l;
                if (!(t instanceof Array)) throw new TypeError("disabledDates() expects an array parameter");
                return n.disabledDates = mt(t), n.enabledDates = !1, X(), l
            }, l.enabledDates = function(t) {
                if (0 === arguments.length) return n.enabledDates ? e.extend({}, n.enabledDates) : n.enabledDates;
                if (!t) return n.enabledDates = !1, X(), l;
                if (!(t instanceof Array)) throw new TypeError("enabledDates() expects an array parameter");
                return n.enabledDates = mt(t), n.disabledDates = !1, X(), l
            }, l.daysOfWeekDisabled = function(e) {
                if (0 === arguments.length) return n.daysOfWeekDisabled.splice(0);
                if ("boolean" == typeof e && !e) return n.daysOfWeekDisabled = !1, X(), l;
                if (!(e instanceof Array)) throw new TypeError("daysOfWeekDisabled() expects an array parameter");
                if (n.daysOfWeekDisabled = e.reduce(function(e, t) {
                        return t = parseInt(t, 10), t > 6 || 0 > t || isNaN(t) ? e : (-1 === e.indexOf(t) && e.push(t), e)
                    }, []).sort(), n.useCurrent && !n.keepInvalid) {
                    for (var t = 0; !G(r, "d");) {
                        if (r.add(1, "d"), 7 === t) throw "Tried 7 times to find a valid date";
                        t++
                    }
                    Q(r)
                }
                return X(), l
            }, l.maxDate = function(e) {
                if (0 === arguments.length) return n.maxDate ? n.maxDate.clone() : n.maxDate;
                if ("boolean" == typeof e && e === !1) return n.maxDate = !1, X(), l;
                "string" == typeof e && ("now" === e || "moment" === e) && (e = k());
                var t = it(e);
                if (!t.isValid()) throw new TypeError("maxDate() Could not parse date parameter: " + e);
                if (n.minDate && t.isBefore(n.minDate)) throw new TypeError("maxDate() date parameter is before options.minDate: " + t.format(o));
                return n.maxDate = t, n.useCurrent && !n.keepInvalid && r.isAfter(e) && Q(n.maxDate), s.isAfter(t) && (s = t.clone().subtract(n.stepping, "m")), X(), l
            }, l.minDate = function(e) {
                if (0 === arguments.length) return n.minDate ? n.minDate.clone() : n.minDate;
                if ("boolean" == typeof e && e === !1) return n.minDate = !1, X(), l;
                "string" == typeof e && ("now" === e || "moment" === e) && (e = k());
                var t = it(e);
                if (!t.isValid()) throw new TypeError("minDate() Could not parse date parameter: " + e);
                if (n.maxDate && t.isAfter(n.maxDate)) throw new TypeError("minDate() date parameter is after options.maxDate: " + t.format(o));
                return n.minDate = t, n.useCurrent && !n.keepInvalid && r.isBefore(e) && Q(n.minDate), s.isBefore(t) && (s = t.clone().add(n.stepping, "m")), X(), l
            }, l.defaultDate = function(e) {
                if (0 === arguments.length) return n.defaultDate ? n.defaultDate.clone() : n.defaultDate;
                if (!e) return n.defaultDate = !1, l;
                "string" == typeof e && ("now" === e || "moment" === e) && (e = k());
                var t = it(e);
                if (!t.isValid()) throw new TypeError("defaultDate() Could not parse date parameter: " + e);
                if (!G(t)) throw new TypeError("defaultDate() date passed is invalid according to component setup validations");
                return n.defaultDate = t, (n.defaultDate && n.inline || "" === i.val().trim()) && Q(n.defaultDate), l
            }, l.locale = function(e) {
                if (0 === arguments.length) return n.locale;
                if (!t.localeData(e)) throw new TypeError("locale() locale " + e + " is not loaded from moment locales!");
                return n.locale = e, r.locale(n.locale), s.locale(n.locale), o && ht(), h && (et(), rt()), l
            }, l.stepping = function(e) {
                return 0 === arguments.length ? n.stepping : (e = parseInt(e, 10), (isNaN(e) || 1 > e) && (e = 1), n.stepping = e, l)
            }, l.useCurrent = function(e) {
                var t = ["year", "month", "day", "hour", "minute"];
                if (0 === arguments.length) return n.useCurrent;
                if ("boolean" != typeof e && "string" != typeof e) throw new TypeError("useCurrent() expects a boolean or string parameter");
                if ("string" == typeof e && -1 === t.indexOf(e.toLowerCase())) throw new TypeError("useCurrent() expects a string parameter of " + t.join(", "));
                return n.useCurrent = e, l
            }, l.collapse = function(e) {
                if (0 === arguments.length) return n.collapse;
                if ("boolean" != typeof e) throw new TypeError("collapse() expects a boolean parameter");
                return n.collapse === e ? l : (n.collapse = e, h && (et(), rt()), l)
            }, l.icons = function(t) {
                if (0 === arguments.length) return e.extend({}, n.icons);
                if (!(t instanceof Object)) throw new TypeError("icons() expects parameter to be an Object");
                return e.extend(n.icons, t), h && (et(), rt()), l
            }, l.tooltips = function(t) {
                if (0 === arguments.length) return e.extend({}, n.tooltips);
                if (!(t instanceof Object)) throw new TypeError("tooltips() expects parameter to be an Object");
                return e.extend(n.tooltips, t), h && (et(), rt()), l
            }, l.useStrict = function(e) {
                if (0 === arguments.length) return n.useStrict;
                if ("boolean" != typeof e) throw new TypeError("useStrict() expects a boolean parameter");
                return n.useStrict = e, l
            }, l.sideBySide = function(e) {
                if (0 === arguments.length) return n.sideBySide;
                if ("boolean" != typeof e) throw new TypeError("sideBySide() expects a boolean parameter");
                return n.sideBySide = e, h && (et(), rt()), l
            }, l.viewMode = function(e) {
                if (0 === arguments.length) return n.viewMode;
                if ("string" != typeof e) throw new TypeError("viewMode() expects a string parameter");
                if (-1 === p.indexOf(e)) throw new TypeError("viewMode() parameter must be one of (" + p.join(", ") + ") value");
                return n.viewMode = e, u = Math.max(p.indexOf(e), M), E(), l
            }, l.toolbarPlacement = function(e) {
                if (0 === arguments.length) return n.toolbarPlacement;
                if ("string" != typeof e) throw new TypeError("toolbarPlacement() expects a string parameter");
                if (-1 === Y.indexOf(e)) throw new TypeError("toolbarPlacement() parameter must be one of (" + Y.join(", ") + ") value");
                return n.toolbarPlacement = e, h && (et(), rt()), l
            }, l.widgetPositioning = function(t) {
                if (0 === arguments.length) return e.extend({}, n.widgetPositioning);
                if ("[object Object]" !== {}.toString.call(t)) throw new TypeError("widgetPositioning() expects an object variable");
                if (t.horizontal) {
                    if ("string" != typeof t.horizontal) throw new TypeError("widgetPositioning() horizontal variable must be a string");
                    if (t.horizontal = t.horizontal.toLowerCase(), -1 === y.indexOf(t.horizontal)) throw new TypeError("widgetPositioning() expects horizontal parameter to be one of (" + y.join(", ") + ")");
                    n.widgetPositioning.horizontal = t.horizontal
                }
                if (t.vertical) {
                    if ("string" != typeof t.vertical) throw new TypeError("widgetPositioning() vertical variable must be a string");
                    if (t.vertical = t.vertical.toLowerCase(), -1 === L.indexOf(t.vertical)) throw new TypeError("widgetPositioning() expects vertical parameter to be one of (" + L.join(", ") + ")");
                    n.widgetPositioning.vertical = t.vertical
                }
                return X(), l
            }, l.calendarWeeks = function(e) {
                if (0 === arguments.length) return n.calendarWeeks;
                if ("boolean" != typeof e) throw new TypeError("calendarWeeks() expects parameter to be a boolean value");
                return n.calendarWeeks = e, X(), l
            }, l.showTodayButton = function(e) {
                if (0 === arguments.length) return n.showTodayButton;
                if ("boolean" != typeof e) throw new TypeError("showTodayButton() expects a boolean parameter");
                return n.showTodayButton = e, h && (et(), rt()), l
            }, l.showClear = function(e) {
                if (0 === arguments.length) return n.showClear;
                if ("boolean" != typeof e) throw new TypeError("showClear() expects a boolean parameter");
                return n.showClear = e, h && (et(), rt()), l
            }, l.widgetParent = function(t) {
                if (0 === arguments.length) return n.widgetParent;
                if ("string" == typeof t && (t = e(t)), null !== t && "string" != typeof t && !(t instanceof e)) throw new TypeError("widgetParent() expects a string or a jQuery object parameter");
                return n.widgetParent = t, h && (et(), rt()), l
            }, l.keepOpen = function(e) {
                if (0 === arguments.length) return n.keepOpen;
                if ("boolean" != typeof e) throw new TypeError("keepOpen() expects a boolean parameter");
                return n.keepOpen = e, l
            }, l.focusOnShow = function(e) {
                if (0 === arguments.length) return n.focusOnShow;
                if ("boolean" != typeof e) throw new TypeError("focusOnShow() expects a boolean parameter");
                return n.focusOnShow = e, l
            }, l.inline = function(e) {
                if (0 === arguments.length) return n.inline;
                if ("boolean" != typeof e) throw new TypeError("inline() expects a boolean parameter");
                return n.inline = e, l
            }, l.clear = function() {
                return tt(), l
            }, l.keyBinds = function(e) {
                return n.keyBinds = e, l
            }, l.getMoment = function(e) {
                return k(e)
            }, l.debug = function(e) {
                if ("boolean" != typeof e) throw new TypeError("debug() expects a boolean parameter");
                return n.debug = e, l
            }, l.allowInputToggle = function(e) {
                if (0 === arguments.length) return n.allowInputToggle;
                if ("boolean" != typeof e) throw new TypeError("allowInputToggle() expects a boolean parameter");
                return n.allowInputToggle = e, l
            }, l.showClose = function(e) {
                if (0 === arguments.length) return n.showClose;
                if ("boolean" != typeof e) throw new TypeError("showClose() expects a boolean parameter");
                return n.showClose = e, l
            }, l.keepInvalid = function(e) {
                if (0 === arguments.length) return n.keepInvalid;
                if ("boolean" != typeof e) throw new TypeError("keepInvalid() expects a boolean parameter");
                return n.keepInvalid = e, l
            }, l.datepickerInput = function(e) {
                if (0 === arguments.length) return n.datepickerInput;
                if ("string" != typeof e) throw new TypeError("datepickerInput() expects a string parameter");
                return n.datepickerInput = e, l
            }, l.parseInputDate = function(e) {
                if (0 === arguments.length) return n.parseInputDate;
                if ("function" != typeof e) throw new TypeError("parseInputDate() sholud be as function");
                return n.parseInputDate = e, l
            }, l.disabledTimeIntervals = function(t) {
                if (0 === arguments.length) return n.disabledTimeIntervals ? e.extend({}, n.disabledTimeIntervals) : n.disabledTimeIntervals;
                if (!t) return n.disabledTimeIntervals = !1, X(), l;
                if (!(t instanceof Array)) throw new TypeError("disabledTimeIntervals() expects an array parameter");
                return n.disabledTimeIntervals = t, X(), l
            }, l.disabledHours = function(t) {
                if (0 === arguments.length) return n.disabledHours ? e.extend({}, n.disabledHours) : n.disabledHours;
                if (!t) return n.disabledHours = !1, X(), l;
                if (!(t instanceof Array)) throw new TypeError("disabledHours() expects an array parameter");
                if (n.disabledHours = ct(t), n.enabledHours = !1, n.useCurrent && !n.keepInvalid) {
                    for (var a = 0; !G(r, "h");) {
                        if (r.add(1, "h"), 24 === a) throw "Tried 24 times to find a valid date";
                        a++
                    }
                    Q(r)
                }
                return X(), l
            }, l.enabledHours = function(t) {
                if (0 === arguments.length) return n.enabledHours ? e.extend({}, n.enabledHours) : n.enabledHours;
                if (!t) return n.enabledHours = !1, X(), l;
                if (!(t instanceof Array)) throw new TypeError("enabledHours() expects an array parameter");
                if (n.enabledHours = ct(t), n.disabledHours = !1, n.useCurrent && !n.keepInvalid) {
                    for (var a = 0; !G(r, "h");) {
                        if (r.add(1, "h"), 24 === a) throw "Tried 24 times to find a valid date";
                        a++
                    }
                    Q(r)
                }
                return X(), l
            }, l.viewDate = function(e) {
                if (0 === arguments.length) return s.clone();
                if (!e) return s = r.clone(), l;
                if (!("string" == typeof e || t.isMoment(e) || e instanceof Date)) throw new TypeError("viewDate() parameter must be one of [string, moment or Date]");
                return s = it(e), O(), l
            }, a.is("input")) i = a;
        else if (i = a.find(n.datepickerInput), 0 === i.size()) i = a.find("input");
        else if (!i.is("input")) throw new Error('CSS class "' + n.datepickerInput + '" cannot be applied to non input element');
        if (a.hasClass("input-group") && (c = a.find(0 === a.find(".datepickerbutton").size() ? ".input-group-addon" : ".datepickerbutton")), !n.inline && !i.is("input")) throw new Error("Could not initialize DateTimePicker without an input element");
        return r = k(), s = r.clone(), e.extend(!0, n, H()), l.options(n), ht(), ut(), i.prop("disabled") && l.disable(), i.is("input") && 0 !== i.val().trim().length ? Q(it(i.val().trim())) : n.defaultDate && void 0 === i.attr("placeholder") && Q(n.defaultDate), n.inline && rt(), l
    };
    e.fn.datetimepicker = function(t) {
        return this.each(function() {
            var n = e(this);
            n.data("DateTimePicker") || (t = e.extend(!0, {}, e.fn.datetimepicker.defaults, t), n.data("DateTimePicker", a(n, t)))
        })
    }, e.fn.datetimepicker.defaults = {
        timeZone: "Etc/UTC",
        format: !1,
        dayViewHeaderFormat: "MMMM YYYY",
        extraFormats: !1,
        stepping: 1,
        minDate: !1,
        maxDate: !1,
        useCurrent: !0,
        collapse: !0,
        locale: t.locale(),
        defaultDate: !1,
        disabledDates: !1,
        enabledDates: !1,
        icons: {
            time: "glyphicon glyphicon-time",
            date: "glyphicon glyphicon-calendar",
            up: "fa fa-caret-up",
            down: "fa fa-caret-down",
            previous: "fa fa-angle-left",
            next: "fa fa-angle-right",
            today: "glyphicon glyphicon-screenshot",
            clear: "glyphicon glyphicon-trash",
            close: "glyphicon glyphicon-remove"
        },
        tooltips: {
            today: "Go to today",
            clear: "Clear selection",
            close: "Close the picker",
            selectMonth: "Select Month",
            prevMonth: "Previous Month",
            nextMonth: "Next Month",
            selectYear: "Select Year",
            prevYear: "Previous Year",
            nextYear: "Next Year",
            selectDecade: "Select Decade",
            prevDecade: "Previous Decade",
            nextDecade: "Next Decade",
            prevCentury: "Previous Century",
            nextCentury: "Next Century",
            pickHour: "Pick Hour",
            incrementHour: "Increment Hour",
            decrementHour: "Decrement Hour",
            pickMinute: "Pick Minute",
            incrementMinute: "Increment Minute",
            decrementMinute: "Decrement Minute",
            pickSecond: "Pick Second",
            incrementSecond: "Increment Second",
            decrementSecond: "Decrement Second",
            togglePeriod: "Toggle Period",
            selectTime: "Select Time"
        },
        useStrict: !1,
        sideBySide: !1,
        daysOfWeekDisabled: !1,
        calendarWeeks: !1,
        viewMode: "days",
        toolbarPlacement: "default",
        showTodayButton: !1,
        showClear: !1,
        showClose: !1,
        widgetPositioning: {
            horizontal: "auto",
            vertical: "auto"
        },
        widgetParent: null,
        ignoreReadonly: !1,
        keepOpen: !1,
        focusOnShow: !0,
        inline: !1,
        keepInvalid: !1,
        datepickerInput: ".datepickerinput",
        keyBinds: {
            up: function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    this.date(e.find(".datepicker").is(":visible") ? t.clone().subtract(7, "d") : t.clone().add(this.stepping(), "m"))
                }
            },
            down: function(e) {
                if (!e) return void this.show();
                var t = this.date() || this.getMoment();
                this.date(e.find(".datepicker").is(":visible") ? t.clone().add(7, "d") : t.clone().subtract(this.stepping(), "m"))
            },
            "control up": function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    this.date(e.find(".datepicker").is(":visible") ? t.clone().subtract(1, "y") : t.clone().add(1, "h"))
                }
            },
            "control down": function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    this.date(e.find(".datepicker").is(":visible") ? t.clone().add(1, "y") : t.clone().subtract(1, "h"))
                }
            },
            left: function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    e.find(".datepicker").is(":visible") && this.date(t.clone().subtract(1, "d"))
                }
            },
            right: function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    e.find(".datepicker").is(":visible") && this.date(t.clone().add(1, "d"))
                }
            },
            pageUp: function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    e.find(".datepicker").is(":visible") && this.date(t.clone().subtract(1, "M"))
                }
            },
            pageDown: function(e) {
                if (e) {
                    var t = this.date() || this.getMoment();
                    e.find(".datepicker").is(":visible") && this.date(t.clone().add(1, "M"))
                }
            },
            enter: function() {
                this.hide()
            },
            escape: function() {
                this.hide()
            },
            "control space": function(e) {
                e.find(".timepicker").is(":visible") && e.find('.btn[data-action="togglePeriod"]').click()
            },
            t: function() {
                this.date(this.getMoment())
            },
            "delete": function() {
                this.clear()
            }
        },
        debug: !1,
        allowInputToggle: !1,
        disabledTimeIntervals: !1,
        disabledHours: !1,
        enabledHours: !1,
        viewDate: !1
    }
});;;